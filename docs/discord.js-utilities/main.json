{
  "typeDocJsonParserVersion": "2.3.2",
  "id": 0,
  "name": "@sapphire/discord.js-utilities",
  "version": "5.0.0",
  "classes": [
    {
      "id": 366,
      "name": "LazyPaginatedMessage",
      "comment": {
        "description": "This is a LazyPaginatedMessage. Instead of resolving all pages that are functions on \nrun\n will resolve when requested.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "LazyPaginatedMessage.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 763,
        "name": "PaginatedMessage",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 377,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 222,
          "file": "PaginatedMessage.ts",
          "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
        },
        "parameters": [
          {
            "id": 379,
            "name": "__namedParameters",
            "type": {
              "kind": "reference",
              "id": 995,
              "name": "PaginatedMessageOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 415,
          "name": "#thisMazeWasNotMeantForYouContent",
          "comment": {
            "description": "The response we send when someone gets into an invalid flow",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 416,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 417,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                      "line": 117,
                      "character": 39,
                      "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"This maze wasn't meant for you...what did you do.\""
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    417
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                  "line": 117,
                  "character": 37,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                }
              ]
            }
          }
        },
        {
          "id": 422,
          "name": "actions",
          "comment": {
            "description": "The actions which are to be used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 143,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 959,
                "name": "PaginatedMessageAction",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 420,
          "name": "collector",
          "comment": {
            "description": "The collector used for handling component interactions.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "InteractionCollector",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageComponentInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 541,
          "name": "constructor",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1499,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 763,
              "name": "PaginatedMessage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 427,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator to show after the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.embedFooterSeparator```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 175,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 429,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client having the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "default",
                "text": "```PaginatedMessage.emitPartialDMChannelWarning```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 189,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 434,
          "name": "hasEmittedMaxPageWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the maximum amount of pages in the \nSelectMenu\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 205,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 435,
          "name": "hasEmittedPartialDMChannelWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the \nPaginatedMessage\n being called in a \n`DMChannel`\n\nwithout the client having the \n`'Channel'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 214,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 424,
          "name": "idle",
          "comment": {
            "description": "The amount of milliseconds to idle before the paginator is closed.",
            "blockTags": [
              {
                "name": "default",
                "text": "14.5 minutes"
              },
              {
                "name": "remark",
                "text": "This is to ensure it is a bit before interactions expire."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 155,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 423,
          "name": "index",
          "comment": {
            "description": "The handler's current page/message index.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 148,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 421,
          "name": "messages",
          "comment": {
            "description": "The pages which were converted from \npages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "null"
                },
                {
                  "kind": "reference",
                  "id": 1002,
                  "name": "PaginatedMessagePage",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 426,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.pageIndexPrefix```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 418,
          "name": "pages",
          "comment": {
            "description": "The pages to be converted to \nmessages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1002,
              "name": "PaginatedMessagePage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 430,
          "name": "paginatedMessageData",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "components"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 419,
          "name": "response",
          "comment": {
            "description": "The response message used to edit on page changes.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 1348,
                "name": "NonModalInteraction",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 431,
          "name": "selectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 195,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 432,
          "name": "selectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 197,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 428,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.stopPaginatedMessageCustomIds```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 181,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 425,
          "name": "template",
          "comment": {
            "description": "The template for this \nPaginatedMessage\n.\nYou can use templates to set defaults that will apply to each and every page in the \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 161,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1020,
            "name": "PaginatedMessageMessageOptionsUnion",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 433,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 199,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 367,
          "name": "defaultActions",
          "comment": {
            "description": "The default actions of this handler.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1275,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 959,
              "name": "PaginatedMessageAction",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 370,
          "name": "deletionStopReasons",
          "comment": {
            "description": "The reasons sent by \nInteractionCollector#end\n\nevent when the message (or its owner) has been deleted.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1360,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 372,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator for the page index in the embed footer.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"•\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by passing \n`embedFooterSeparator`\n in the options of the constructor."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.embedFooterSeparator = '|';\n// This will make the separator of the embed footer something like \"Page 1/2 | Today at 4:20\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1390,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 368,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setEmitPartialDMChannelWarning(newBoolean)`"
              },
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1340,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 374,
          "name": "handlers",
          "comment": {
            "description": "The current \nInteractionCollector\n handlers that are active.\nThe key is the ID of of the author who sent the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that any given author can only trigger 1 \nPaginatedMessage\n.\nThis is important for performance reasons, and users should not have more than 1 \nPaginatedMessage\n open at once.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1408,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 373,
          "name": "messages",
          "comment": {
            "description": "The messages that are currently being handled by a \nPaginatedMessage\n\nThe key is the ID of the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that only 1 \nPaginatedMessage\n can run on a specified message at once.\nThis is important when having an editable commands solution.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1399,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 371,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.pageIndexPrefix = 'Page';\n// This will make the footer of the embed something like \"Page 1/2\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1375,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 375,
          "name": "selectMenuOptions",
          "comment": {
            "description": "A generator for \nMessageSelectOption\n that will be used to generate the options for the \nMessageSelectMenu\n.\nWe do not allow overwriting the \nMessageSelectOption#value\n property with this, as it is vital to how we handle\nselect menu interactions.",
            "blockTags": [
              {
                "name": "pageIndex",
                "text": "The index of the page to add to the \nMessageSelectMenu\n. We will add 1 to this number because our pages are 0 based,\nso this will represent the pages as seen by the user."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tlabel: `Page ${pageIndex}`\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.selectMenuOptions = (pageIndex) => ({\n\t label: `Go to page: ${pageIndex}`,\n\t description: 'This is a description'\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1435,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 369,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "['@sapphire/paginated-messages.stop']"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setStopPaginatedMessageCustomIds(customIds)`"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.stopPaginatedMessageCustomIds = ['my-custom-stop-custom-id'];\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1354,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 376,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": "A generator for \nMessageComponentInteraction#reply\n that will be called and sent whenever an untargeted user interacts with one of the buttons.\nWhen modifying this it is recommended that the message is set to be ephemeral so only the user that is pressing the buttons can see them.\nFurthermore, we also recommend setting \n`allowedMentions: { users: [], roles: [] }`\n, so you don't have to worry about accidentally pinging anyone.\n\nWhen setting just a string, we will add \n`{ ephemeral: true, allowedMentions: { users: [], roles: [] } }`\n for you.",
            "blockTags": [
              {
                "name": "targetUser",
                "text": "The \nUser\n this \nPaginatedMessage\n was intended for."
              },
              {
                "name": "interactionUser",
                "text": "The \nUser\n that actually clicked the button."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tcontent: `Please stop interacting with the components on this message. They are only for ${Formatters.userMention(targetUser.id)}.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\n// We  will add ephemeral and no allowed mention for string only overwrites\nPaginatedMessage.wrongUserInteractionReply = (targetUser) =>\n    `These buttons are only for ${Formatters.userMention(targetUser.id)}. Press them as much as you want, but I won't do anything with your clicks.`;\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\nimport { Formatters } from 'discord.js';\n\nPaginatedMessage.wrongUserInteractionReply = (targetUser) => ({\n\tcontent: `These buttons are only for ${Formatters.userMention(\n\t\ttargetUser.id\n\t)}. Press them as much as you want, but I won't do anything with your clicks.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1479,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 464,
          "name": "addAction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 413,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 465,
              "name": "addAction",
              "comment": {
                "description": "Adds an action to the existing ones. This will be added as the last action.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the action."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 466,
                  "name": "action",
                  "type": {
                    "kind": "reference",
                    "id": 959,
                    "name": "PaginatedMessageAction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 461,
          "name": "addActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 403,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 462,
              "name": "addActions",
              "comment": {
                "description": "Adds actions to the existing ones. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the actions."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 463,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 476,
          "name": "addAsyncPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 540,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 477,
              "name": "addAsyncPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageBuilder\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageBuilder(async (builder) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 478,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 479,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 540,
                              "character": 55,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L540"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 480,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 481,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 482,
          "name": "addAsyncPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 610,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 483,
              "name": "addAsyncPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbed(async (embed) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn embed;\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 484,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 485,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 610,
                              "character": 49,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L610"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 486,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 487,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 488,
          "name": "addAsyncPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 752,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 489,
              "name": "addAsyncPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage().addAsyncPageEmbeds(async (embed0, embed1, embed2) => {\n\tconst someRemoteData = (await fetch('https://contoso.com/api/users')) as any;\n\n\tfor (const [index, user] of Object.entries(someRemoteData.users.slice(0, 10)) as [`${0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10}`, any][]) {\n\t\tswitch (index) {\n\t\t\tcase '0': {\n\t\t\t\tembed0.setColor('#FF0000').setDescription('example description 1').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '1': {\n\t\t\t\tembed1.setColor('#00FF00').setDescription('example description 2').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '2': {\n\t\t\t\tembed2.setColor('#0000FF').setDescription('example description 3').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [embed0, embed1, embed2];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 490,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 491,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 755,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L755"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 492,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 493,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 494,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 495,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 496,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 497,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 498,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 499,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 500,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 501,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 502,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "name": "MessageEmbed",
                                      "qualifiedName": "MessageEmbed",
                                      "package": "discord.js"
                                    }
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 473,
          "name": "addPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 455,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 474,
              "name": "addPage",
              "comment": {
                "description": "Adds a page to the existing ones. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "While you can use this method you should first check out\n\naddPageBuilder\n,\n\naddPageContent\n and\n\naddPageEmbed\n as\nthese are easier functional methods of adding pages and will likely already suffice for your needs."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 475,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 385,
          "name": "addPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 31,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 386,
              "name": "addPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageBuilder\n. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder((builder) => {\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { MessageEmbed } = require('discord.js');\nconst { MessageBuilder, PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst builder = new MessageBuilder()\n\t.setContent('example content')\n\t.setEmbeds([embed]);\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder(builder);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 387,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 388,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts",
                              "line": 31,
                              "character": 59,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts#L31"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 389,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 390,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 111,
                                "name": "MessageBuilder"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 391,
          "name": "addPageContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 35,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 392,
              "name": "addPageContent",
              "comment": {
                "description": "Adds a page to the existing ones using simple message content. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageContent('example content');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 393,
                  "name": "content",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 394,
          "name": "addPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 395,
              "name": "addPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed((embed) => {\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn embed;\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed(embed);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 396,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 397,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts",
                              "line": 39,
                              "character": 53,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts#L39"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 398,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 399,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 400,
          "name": "addPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 43,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 401,
              "name": "addPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds((embed1, embed2, embed3) => { // You can add up to 10 embeds\n\t\tembed1\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description 1');\n\n\t\tembed2\n\t\t\t.setColor('#00FF00')\n\t\t\t.setDescription('example description 2');\n\n\t\tembed3\n\t\t\t.setColor('#0000FF')\n\t\t\t.setDescription('example description 3');\n\n\t\treturn [embed1, embed2, embed3];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 402,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 403,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts",
                              "line": 46,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/LazyPaginatedMessage.ts#L46"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 404,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 405,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 406,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 407,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 408,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 409,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 410,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 411,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 412,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 413,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 414,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "name": "MessageEmbed",
                                  "qualifiedName": "MessageEmbed",
                                  "package": "discord.js"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 503,
          "name": "addPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 796,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 504,
              "name": "addPages",
              "comment": {
                "description": "Add pages to the existing ones. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 505,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 533,
          "name": "applyFooter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 534,
              "name": "applyFooter",
              "comment": {
                "description": "Applies footer to the last embed of the page",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The message options with the footer applied"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 535,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 536,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1020,
                "name": "PaginatedMessageMessageOptionsUnion",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 510,
          "name": "clone",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 955,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 511,
              "name": "clone",
              "comment": {
                "description": "Clones the current handler into a new instance.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 524,
          "name": "handleCollect",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1090,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 525,
              "name": "handleCollect",
              "comment": {
                "description": "Handles the \n`collect`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 526,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 527,
                  "name": "channel",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "DMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "PartialDMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "NewsChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "TextChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ThreadChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "VoiceChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 528,
                  "name": "interaction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "SelectMenuInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ButtonInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 529,
          "name": "handleEnd",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1145,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 530,
              "name": "handleEnd",
              "comment": {
                "description": "Handles the \n`end`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 531,
                  "name": "_",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "SelectMenuInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "ButtonInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 532,
                  "name": "reason",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 520,
          "name": "handlePageLoad",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1070,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 521,
              "name": "handlePageLoad",
              "comment": {
                "description": "Handles the load of a page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 522,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 523,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 467,
          "name": "hasPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 430,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 468,
              "name": "hasPage",
              "comment": {
                "description": "Checks whether or not the handler has a specific page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 469,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 382,
          "name": "resolvePage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 383,
              "name": "resolvePage",
              "comment": {
                "description": "Resolves the page corresponding with the given index. This also resolves the index's before and after the given index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 384,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 380,
          "name": "resolvePagesOnRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "LazyPaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 381,
              "name": "resolvePagesOnRun",
              "comment": {
                "description": "Only resolves the page corresponding with the handler's current index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 537,
          "name": "resolvePaginatedMessageInternationalizationContext",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 538,
              "name": "resolvePaginatedMessageInternationalizationContext",
              "comment": {
                "description": "Constructs a \nPaginatedMessageInternationalizationContext",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A constructed \nPaginatedMessageInternationalizationContext"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 539,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 540,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1021,
                "name": "PaginatedMessageInternationalizationContext",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 506,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 819,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 507,
              "name": "run",
              "comment": {
                "description": "Executes the \nPaginatedMessage\n and sends the pages corresponding with \nindex\n.\nThe handler will start collecting message component interactions.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "Please note that for \nPaginatedMessage\n to work in DMs to your client, you need to add the \n`'CHANNEL'`\n partial to your \n`client.options.partials`\n.\nMessage based commands can always be used in DMs, whereas Chat Input interactions can only be used in DMs when they are registered globally."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 508,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 509,
                  "name": "target",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 366,
                    "name": "LazyPaginatedMessage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 457,
          "name": "setActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 393,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 458,
              "name": "setActions",
              "comment": {
                "description": "Clears all current actions and sets them. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "You can retrieve the default actions for the regular pagination"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  ...PaginatedMessage.defaultActions,\n])\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message Buttons by providing \n`style`\n, \n`customId`\n, \n`type`\n, \n`run`\n and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'PRIMARY',\n    label: 'My Button',\n    customId: 'custom_button',\n    type: Constants.MessageComponentTypes.BUTTON,\n    run: (context) => console.log(context)\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message **Link** Buttons by providing \n`style`\n, \n`url`\n, \n`type`\n, and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'LINK',\n    label: 'Sapphire Website',\n    emoji: '🔷',\n    url: 'https://sapphirejs.dev',\n    type: Constants.MessageComponentTypes.BUTTON\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Select Menus by providing \n`customId`\n, \n`type`\n, and \n`run`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    customId: 'custom_menu',\n    type: Constants.MessageComponentTypes.SELECT_MENU,\n    run: (context) => console.log(context) // Do something here\n  }\n], true);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 459,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 460,
                  "name": "includeDefaultActions",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 448,
          "name": "setEmitPartialDMChannelWarning",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 304,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 449,
              "name": "setEmitPartialDMChannelWarning",
              "comment": {
                "description": "Sets the \nemitPartialDMChannelWarning\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 450,
                  "name": "emitPartialDMChannelWarning",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 454,
          "name": "setIdle",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 322,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 455,
              "name": "setIdle",
              "comment": {
                "description": "Sets the amount of time to idle before the paginator is closed.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 456,
                  "name": "idle",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 451,
          "name": "setIndex",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 313,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 452,
              "name": "setIndex",
              "comment": {
                "description": "Sets the handler's current page/message index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 453,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 470,
          "name": "setPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 438,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 471,
              "name": "setPages",
              "comment": {
                "description": "Clears all current pages and messages and sets them. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 472,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 436,
          "name": "setSelectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 260,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 437,
              "name": "setSelectMenuOptions",
              "comment": {
                "description": "Sets the \nselectMenuOptions\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 438,
                  "name": "newOptions",
                  "type": {
                    "kind": "reference",
                    "id": 1008,
                    "name": "PaginatedMessageSelectMenuOptionsFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 439,
          "name": "setSelectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 271,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 440,
              "name": "setSelectMenuPlaceholder",
              "comment": {
                "description": "Sets the \nselectMenuPlaceholder\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 441,
                  "name": "placeholder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 445,
          "name": "setStopPaginatedMessageCustomIds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 293,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 446,
              "name": "setStopPaginatedMessageCustomIds",
              "comment": {
                "description": "Sets the \nstopPaginatedMessageCustomIds\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 447,
                  "name": "stopPaginatedMessageCustomIds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 516,
          "name": "setUpCollector",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1037,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 517,
              "name": "setUpCollector",
              "comment": {
                "description": "Sets up the message's collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 518,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "TextBasedChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 519,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 512,
          "name": "setUpMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 973,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 513,
              "name": "setUpMessage",
              "comment": {
                "description": "Sets up the message.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 514,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 515,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 442,
          "name": "setWrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 282,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 443,
              "name": "setWrongUserInteractionReply",
              "comment": {
                "description": "Sets the \nwrongUserInteractionReply\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 444,
                  "name": "wrongUserInteractionReply",
                  "type": {
                    "kind": "reference",
                    "id": 1013,
                    "name": "PaginatedMessageWrongUserInteractionReplyFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 366,
                "name": "LazyPaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        }
      ]
    },
    {
      "id": 111,
      "name": "MessageBuilder",
      "comment": {
        "description": "A message builder class, it implements the \nMessageOptions\n interface.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "MessageBuilder.ts",
        "path": "packages/discord.js-utilities/src/lib/builders"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [
        {
          "kind": "reference",
          "id": null,
          "name": "MessageOptions",
          "packageName": "discord.js",
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 113,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 45,
          "file": "MessageBuilder.ts",
          "path": "packages/discord.js-utilities/src/lib/builders"
        },
        "parameters": [
          {
            "id": 115,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 108,
              "name": "MessageBuilderResolvable",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 120,
          "name": "allowedMentions",
          "comment": {
            "description": "Which mentions should be parsed from the message content.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageMentionOptions",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 118,
          "name": "content",
          "comment": {
            "description": "The content for the message. If set to undefined and the builder is used to edit, the content will not be\nreplaced.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 119,
          "name": "embeds",
          "comment": {
            "description": "The embeds for the message. If set to undefined and the builder is used to edit, the embed will not be replaced.",
            "blockTags": [
              {
                "name": "remark",
                "text": "There is a maximum of 10 embeds in 1 message"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageEmbed",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageEmbedOptions",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "APIEmbed",
                  "packageName": "discord-api-types",
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 121,
          "name": "files",
          "comment": {
            "description": "Files to send with the message. This should not be set when editing a message, as Discord does not support\nediting file attachments.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 43,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "FileOptions",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "BufferResolvable",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "internal.Stream",
                  "packageName": "@types/node",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageAttachment",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 117,
          "name": "nonce",
          "comment": {
            "description": "The nonce for the message.",
            "blockTags": [
              {
                "name": "default",
                "text": "''"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 20,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "number"
              }
            ]
          }
        },
        {
          "id": 116,
          "name": "tts",
          "comment": {
            "description": "Whether or not the message should be spoken aloud.",
            "blockTags": [
              {
                "name": "default",
                "text": "false"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 112,
          "name": "defaults",
          "comment": {
            "description": "The default values for all MessageBuilder instances.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 139,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 108,
            "name": "MessageBuilderResolvable",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 137,
          "name": "addFile",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 111,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 138,
              "name": "addFile",
              "comment": {
                "description": "Adds a new value for the \nfiles\n field array.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 139,
                  "name": "file",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "FileOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "BufferResolvable",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "internal.Stream",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageAttachment",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 134,
          "name": "setAllowedMentions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 102,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 135,
              "name": "setAllowedMentions",
              "comment": {
                "description": "Sets the value for the \nallowedMentions\n field.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 136,
                  "name": "allowedMentions",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageMentionOptions",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 128,
          "name": "setContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 77,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 129,
              "name": "setContent",
              "comment": {
                "description": "Sets the value for the \ncontent\n field.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 130,
                  "name": "content",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 131,
          "name": "setEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 88,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 132,
              "name": "setEmbeds",
              "comment": {
                "description": "Sets the value for the \nMessageBuilder.embed\n field.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When providing more than 10 embeds, the array will automatically be sliced down to the first 10."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 133,
                  "name": "embeds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbedOptions",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "APIEmbed",
                          "packageName": "discord-api-types",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 140,
          "name": "setFile",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 121,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 141,
              "name": "setFile",
              "comment": {
                "description": "Sets a single value for the \nfiles\n field array.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 142,
                  "name": "file",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "FileOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "BufferResolvable",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "internal.Stream",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageAttachment",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 143,
          "name": "setFiles",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 131,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 144,
              "name": "setFiles",
              "comment": {
                "description": "Sets the value for the \nfiles\n field.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 145,
                  "name": "files",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "FileOptions",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "BufferResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "internal.Stream",
                          "packageName": "@types/node",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageAttachment",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 125,
          "name": "setNonce",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 67,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 126,
              "name": "setNonce",
              "comment": {
                "description": "Sets the value for the \nnonce\n field.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 127,
                  "name": "nonce",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 122,
          "name": "setTTS",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 58,
            "file": "MessageBuilder.ts",
            "path": "packages/discord.js-utilities/src/lib/builders"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 123,
              "name": "setTTS",
              "comment": {
                "description": "Sets the value for the \ntts\n field.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 124,
                  "name": "tts",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 111,
                "name": "MessageBuilder",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        }
      ]
    },
    {
      "id": 190,
      "name": "MessagePrompter",
      "comment": {
        "description": "This is a \nMessagePrompter\n, a utility that sends a message, prompting for user input. The prompt can resolve to any kind of input.\nThere are several specifiable types to prompt for user input, and they are as follows:\n- Confirm\n  This will send a simple Yes/No prompt, using reactions.\n- Number\n  This will prompt for an integer. By default it will be a number between 0 and 10 (inclusive), however you can also specify your own custom range (inclusive).\n- Reactions\n  This can be any kind of reaction emoji that Discord supports, and as many as you want. This type will return that reaction instead of a boolean.\n- Message\n  This will prompt the user and require a response in the form of a message. This can be helpful if you require a user to upload an image for example, or give text input.\n\nYou must either use this class directly or extend it.\n\n\nMessagePrompter\n uses reactions to prompt for a yes/no answer and returns it.\nYou can modify the confirm and cancel reaction used for each message, or use the \nMessagePrompter.defaultPrompts\n.\n\nMessagePrompter.defaultPrompts\n is also static so you can modify these directly.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nconst { MessagePrompter } = require('@sapphire/discord.js-utilities');\n\nconst handler = new MessagePrompter('Are you sure you want to continue?');\nconst result = await handler.run(channel, author);\n```"
          },
          {
            "name": "example",
            "text": "```typescript\nconst { MessagePrompter } = require('@sapphire/discord.js-utilities');\n\nconst handler = new MessagePrompter('Choose a number between 5 and 10?', 'number', {\n\t\tstart: 5,\n\t\tend: 10\n});\nconst result = await handler.run(channel, author);\n```"
          },
          {
            "name": "example",
            "text": "```typescript\nconst { MessagePrompter } = require('@sapphire/discord.js-utilities');\n\nconst handler = new MessagePrompter('Are you happy or sad?', 'reaction', {\n\t\treactions: ['🙂', '🙁']\n});\nconst result = await handler.run(channel, author);\n```"
          },
          {
            "name": "example",
            "text": "```typescript\nconst { MessagePrompter } = require('@sapphire/discord.js-utilities');\n\nconst handler = new MessagePrompter('Do you love me?', 'message');\nconst result = await handler.run(channel, author);\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 98,
        "file": "MessagePrompter.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 193,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 110,
          "file": "MessagePrompter.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
        },
        "parameters": [
          {
            "id": 196,
            "name": "message",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": 147,
                  "name": "MessagePrompterMessage",
                  "packageName": null,
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": 206,
                  "name": "MessagePrompterBaseStrategy",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          },
          {
            "id": 197,
            "name": "strategy",
            "type": {
              "kind": "reference",
              "id": 195,
              "name": "S",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 198,
            "name": "strategyOptions",
            "type": {
              "kind": "conditional",
              "checkType": {
                "kind": "reference",
                "id": 195,
                "name": "S",
                "packageName": null,
                "typeArguments": []
              },
              "extendsType": {
                "kind": "typeOperator",
                "operator": "keyof",
                "type": {
                  "kind": "reference",
                  "id": 180,
                  "name": "StrategyOptions",
                  "packageName": null,
                  "typeArguments": []
                }
              },
              "trueType": {
                "kind": "indexedAccess",
                "objectType": {
                  "kind": "reference",
                  "id": 180,
                  "name": "StrategyOptions",
                  "packageName": null,
                  "typeArguments": []
                },
                "indexType": {
                  "kind": "reference",
                  "id": null,
                  "name": "S",
                  "packageName": null,
                  "typeArguments": []
                }
              },
              "falseType": {
                "kind": "intrinsic",
                "type": "never"
              }
            }
          }
        ]
      },
      "properties": [
        {
          "id": 199,
          "name": "strategy",
          "comment": {
            "description": "The strategy used in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 102,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 206,
            "name": "MessagePrompterBaseStrategy",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 192,
          "name": "defaultStrategy",
          "comment": {
            "description": "The default strategy to use",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 169,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "keyof",
            "type": {
              "kind": "reference",
              "id": 175,
              "name": "StrategyReturns",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 191,
          "name": "strategies",
          "comment": {
            "description": "The available strategies",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 149,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "typeOperator",
                "operator": "keyof",
                "type": {
                  "kind": "reference",
                  "id": 175,
                  "name": "StrategyReturns",
                  "packageName": null,
                  "typeArguments": []
                }
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Ctor",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "namedTupleMember",
                            "name": "message",
                            "type": {
                              "kind": "reference",
                              "id": 147,
                              "name": "MessagePrompterMessage",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          },
                          {
                            "kind": "namedTupleMember",
                            "name": "options",
                            "type": {
                              "kind": "reference",
                              "id": 348,
                              "name": "IMessagePrompterConfirmStrategyOptions",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": true
                          }
                        ]
                      },
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "namedTupleMember",
                            "name": "message",
                            "type": {
                              "kind": "reference",
                              "id": 147,
                              "name": "MessagePrompterMessage",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          },
                          {
                            "kind": "namedTupleMember",
                            "name": "options",
                            "type": {
                              "kind": "reference",
                              "id": 354,
                              "name": "IMessagePrompterNumberStrategyOptions",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          }
                        ]
                      },
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "namedTupleMember",
                            "name": "message",
                            "type": {
                              "kind": "reference",
                              "id": 147,
                              "name": "MessagePrompterMessage",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          },
                          {
                            "kind": "namedTupleMember",
                            "name": "options",
                            "type": {
                              "kind": "reference",
                              "id": 361,
                              "name": "IMessagePrompterReactionStrategyOptions",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          }
                        ]
                      },
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "namedTupleMember",
                            "name": "message",
                            "type": {
                              "kind": "reference",
                              "id": 147,
                              "name": "MessagePrompterMessage",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          },
                          {
                            "kind": "namedTupleMember",
                            "name": "options",
                            "type": {
                              "kind": "reference",
                              "id": 344,
                              "name": "IMessagePrompterStrategyOptions",
                              "packageName": null,
                              "typeArguments": []
                            },
                            "optional": false
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 232,
                        "name": "MessagePrompterConfirmStrategy",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 261,
                        "name": "MessagePrompterMessageStrategy",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 289,
                        "name": "MessagePrompterNumberStrategy",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 318,
                        "name": "MessagePrompterReactionStrategy",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 200,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 137,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 201,
              "name": "run",
              "comment": {
                "description": "This executes the \nMessagePrompter\n and sends the message.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 202,
                  "name": "Filter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "MessageReaction",
                            "packageName": "discord.js",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "User",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "Message",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "intrinsic",
                                "type": "boolean"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 203,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 204,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 202,
                            "name": "Filter",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "conditional",
                "checkType": {
                  "kind": "reference",
                  "id": 195,
                  "name": "S",
                  "packageName": null,
                  "typeArguments": []
                },
                "extendsType": {
                  "kind": "typeOperator",
                  "operator": "keyof",
                  "type": {
                    "kind": "reference",
                    "id": 175,
                    "name": "StrategyReturns",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                "trueType": {
                  "kind": "reference",
                  "id": null,
                  "name": "Promise",
                  "packageName": "typescript",
                  "typeArguments": [
                    {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": 175,
                        "name": "StrategyReturns",
                        "packageName": null,
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": null,
                        "name": "S",
                        "packageName": null,
                        "typeArguments": []
                      }
                    }
                  ]
                },
                "falseType": {
                  "kind": "intrinsic",
                  "type": "never"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": 206,
      "name": "MessagePrompterBaseStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "MessagePrompterBaseStrategy.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
      },
      "external": false,
      "abstract": true,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 208,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 44,
          "file": "MessagePrompterBaseStrategy.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
        },
        "parameters": [
          {
            "id": 210,
            "name": "type",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          },
          {
            "id": 211,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": 147,
              "name": "MessagePrompterMessage",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 212,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 344,
              "name": "IMessagePrompterStrategyOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 216,
          "name": "appliedMessage",
          "comment": {
            "description": "The message that has been sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 27,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 218,
          "name": "editMessage",
          "comment": {
            "description": "The message the bot will edit to send its prompt in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 215,
          "name": "explicitReturn",
          "comment": {
            "description": "Whether to return an explicit object with data, or the strategies' default",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 217,
          "name": "message",
          "comment": {
            "description": "The message that will be sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 214,
          "name": "timeout",
          "comment": {
            "description": "The timeout that was used in the collector",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 213,
          "name": "type",
          "comment": {
            "description": "The type of strategy that was used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 207,
          "name": "defaultStrategyOptions",
          "comment": {
            "description": "The default strategy options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 223,
          "name": "collectReactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 54,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 224,
              "name": "collectReactions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 225,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 226,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 227,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 148,
                    "name": "IMessagePrompterExplicitReturnBase",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 228,
          "name": "createReactionPromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 229,
              "name": "createReactionPromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitReactions function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 230,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 231,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageReaction",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 219,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": true,
          "static": false,
          "signatures": [
            {
              "id": 220,
              "name": "run",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 221,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 222,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "array",
                            "type": {
                              "kind": "intrinsic",
                              "type": "unknown"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        }
      ]
    },
    {
      "id": 232,
      "name": "MessagePrompterConfirmStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "MessagePrompterConfirmStrategy.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 206,
        "name": "MessagePrompterBaseStrategy",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [
        {
          "kind": "reference",
          "id": 348,
          "name": "IMessagePrompterConfirmStrategyOptions",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 236,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 23,
          "file": "MessagePrompterConfirmStrategy.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
        },
        "parameters": [
          {
            "id": 238,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": 147,
              "name": "MessagePrompterMessage",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 239,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 348,
              "name": "IMessagePrompterConfirmStrategyOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 249,
          "name": "appliedMessage",
          "comment": {
            "description": "The message that has been sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 27,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 241,
          "name": "cancelEmoji",
          "comment": {
            "description": "The cancel emoji used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 16,
            "file": "MessagePrompterConfirmStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 240,
          "name": "confirmEmoji",
          "comment": {
            "description": "The confirm emoji used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "MessagePrompterConfirmStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 251,
          "name": "editMessage",
          "comment": {
            "description": "The message the bot will edit to send its prompt in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 248,
          "name": "explicitReturn",
          "comment": {
            "description": "Whether to return an explicit object with data, or the strategies' default",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 250,
          "name": "message",
          "comment": {
            "description": "The message that will be sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 247,
          "name": "timeout",
          "comment": {
            "description": "The timeout that was used in the collector",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 246,
          "name": "type",
          "comment": {
            "description": "The type of strategy that was used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 234,
          "name": "cancelEmoji",
          "comment": {
            "description": "The default cancel emoji used for \nMessagePrompterConfirmStrategy",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 57,
            "file": "MessagePrompterConfirmStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 233,
          "name": "confirmEmoji",
          "comment": {
            "description": "The default confirm emoji used for \nMessagePrompterConfirmStrategy",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "MessagePrompterConfirmStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 235,
          "name": "defaultStrategyOptions",
          "comment": {
            "description": "The default strategy options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 252,
          "name": "collectReactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 54,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 253,
              "name": "collectReactions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 254,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 255,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 256,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 148,
                    "name": "IMessagePrompterExplicitReturnBase",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 257,
          "name": "createReactionPromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 258,
              "name": "createReactionPromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitReactions function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 259,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 260,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageReaction",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 242,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterConfirmStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 243,
              "name": "run",
              "comment": {
                "description": "This executes the \nMessagePrompter\n and sends the message if \nIMessagePrompterOptions.type\n equals confirm.\nThe handler will wait for one (1) reaction.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A promise that resolves to a boolean denoting the value of the input (\n`true`\n for yes, \n`false`\n for no)."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 244,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 245,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      },
                      {
                        "kind": "reference",
                        "id": 154,
                        "name": "IMessagePrompterExplicitConfirmReturn",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 261,
      "name": "MessagePrompterMessageStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "MessagePrompterMessageStrategy.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 206,
        "name": "MessagePrompterBaseStrategy",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [
        {
          "kind": "reference",
          "id": 344,
          "name": "IMessagePrompterStrategyOptions",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 263,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 15,
          "file": "MessagePrompterMessageStrategy.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
        },
        "parameters": [
          {
            "id": 265,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": 147,
              "name": "MessagePrompterMessage",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 266,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 344,
              "name": "IMessagePrompterStrategyOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 277,
          "name": "appliedMessage",
          "comment": {
            "description": "The message that has been sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 27,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 279,
          "name": "editMessage",
          "comment": {
            "description": "The message the bot will edit to send its prompt in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 276,
          "name": "explicitReturn",
          "comment": {
            "description": "Whether to return an explicit object with data, or the strategies' default",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 278,
          "name": "message",
          "comment": {
            "description": "The message that will be sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 275,
          "name": "timeout",
          "comment": {
            "description": "The timeout that was used in the collector",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 274,
          "name": "type",
          "comment": {
            "description": "The type of strategy that was used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 262,
          "name": "defaultStrategyOptions",
          "comment": {
            "description": "The default strategy options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 280,
          "name": "collectReactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 54,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 281,
              "name": "collectReactions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 282,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 283,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 284,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 148,
                    "name": "IMessagePrompterExplicitReturnBase",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 271,
          "name": "createMessagePromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 66,
            "file": "MessagePrompterMessageStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 272,
              "name": "createMessagePromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitMessages function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 273,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "Message",
                                "packageName": "discord.js",
                                "typeArguments": [
                                  {
                                    "kind": "intrinsic",
                                    "type": "boolean"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 285,
          "name": "createReactionPromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 286,
              "name": "createReactionPromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitReactions function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 287,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 288,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageReaction",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 267,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "MessagePrompterMessageStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 268,
              "name": "run",
              "comment": {
                "description": "This executes the \nMessagePrompter\n and sends the message if \nIMessagePrompterOptions.type\n equals message.\nThe handler will wait for one (1) message.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A promise that resolves to the message object received."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 269,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 270,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "Message",
                                "packageName": "discord.js",
                                "typeArguments": [
                                  {
                                    "kind": "intrinsic",
                                    "type": "boolean"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 168,
                        "name": "IMessagePrompterExplicitMessageReturn",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 289,
      "name": "MessagePrompterNumberStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "MessagePrompterNumberStrategy.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 206,
        "name": "MessagePrompterBaseStrategy",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [
        {
          "kind": "reference",
          "id": 354,
          "name": "IMessagePrompterNumberStrategyOptions",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 292,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 26,
          "file": "MessagePrompterNumberStrategy.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
        },
        "parameters": [
          {
            "id": 294,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": 147,
              "name": "MessagePrompterMessage",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 295,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 354,
              "name": "IMessagePrompterNumberStrategyOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 306,
          "name": "appliedMessage",
          "comment": {
            "description": "The message that has been sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 27,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 308,
          "name": "editMessage",
          "comment": {
            "description": "The message the bot will edit to send its prompt in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 298,
          "name": "end",
          "comment": {
            "description": "The available number emojis",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 19,
            "file": "MessagePrompterNumberStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 305,
          "name": "explicitReturn",
          "comment": {
            "description": "Whether to return an explicit object with data, or the strategies' default",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 307,
          "name": "message",
          "comment": {
            "description": "The message that will be sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 296,
          "name": "numberEmojis",
          "comment": {
            "description": "The available number emojis",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "MessagePrompterNumberStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "EmojiIdentifierResolvable",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        },
        {
          "id": 297,
          "name": "start",
          "comment": {
            "description": "The available number emojis",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "MessagePrompterNumberStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 304,
          "name": "timeout",
          "comment": {
            "description": "The timeout that was used in the collector",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 303,
          "name": "type",
          "comment": {
            "description": "The type of strategy that was used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 291,
          "name": "defaultStrategyOptions",
          "comment": {
            "description": "The default strategy options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 290,
          "name": "numberEmojis",
          "comment": {
            "description": "The default available number emojis",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 63,
            "file": "MessagePrompterNumberStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        }
      ],
      "methods": [
        {
          "id": 309,
          "name": "collectReactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 54,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 310,
              "name": "collectReactions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 311,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 312,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 313,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 148,
                    "name": "IMessagePrompterExplicitReturnBase",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 314,
          "name": "createReactionPromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 315,
              "name": "createReactionPromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitReactions function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 316,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 317,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageReaction",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 299,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 41,
            "file": "MessagePrompterNumberStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 300,
              "name": "run",
              "comment": {
                "description": "This executes the \nMessagePrompter\n and sends the message if \nIMessagePrompterOptions.type\n equals number.\nThe handler will wait for one (1) reaction.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A promise that resolves to the selected number within the range."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 301,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 302,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "number"
                      },
                      {
                        "kind": "reference",
                        "id": 161,
                        "name": "IMessagePrompterExplicitNumberReturn",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 318,
      "name": "MessagePrompterReactionStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "MessagePrompterReactionStrategy.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 206,
        "name": "MessagePrompterBaseStrategy",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [
        {
          "kind": "reference",
          "id": 318,
          "name": "MessagePrompterReactionStrategy",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 320,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 18,
          "file": "MessagePrompterReactionStrategy.ts",
          "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
        },
        "parameters": [
          {
            "id": 322,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": 147,
              "name": "MessagePrompterMessage",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 323,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 361,
              "name": "IMessagePrompterReactionStrategyOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 332,
          "name": "appliedMessage",
          "comment": {
            "description": "The message that has been sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 27,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 334,
          "name": "editMessage",
          "comment": {
            "description": "The message the bot will edit to send its prompt in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 331,
          "name": "explicitReturn",
          "comment": {
            "description": "Whether to return an explicit object with data, or the strategies' default",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 333,
          "name": "message",
          "comment": {
            "description": "The message that will be sent in \nrun",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 324,
          "name": "reactions",
          "comment": {
            "description": "The emojis used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "MessagePrompterReactionStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "EmojiIdentifierResolvable",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        },
        {
          "id": 330,
          "name": "timeout",
          "comment": {
            "description": "The timeout that was used in the collector",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 329,
          "name": "type",
          "comment": {
            "description": "The type of strategy that was used",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 319,
          "name": "defaultStrategyOptions",
          "comment": {
            "description": "The default strategy options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 335,
          "name": "collectReactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 54,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 336,
              "name": "collectReactions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 337,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 338,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 339,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 148,
                    "name": "IMessagePrompterExplicitReturnBase",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 340,
          "name": "createReactionPromptFilter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "MessagePrompterBaseStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 341,
              "name": "createReactionPromptFilter",
              "comment": {
                "description": "Creates a filter for the collector to filter on",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The filter for awaitReactions function"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 342,
                  "name": "reactions",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "EmojiIdentifierResolvable",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 343,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CollectorOptions",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageReaction",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 325,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 31,
            "file": "MessagePrompterReactionStrategy.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter/strategies"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 326,
              "name": "run",
              "comment": {
                "description": "This executes the \nMessagePrompterReactionStrategy\n and sends the message.\nThe handler will wait for one (1) reaction.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A promise that resolves to the reaction object."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 327,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "MessagePrompterChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 328,
                  "name": "authorOrFilter",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "User",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CollectorFilter",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "MessageReaction",
                                "packageName": "discord.js",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "User",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "EmojiResolvable",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 148,
                        "name": "IMessagePrompterExplicitReturnBase",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 542,
      "name": "PaginatedFieldMessageEmbed",
      "comment": {
        "description": "This is a utility of \nPaginatedMessage\n, except it exclusively adds pagination inside a field of an embed.\nYou must either use this class directly or extend it.\n\nIt differs from PaginatedMessageEmbedFields as the items here are the shape you want, and are then concatenated\nin a single field with a given formatter function, whereas PaginatedMessageEmbedFields takes fields as the items\nand add them to the embed.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nimport { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';\n\nnew PaginatedFieldMessageEmbed()\n   .setTitleField('Test pager field')\n   .setTemplate({ embed })\n   .setItems([\n      { title: 'Sapphire Framework', value: 'discord.js Framework' },\n      { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },\n      { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }\n    ])\n   .formatItems((item) => `${item.title}\\n${item.value}`)\n   .setItemsPerPage(2)\n   .make()\n   .run(message);\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 31,
        "file": "PaginatedFieldMessageEmbed.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 763,
        "name": "PaginatedMessage",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 553,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 222,
          "file": "PaginatedMessage.ts",
          "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
        },
        "parameters": [
          {
            "id": 556,
            "name": "__namedParameters",
            "type": {
              "kind": "reference",
              "id": 995,
              "name": "PaginatedMessageOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 600,
          "name": "#thisMazeWasNotMeantForYouContent",
          "comment": {
            "description": "The response we send when someone gets into an invalid flow",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 601,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 602,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                      "line": 117,
                      "character": 39,
                      "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"This maze wasn't meant for you...what did you do.\""
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    602
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                  "line": 117,
                  "character": 37,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                }
              ]
            }
          }
        },
        {
          "id": 607,
          "name": "actions",
          "comment": {
            "description": "The actions which are to be used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 143,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 959,
                "name": "PaginatedMessageAction",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 605,
          "name": "collector",
          "comment": {
            "description": "The collector used for handling component interactions.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "InteractionCollector",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageComponentInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 761,
          "name": "constructor",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1499,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 763,
              "name": "PaginatedMessage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 612,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator to show after the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.embedFooterSeparator```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 175,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 557,
          "name": "embedTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageEmbed",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 614,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client having the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "default",
                "text": "```PaginatedMessage.emitPartialDMChannelWarning```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 189,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 561,
          "name": "fieldTitle",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 36,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 619,
          "name": "hasEmittedMaxPageWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the maximum amount of pages in the \nSelectMenu\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 205,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 620,
          "name": "hasEmittedPartialDMChannelWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the \nPaginatedMessage\n being called in a \n`DMChannel`\n\nwithout the client having the \n`'Channel'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 214,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 609,
          "name": "idle",
          "comment": {
            "description": "The amount of milliseconds to idle before the paginator is closed.",
            "blockTags": [
              {
                "name": "default",
                "text": "14.5 minutes"
              },
              {
                "name": "remark",
                "text": "This is to ensure it is a bit before interactions expire."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 155,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 608,
          "name": "index",
          "comment": {
            "description": "The handler's current page/message index.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 148,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 559,
          "name": "items",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 555,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 560,
          "name": "itemsPerPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 35,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 606,
          "name": "messages",
          "comment": {
            "description": "The pages which were converted from \npages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "null"
                },
                {
                  "kind": "reference",
                  "id": 1002,
                  "name": "PaginatedMessagePage",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 611,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.pageIndexPrefix```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 603,
          "name": "pages",
          "comment": {
            "description": "The pages to be converted to \nmessages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1002,
              "name": "PaginatedMessagePage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 615,
          "name": "paginatedMessageData",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "components"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 604,
          "name": "response",
          "comment": {
            "description": "The response message used to edit on page changes.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 1348,
                "name": "NonModalInteraction",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 616,
          "name": "selectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 195,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 617,
          "name": "selectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 197,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 613,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.stopPaginatedMessageCustomIds```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 181,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 610,
          "name": "template",
          "comment": {
            "description": "The template for this \nPaginatedMessage\n.\nYou can use templates to set defaults that will apply to each and every page in the \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 161,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1020,
            "name": "PaginatedMessageMessageOptionsUnion",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 558,
          "name": "totalPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 618,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 199,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 543,
          "name": "defaultActions",
          "comment": {
            "description": "The default actions of this handler.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1275,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 959,
              "name": "PaginatedMessageAction",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 546,
          "name": "deletionStopReasons",
          "comment": {
            "description": "The reasons sent by \nInteractionCollector#end\n\nevent when the message (or its owner) has been deleted.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1360,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 548,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator for the page index in the embed footer.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"•\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by passing \n`embedFooterSeparator`\n in the options of the constructor."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.embedFooterSeparator = '|';\n// This will make the separator of the embed footer something like \"Page 1/2 | Today at 4:20\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1390,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 544,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setEmitPartialDMChannelWarning(newBoolean)`"
              },
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1340,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 550,
          "name": "handlers",
          "comment": {
            "description": "The current \nInteractionCollector\n handlers that are active.\nThe key is the ID of of the author who sent the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that any given author can only trigger 1 \nPaginatedMessage\n.\nThis is important for performance reasons, and users should not have more than 1 \nPaginatedMessage\n open at once.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1408,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 549,
          "name": "messages",
          "comment": {
            "description": "The messages that are currently being handled by a \nPaginatedMessage\n\nThe key is the ID of the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that only 1 \nPaginatedMessage\n can run on a specified message at once.\nThis is important when having an editable commands solution.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1399,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 547,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.pageIndexPrefix = 'Page';\n// This will make the footer of the embed something like \"Page 1/2\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1375,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 551,
          "name": "selectMenuOptions",
          "comment": {
            "description": "A generator for \nMessageSelectOption\n that will be used to generate the options for the \nMessageSelectMenu\n.\nWe do not allow overwriting the \nMessageSelectOption#value\n property with this, as it is vital to how we handle\nselect menu interactions.",
            "blockTags": [
              {
                "name": "pageIndex",
                "text": "The index of the page to add to the \nMessageSelectMenu\n. We will add 1 to this number because our pages are 0 based,\nso this will represent the pages as seen by the user."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tlabel: `Page ${pageIndex}`\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.selectMenuOptions = (pageIndex) => ({\n\t label: `Go to page: ${pageIndex}`,\n\t description: 'This is a description'\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1435,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 545,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "['@sapphire/paginated-messages.stop']"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setStopPaginatedMessageCustomIds(customIds)`"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.stopPaginatedMessageCustomIds = ['my-custom-stop-custom-id'];\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1354,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 552,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": "A generator for \nMessageComponentInteraction#reply\n that will be called and sent whenever an untargeted user interacts with one of the buttons.\nWhen modifying this it is recommended that the message is set to be ephemeral so only the user that is pressing the buttons can see them.\nFurthermore, we also recommend setting \n`allowedMentions: { users: [], roles: [] }`\n, so you don't have to worry about accidentally pinging anyone.\n\nWhen setting just a string, we will add \n`{ ephemeral: true, allowedMentions: { users: [], roles: [] } }`\n for you.",
            "blockTags": [
              {
                "name": "targetUser",
                "text": "The \nUser\n this \nPaginatedMessage\n was intended for."
              },
              {
                "name": "interactionUser",
                "text": "The \nUser\n that actually clicked the button."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tcontent: `Please stop interacting with the components on this message. They are only for ${Formatters.userMention(targetUser.id)}.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\n// We  will add ephemeral and no allowed mention for string only overwrites\nPaginatedMessage.wrongUserInteractionReply = (targetUser) =>\n    `These buttons are only for ${Formatters.userMention(targetUser.id)}. Press them as much as you want, but I won't do anything with your clicks.`;\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\nimport { Formatters } from 'discord.js';\n\nPaginatedMessage.wrongUserInteractionReply = (targetUser) => ({\n\tcontent: `These buttons are only for ${Formatters.userMention(\n\t\ttargetUser.id\n\t)}. Press them as much as you want, but I won't do anything with your clicks.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1479,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 649,
          "name": "addAction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 413,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 650,
              "name": "addAction",
              "comment": {
                "description": "Adds an action to the existing ones. This will be added as the last action.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the action."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 651,
                  "name": "action",
                  "type": {
                    "kind": "reference",
                    "id": 959,
                    "name": "PaginatedMessageAction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 646,
          "name": "addActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 403,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 647,
              "name": "addActions",
              "comment": {
                "description": "Adds actions to the existing ones. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the actions."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 648,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 667,
          "name": "addAsyncPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 540,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 668,
              "name": "addAsyncPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageBuilder\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageBuilder(async (builder) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 669,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 670,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 540,
                              "character": 55,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L540"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 671,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 672,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 682,
          "name": "addAsyncPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 610,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 683,
              "name": "addAsyncPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbed(async (embed) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn embed;\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 684,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 685,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 610,
                              "character": 49,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L610"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 686,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 687,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 703,
          "name": "addAsyncPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 752,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 704,
              "name": "addAsyncPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage().addAsyncPageEmbeds(async (embed0, embed1, embed2) => {\n\tconst someRemoteData = (await fetch('https://contoso.com/api/users')) as any;\n\n\tfor (const [index, user] of Object.entries(someRemoteData.users.slice(0, 10)) as [`${0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10}`, any][]) {\n\t\tswitch (index) {\n\t\t\tcase '0': {\n\t\t\t\tembed0.setColor('#FF0000').setDescription('example description 1').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '1': {\n\t\t\t\tembed1.setColor('#00FF00').setDescription('example description 2').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '2': {\n\t\t\t\tembed2.setColor('#0000FF').setDescription('example description 3').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [embed0, embed1, embed2];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 705,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 706,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 755,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L755"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 707,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 708,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 709,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 710,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 711,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 712,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 713,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 714,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 715,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 716,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 717,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "name": "MessageEmbed",
                                      "qualifiedName": "MessageEmbed",
                                      "package": "discord.js"
                                    }
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 658,
          "name": "addPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 455,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 659,
              "name": "addPage",
              "comment": {
                "description": "Adds a page to the existing ones. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "While you can use this method you should first check out\n\naddPageBuilder\n,\n\naddPageContent\n and\n\naddPageEmbed\n as\nthese are easier functional methods of adding pages and will likely already suffice for your needs."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 660,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 661,
          "name": "addPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 514,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 662,
              "name": "addPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageBuilder\n. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder((builder) => {\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { MessageEmbed } = require('discord.js');\nconst { MessageBuilder, PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst builder = new MessageBuilder()\n\t.setContent('example content')\n\t.setEmbeds([embed]);\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder(builder);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 663,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 664,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 514,
                              "character": 50,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L514"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 665,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 666,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 111,
                                "name": "MessageBuilder"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 673,
          "name": "addPageContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 555,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 674,
              "name": "addPageContent",
              "comment": {
                "description": "Adds a page to the existing ones using simple message content. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageContent('example content');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 675,
                  "name": "content",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 676,
          "name": "addPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 587,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 677,
              "name": "addPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed((embed) => {\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn embed;\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed(embed);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 678,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 679,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 587,
                              "character": 44,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L587"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 680,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 681,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 688,
          "name": "addPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 661,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 689,
              "name": "addPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds((embed1, embed2, embed3) => { // You can add up to 10 embeds\n\t\tembed1\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description 1');\n\n\t\tembed2\n\t\t\t.setColor('#00FF00')\n\t\t\t.setDescription('example description 2');\n\n\t\tembed3\n\t\t\t.setColor('#0000FF')\n\t\t\t.setDescription('example description 3');\n\n\t\treturn [embed1, embed2, embed3];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 690,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 691,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 664,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L664"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 692,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 693,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 694,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 695,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 696,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 697,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 698,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 699,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 700,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 701,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 702,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "name": "MessageEmbed",
                                  "qualifiedName": "MessageEmbed",
                                  "package": "discord.js"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 718,
          "name": "addPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 796,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 719,
              "name": "addPages",
              "comment": {
                "description": "Add pages to the existing ones. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 720,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 753,
          "name": "applyFooter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 754,
              "name": "applyFooter",
              "comment": {
                "description": "Applies footer to the last embed of the page",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The message options with the footer applied"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 755,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 756,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1020,
                "name": "PaginatedMessageMessageOptionsUnion",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 730,
          "name": "clone",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 955,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 731,
              "name": "clone",
              "comment": {
                "description": "Clones the current handler into a new instance.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 577,
          "name": "formatItems",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 112,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 578,
              "name": "formatItems",
              "comment": {
                "description": "Sets a format callback that will be mapped to each embed field in the array of items when the embed is paginated. This should convert each item to a format that is either text itself or can be serialized as text.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';\n\nnew PaginatedFieldMessageEmbed()\n   .setTitleField('Test field')\n   .setTemplate({ embed })\n   .setItems([\n      { title: 'Sapphire Framework', value: 'discord.js Framework' },\n      { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },\n      { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }\n    ])\n   .formatItems((item) => `${item.title}\\n${item.value}`)\n   .make()\n   .run(message);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 579,
                  "name": "formatter",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 580,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts",
                          "line": 112,
                          "character": 31,
                          "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts#L112"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 581,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 582,
                              "name": "item",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 555,
                                "name": "T"
                              }
                            },
                            {
                              "id": 583,
                              "name": "index",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 584,
                              "name": "array",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 555,
                                  "name": "T"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 587,
          "name": "generatePages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 149,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 588,
              "name": "generatePages",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 744,
          "name": "handleCollect",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1090,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 745,
              "name": "handleCollect",
              "comment": {
                "description": "Handles the \n`collect`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 746,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 747,
                  "name": "channel",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "DMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "PartialDMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "NewsChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "TextChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ThreadChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "VoiceChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 748,
                  "name": "interaction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "SelectMenuInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ButtonInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 749,
          "name": "handleEnd",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1145,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 750,
              "name": "handleEnd",
              "comment": {
                "description": "Handles the \n`end`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 751,
                  "name": "_",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "SelectMenuInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "ButtonInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 752,
                  "name": "reason",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 740,
          "name": "handlePageLoad",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1070,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 741,
              "name": "handlePageLoad",
              "comment": {
                "description": "Handles the load of a page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 742,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 743,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 652,
          "name": "hasPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 430,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 653,
              "name": "hasPage",
              "comment": {
                "description": "Checks whether or not the handler has a specific page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 654,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 585,
          "name": "make",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 139,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 586,
              "name": "make",
              "comment": {
                "description": "Build the pages of the given array.\n\nYou must call the \nPaginatedFieldMessageEmbed.make\n and \nPaginatedFieldMessageEmbed.run\n methods last, in that order, for the pagination to work.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';\n\nnew PaginatedFieldMessageEmbed()\n   .setTitleField('Test field')\n   .setTemplate({ embed })\n   .setItems([\n      { title: 'Sapphire Framework', value: 'discord.js Framework' },\n      { title: 'Sapphire Framework 2', value: 'discord.js Framework 2' },\n      { title: 'Sapphire Framework 3', value: 'discord.js Framework 3' }\n    ])\n   .formatItems((item) => `${item.title}\\n${item.value}`)\n   .make()\n   .run(message);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 589,
          "name": "paginateArray",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 165,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 590,
              "name": "paginateArray",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 591,
                  "name": "items",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 555,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 592,
                  "name": "currentPage",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 593,
                  "name": "perPageItems",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 555,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 727,
          "name": "resolvePage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 938,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 728,
              "name": "resolvePage",
              "comment": {
                "description": "Executed whenever an action is triggered and resolved.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 729,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 725,
          "name": "resolvePagesOnRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 928,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 726,
              "name": "resolvePagesOnRun",
              "comment": {
                "description": "Executed whenever \nrun\n is called.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 757,
          "name": "resolvePaginatedMessageInternationalizationContext",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 758,
              "name": "resolvePaginatedMessageInternationalizationContext",
              "comment": {
                "description": "Constructs a \nPaginatedMessageInternationalizationContext",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A constructed \nPaginatedMessageInternationalizationContext"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 759,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 760,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1021,
                "name": "PaginatedMessageInternationalizationContext",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 594,
          "name": "resolveTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 170,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 595,
              "name": "resolveTemplate",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 596,
                  "name": "template",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbedOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 597,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts",
                              "line": 170,
                              "character": 73,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts#L170"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 598,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 599,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "MessageEmbed",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 721,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 819,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 722,
              "name": "run",
              "comment": {
                "description": "Executes the \nPaginatedMessage\n and sends the pages corresponding with \nindex\n.\nThe handler will start collecting message component interactions.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "Please note that for \nPaginatedMessage\n to work in DMs to your client, you need to add the \n`'CHANNEL'`\n partial to your \n`client.options.partials`\n.\nMessage based commands can always be used in DMs, whereas Chat Input interactions can only be used in DMs when they are registered globally."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 723,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 724,
                  "name": "target",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 542,
                    "name": "PaginatedFieldMessageEmbed",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 555,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 642,
          "name": "setActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 393,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 643,
              "name": "setActions",
              "comment": {
                "description": "Clears all current actions and sets them. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "You can retrieve the default actions for the regular pagination"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  ...PaginatedMessage.defaultActions,\n])\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message Buttons by providing \n`style`\n, \n`customId`\n, \n`type`\n, \n`run`\n and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'PRIMARY',\n    label: 'My Button',\n    customId: 'custom_button',\n    type: Constants.MessageComponentTypes.BUTTON,\n    run: (context) => console.log(context)\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message **Link** Buttons by providing \n`style`\n, \n`url`\n, \n`type`\n, and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'LINK',\n    label: 'Sapphire Website',\n    emoji: '🔷',\n    url: 'https://sapphirejs.dev',\n    type: Constants.MessageComponentTypes.BUTTON\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Select Menus by providing \n`customId`\n, \n`type`\n, and \n`run`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    customId: 'custom_menu',\n    type: Constants.MessageComponentTypes.SELECT_MENU,\n    run: (context) => console.log(context) // Do something here\n  }\n], true);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 644,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 645,
                  "name": "includeDefaultActions",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 633,
          "name": "setEmitPartialDMChannelWarning",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 304,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 634,
              "name": "setEmitPartialDMChannelWarning",
              "comment": {
                "description": "Sets the \nemitPartialDMChannelWarning\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 635,
                  "name": "emitPartialDMChannelWarning",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 639,
          "name": "setIdle",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 322,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 640,
              "name": "setIdle",
              "comment": {
                "description": "Sets the amount of time to idle before the paginator is closed.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 641,
                  "name": "idle",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 636,
          "name": "setIndex",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 313,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 637,
              "name": "setIndex",
              "comment": {
                "description": "Sets the handler's current page/message index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 638,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 562,
          "name": "setItems",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 42,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 563,
              "name": "setItems",
              "comment": {
                "description": "Set the items to paginate.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 564,
                  "name": "items",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 555,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 568,
          "name": "setItemsPerPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 60,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 569,
              "name": "setItemsPerPage",
              "comment": {
                "description": "Sets the amount of items that should be shown per page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 570,
                  "name": "itemsPerPage",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 655,
          "name": "setPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 438,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 656,
              "name": "setPages",
              "comment": {
                "description": "Clears all current pages and messages and sets them. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 657,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 621,
          "name": "setSelectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 260,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 622,
              "name": "setSelectMenuOptions",
              "comment": {
                "description": "Sets the \nselectMenuOptions\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 623,
                  "name": "newOptions",
                  "type": {
                    "kind": "reference",
                    "id": 1008,
                    "name": "PaginatedMessageSelectMenuOptionsFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 624,
          "name": "setSelectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 271,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 625,
              "name": "setSelectMenuPlaceholder",
              "comment": {
                "description": "Sets the \nselectMenuPlaceholder\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 626,
                  "name": "placeholder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 630,
          "name": "setStopPaginatedMessageCustomIds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 293,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 631,
              "name": "setStopPaginatedMessageCustomIds",
              "comment": {
                "description": "Sets the \nstopPaginatedMessageCustomIds\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 632,
                  "name": "stopPaginatedMessageCustomIds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 571,
          "name": "setTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 86,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 572,
              "name": "setTemplate",
              "comment": {
                "description": "Sets the template to be used to display the embed fields as pages. This template can either be set from a template \nMessageEmbed\n instance or an object with embed options.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';\nimport { MessageEmbed } from 'discord.js';\n\nnew PaginatedFieldMessageEmbed().setTemplate(new MessageEmbed().setTitle('Test pager embed')).make().run(message);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedFieldMessageEmbed } from '@sapphire/discord.js-utilities';\nimport { MessageEmbed } from 'discord.js';\n\nnew PaginatedFieldMessageEmbed().setTemplate({ title: 'Test pager embed' }).make().run(message);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 573,
                  "name": "template",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbedOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 574,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts",
                              "line": 86,
                              "character": 68,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedFieldMessageEmbed.ts#L86"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 575,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 576,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 565,
          "name": "setTitleField",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "PaginatedFieldMessageEmbed.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 566,
              "name": "setTitleField",
              "comment": {
                "description": "Set the title of the embed field that will be used to paginate the items.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 567,
                  "name": "title",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 736,
          "name": "setUpCollector",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1037,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 737,
              "name": "setUpCollector",
              "comment": {
                "description": "Sets up the message's collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 738,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "TextBasedChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 739,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 732,
          "name": "setUpMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 973,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 733,
              "name": "setUpMessage",
              "comment": {
                "description": "Sets up the message.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 734,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 735,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 627,
          "name": "setWrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 282,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 628,
              "name": "setWrongUserInteractionReply",
              "comment": {
                "description": "Sets the \nwrongUserInteractionReply\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 629,
                  "name": "wrongUserInteractionReply",
                  "type": {
                    "kind": "reference",
                    "id": 1013,
                    "name": "PaginatedMessageWrongUserInteractionReplyFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 542,
                "name": "PaginatedFieldMessageEmbed",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 555,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 763,
      "name": "PaginatedMessage",
      "comment": {
        "description": "This is a \nPaginatedMessage\n, a utility to paginate messages (usually embeds).\nYou must either use this class directly or extend it.",
        "blockTags": [
          {
            "name": "remark",
            "text": "Please note that for \nPaginatedMessage\n to work in DMs to your client, you need to add the \n`'CHANNEL'`\n partial to your \n`client.options.partials`\n.\nMessage based commands can always be used in DMs, whereas Chat Input interactions can only be used in DMs when they are registered globally.\n\n\nPaginatedMessage\n uses \nMessageComponent\n buttons that perform the specified action when clicked.\nYou can either use your own actions or the \ndefaultActions\n.\n\ndefaultActions\n is also static so you can modify these directly.\n\n\nPaginatedMessage\n also uses pages via \nMessages\n."
          },
          {
            "name": "example",
            "text": "```typescript\nconst myPaginatedMessage = new PaginatedMessage();\n// Once you have an instance of PaginatedMessage you can call various methods on it to add pages to it.\n// For more details see each method's documentation.\n\nmyPaginatedMessage.addPageEmbed((embed) => {\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn embed;\n});\n\nmyPaginatedMessage.addPageBuilder((builder) => {\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n\nmyPaginatedMessage.addPageContent('Example');\n\nmyPaginatedMessage.run(message)\n```"
          },
          {
            "name": "remark",
            "text": "You can also provide a MessageEmbed template. This will be applied to every page.\nIf a page itself has an embed then the two will be merged, with the content of\nthe page's embed taking priority over the template.\n\nFurthermore, if the template has a footer then it will be applied _after_ the page index part of the footer\nwith a space preceding the template. For example, when setting \n`- Powered by Sapphire Framework`\n\nthe resulting footer will be \n`1/2 - Powered by Sapphire Framework`"
          },
          {
            "name": "example",
            "text": "```typescript\nconst myPaginatedMessage = new PaginatedMessage({\n\ttemplate: new MessageEmbed().setColor('#FF0000').setFooter('- Powered by Sapphire framework')\n});\n```"
          },
          {
            "name": "remark",
            "text": "To utilize actions you can implement IPaginatedMessageAction into a class."
          },
          {
            "name": "example",
            "text": "```typescript\nclass ForwardAction implements IPaginatedMessageAction {\n  public id = '▶️';\n\n  public run({ handler }) {\n    if (handler.index !== handler.pages.length - 1) ++handler.index;\n  }\n}\n\n// You can also give the object directly.\n\nconst StopAction: IPaginatedMessageAction = {\n  customId: 'CustomStopAction',\n  run: ({ collector }) => {\n    collector.stop();\n  }\n}\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 115,
        "file": "PaginatedMessage.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 777,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 222,
          "file": "PaginatedMessage.ts",
          "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
        },
        "parameters": [
          {
            "id": 779,
            "name": "__namedParameters",
            "type": {
              "kind": "reference",
              "id": 995,
              "name": "PaginatedMessageOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 780,
          "name": "#thisMazeWasNotMeantForYouContent",
          "comment": {
            "description": "The response we send when someone gets into an invalid flow",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 781,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 782,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                      "line": 117,
                      "character": 39,
                      "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"This maze wasn't meant for you...what did you do.\""
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    782
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                  "line": 117,
                  "character": 37,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                }
              ]
            }
          }
        },
        {
          "id": 787,
          "name": "actions",
          "comment": {
            "description": "The actions which are to be used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 143,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 959,
                "name": "PaginatedMessageAction",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 785,
          "name": "collector",
          "comment": {
            "description": "The collector used for handling component interactions.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "InteractionCollector",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageComponentInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 958,
          "name": "constructor",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1499,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 763,
              "name": "PaginatedMessage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 792,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator to show after the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.embedFooterSeparator```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 175,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 794,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client having the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "default",
                "text": "```PaginatedMessage.emitPartialDMChannelWarning```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 189,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 799,
          "name": "hasEmittedMaxPageWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the maximum amount of pages in the \nSelectMenu\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 205,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 800,
          "name": "hasEmittedPartialDMChannelWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the \nPaginatedMessage\n being called in a \n`DMChannel`\n\nwithout the client having the \n`'Channel'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 214,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 789,
          "name": "idle",
          "comment": {
            "description": "The amount of milliseconds to idle before the paginator is closed.",
            "blockTags": [
              {
                "name": "default",
                "text": "14.5 minutes"
              },
              {
                "name": "remark",
                "text": "This is to ensure it is a bit before interactions expire."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 155,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 788,
          "name": "index",
          "comment": {
            "description": "The handler's current page/message index.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 148,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 786,
          "name": "messages",
          "comment": {
            "description": "The pages which were converted from \npages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "null"
                },
                {
                  "kind": "reference",
                  "id": 1002,
                  "name": "PaginatedMessagePage",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 791,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.pageIndexPrefix```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 783,
          "name": "pages",
          "comment": {
            "description": "The pages to be converted to \nmessages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1002,
              "name": "PaginatedMessagePage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 795,
          "name": "paginatedMessageData",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "components"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 784,
          "name": "response",
          "comment": {
            "description": "The response message used to edit on page changes.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 1348,
                "name": "NonModalInteraction",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 796,
          "name": "selectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 195,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 797,
          "name": "selectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 197,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 793,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.stopPaginatedMessageCustomIds```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 181,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 790,
          "name": "template",
          "comment": {
            "description": "The template for this \nPaginatedMessage\n.\nYou can use templates to set defaults that will apply to each and every page in the \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 161,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1020,
            "name": "PaginatedMessageMessageOptionsUnion",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 798,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 199,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 764,
          "name": "defaultActions",
          "comment": {
            "description": "The default actions of this handler.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1275,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 959,
              "name": "PaginatedMessageAction",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 767,
          "name": "deletionStopReasons",
          "comment": {
            "description": "The reasons sent by \nInteractionCollector#end\n\nevent when the message (or its owner) has been deleted.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1360,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 769,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator for the page index in the embed footer.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"•\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by passing \n`embedFooterSeparator`\n in the options of the constructor."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.embedFooterSeparator = '|';\n// This will make the separator of the embed footer something like \"Page 1/2 | Today at 4:20\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1390,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 765,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setEmitPartialDMChannelWarning(newBoolean)`"
              },
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1340,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 771,
          "name": "handlers",
          "comment": {
            "description": "The current \nInteractionCollector\n handlers that are active.\nThe key is the ID of of the author who sent the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that any given author can only trigger 1 \nPaginatedMessage\n.\nThis is important for performance reasons, and users should not have more than 1 \nPaginatedMessage\n open at once.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1408,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 770,
          "name": "messages",
          "comment": {
            "description": "The messages that are currently being handled by a \nPaginatedMessage\n\nThe key is the ID of the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that only 1 \nPaginatedMessage\n can run on a specified message at once.\nThis is important when having an editable commands solution.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1399,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 768,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.pageIndexPrefix = 'Page';\n// This will make the footer of the embed something like \"Page 1/2\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1375,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 772,
          "name": "selectMenuOptions",
          "comment": {
            "description": "A generator for \nMessageSelectOption\n that will be used to generate the options for the \nMessageSelectMenu\n.\nWe do not allow overwriting the \nMessageSelectOption#value\n property with this, as it is vital to how we handle\nselect menu interactions.",
            "blockTags": [
              {
                "name": "pageIndex",
                "text": "The index of the page to add to the \nMessageSelectMenu\n. We will add 1 to this number because our pages are 0 based,\nso this will represent the pages as seen by the user."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tlabel: `Page ${pageIndex}`\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.selectMenuOptions = (pageIndex) => ({\n\t label: `Go to page: ${pageIndex}`,\n\t description: 'This is a description'\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1435,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 766,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "['@sapphire/paginated-messages.stop']"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setStopPaginatedMessageCustomIds(customIds)`"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.stopPaginatedMessageCustomIds = ['my-custom-stop-custom-id'];\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1354,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 773,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": "A generator for \nMessageComponentInteraction#reply\n that will be called and sent whenever an untargeted user interacts with one of the buttons.\nWhen modifying this it is recommended that the message is set to be ephemeral so only the user that is pressing the buttons can see them.\nFurthermore, we also recommend setting \n`allowedMentions: { users: [], roles: [] }`\n, so you don't have to worry about accidentally pinging anyone.\n\nWhen setting just a string, we will add \n`{ ephemeral: true, allowedMentions: { users: [], roles: [] } }`\n for you.",
            "blockTags": [
              {
                "name": "targetUser",
                "text": "The \nUser\n this \nPaginatedMessage\n was intended for."
              },
              {
                "name": "interactionUser",
                "text": "The \nUser\n that actually clicked the button."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tcontent: `Please stop interacting with the components on this message. They are only for ${Formatters.userMention(targetUser.id)}.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\n// We  will add ephemeral and no allowed mention for string only overwrites\nPaginatedMessage.wrongUserInteractionReply = (targetUser) =>\n    `These buttons are only for ${Formatters.userMention(targetUser.id)}. Press them as much as you want, but I won't do anything with your clicks.`;\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\nimport { Formatters } from 'discord.js';\n\nPaginatedMessage.wrongUserInteractionReply = (targetUser) => ({\n\tcontent: `These buttons are only for ${Formatters.userMention(\n\t\ttargetUser.id\n\t)}. Press them as much as you want, but I won't do anything with your clicks.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1479,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 829,
          "name": "addAction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 413,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 830,
              "name": "addAction",
              "comment": {
                "description": "Adds an action to the existing ones. This will be added as the last action.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the action."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 831,
                  "name": "action",
                  "type": {
                    "kind": "reference",
                    "id": 959,
                    "name": "PaginatedMessageAction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 826,
          "name": "addActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 403,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 827,
              "name": "addActions",
              "comment": {
                "description": "Adds actions to the existing ones. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the actions."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 828,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 847,
          "name": "addAsyncPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 540,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 848,
              "name": "addAsyncPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageBuilder\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageBuilder(async (builder) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 849,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 850,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 540,
                              "character": 55,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L540"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 851,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 852,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 862,
          "name": "addAsyncPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 610,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 863,
              "name": "addAsyncPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbed(async (embed) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn embed;\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 864,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 865,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 610,
                              "character": 49,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L610"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 866,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 867,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 883,
          "name": "addAsyncPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 752,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 884,
              "name": "addAsyncPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage().addAsyncPageEmbeds(async (embed0, embed1, embed2) => {\n\tconst someRemoteData = (await fetch('https://contoso.com/api/users')) as any;\n\n\tfor (const [index, user] of Object.entries(someRemoteData.users.slice(0, 10)) as [`${0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10}`, any][]) {\n\t\tswitch (index) {\n\t\t\tcase '0': {\n\t\t\t\tembed0.setColor('#FF0000').setDescription('example description 1').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '1': {\n\t\t\t\tembed1.setColor('#00FF00').setDescription('example description 2').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '2': {\n\t\t\t\tembed2.setColor('#0000FF').setDescription('example description 3').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [embed0, embed1, embed2];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 885,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 886,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 755,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L755"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 887,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 888,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 889,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 890,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 891,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 892,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 893,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 894,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 895,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 896,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 897,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "name": "MessageEmbed",
                                      "qualifiedName": "MessageEmbed",
                                      "package": "discord.js"
                                    }
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 838,
          "name": "addPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 455,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 839,
              "name": "addPage",
              "comment": {
                "description": "Adds a page to the existing ones. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "While you can use this method you should first check out\n\naddPageBuilder\n,\n\naddPageContent\n and\n\naddPageEmbed\n as\nthese are easier functional methods of adding pages and will likely already suffice for your needs."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 840,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 841,
          "name": "addPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 514,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 842,
              "name": "addPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageBuilder\n. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder((builder) => {\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { MessageEmbed } = require('discord.js');\nconst { MessageBuilder, PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst builder = new MessageBuilder()\n\t.setContent('example content')\n\t.setEmbeds([embed]);\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder(builder);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 843,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 844,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 514,
                              "character": 50,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L514"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 845,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 846,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 111,
                                "name": "MessageBuilder"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 853,
          "name": "addPageContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 555,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 854,
              "name": "addPageContent",
              "comment": {
                "description": "Adds a page to the existing ones using simple message content. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageContent('example content');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 855,
                  "name": "content",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 856,
          "name": "addPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 587,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 857,
              "name": "addPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed((embed) => {\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn embed;\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed(embed);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 858,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 859,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 587,
                              "character": 44,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L587"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 860,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 861,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 868,
          "name": "addPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 661,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 869,
              "name": "addPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds((embed1, embed2, embed3) => { // You can add up to 10 embeds\n\t\tembed1\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description 1');\n\n\t\tembed2\n\t\t\t.setColor('#00FF00')\n\t\t\t.setDescription('example description 2');\n\n\t\tembed3\n\t\t\t.setColor('#0000FF')\n\t\t\t.setDescription('example description 3');\n\n\t\treturn [embed1, embed2, embed3];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 870,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 871,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 664,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L664"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 872,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 873,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 874,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 875,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 876,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 877,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 878,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 879,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 880,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 881,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 882,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "name": "MessageEmbed",
                                  "qualifiedName": "MessageEmbed",
                                  "package": "discord.js"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 898,
          "name": "addPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 796,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 899,
              "name": "addPages",
              "comment": {
                "description": "Add pages to the existing ones. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 900,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 933,
          "name": "applyFooter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 934,
              "name": "applyFooter",
              "comment": {
                "description": "Applies footer to the last embed of the page",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The message options with the footer applied"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 935,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 936,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1020,
                "name": "PaginatedMessageMessageOptionsUnion",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 941,
          "name": "applyTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1208,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 942,
              "name": "applyTemplate",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 943,
                  "name": "template",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 944,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1020,
                "name": "PaginatedMessageMessageOptionsUnion",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 945,
          "name": "applyTemplateEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1217,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 946,
              "name": "applyTemplateEmbed",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 947,
                  "name": "templateEmbed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "union",
                          "types": [
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "MessageEmbed",
                              "packageName": "discord.js",
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "MessageEmbedOptions",
                              "packageName": "discord.js",
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "APIEmbed",
                              "packageName": "discord-api-types",
                              "typeArguments": []
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 948,
                  "name": "pageEmbeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "union",
                          "types": [
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "MessageEmbed",
                              "packageName": "discord.js",
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "MessageEmbedOptions",
                              "packageName": "discord.js",
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "APIEmbed",
                              "packageName": "discord-api-types",
                              "typeArguments": []
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbedOptions",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "APIEmbed",
                          "packageName": "discord-api-types",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 910,
          "name": "clone",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 955,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 911,
              "name": "clone",
              "comment": {
                "description": "Clones the current handler into a new instance.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 924,
          "name": "handleCollect",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1090,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 925,
              "name": "handleCollect",
              "comment": {
                "description": "Handles the \n`collect`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 926,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 927,
                  "name": "channel",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "DMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "PartialDMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "NewsChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "TextChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ThreadChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "VoiceChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 928,
                  "name": "interaction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "SelectMenuInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ButtonInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 929,
          "name": "handleEnd",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1145,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 930,
              "name": "handleEnd",
              "comment": {
                "description": "Handles the \n`end`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 931,
                  "name": "_",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "SelectMenuInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "ButtonInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 932,
                  "name": "reason",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 920,
          "name": "handlePageLoad",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1070,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 921,
              "name": "handlePageLoad",
              "comment": {
                "description": "Handles the load of a page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 922,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 923,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 832,
          "name": "hasPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 430,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 833,
              "name": "hasPage",
              "comment": {
                "description": "Checks whether or not the handler has a specific page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 834,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 953,
          "name": "mergeArrays",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1260,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 954,
              "name": "mergeArrays",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 955,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 956,
                  "name": "template",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 955,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 957,
                  "name": "array",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 955,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 955,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 949,
          "name": "mergeEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1232,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 950,
              "name": "mergeEmbeds",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 951,
                  "name": "templateEmbed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbedOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "APIEmbed",
                        "packageName": "discord-api-types",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 952,
                  "name": "pageEmbeds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbedOptions",
                          "packageName": "discord.js",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "APIEmbed",
                          "packageName": "discord-api-types",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "MessageEmbed",
                      "packageName": "discord.js",
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "MessageEmbedOptions",
                      "packageName": "discord.js",
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "APIEmbed",
                      "packageName": "discord-api-types",
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 907,
          "name": "resolvePage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 938,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 908,
              "name": "resolvePage",
              "comment": {
                "description": "Executed whenever an action is triggered and resolved.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 909,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 905,
          "name": "resolvePagesOnRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 928,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 906,
              "name": "resolvePagesOnRun",
              "comment": {
                "description": "Executed whenever \nrun\n is called.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 937,
          "name": "resolvePaginatedMessageInternationalizationContext",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 938,
              "name": "resolvePaginatedMessageInternationalizationContext",
              "comment": {
                "description": "Constructs a \nPaginatedMessageInternationalizationContext",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A constructed \nPaginatedMessageInternationalizationContext"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 939,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 940,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1021,
                "name": "PaginatedMessageInternationalizationContext",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 901,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 819,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 902,
              "name": "run",
              "comment": {
                "description": "Executes the \nPaginatedMessage\n and sends the pages corresponding with \nindex\n.\nThe handler will start collecting message component interactions.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "Please note that for \nPaginatedMessage\n to work in DMs to your client, you need to add the \n`'CHANNEL'`\n partial to your \n`client.options.partials`\n.\nMessage based commands can always be used in DMs, whereas Chat Input interactions can only be used in DMs when they are registered globally."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 903,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 904,
                  "name": "target",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 763,
                    "name": "PaginatedMessage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 822,
          "name": "setActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 393,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 823,
              "name": "setActions",
              "comment": {
                "description": "Clears all current actions and sets them. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "You can retrieve the default actions for the regular pagination"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  ...PaginatedMessage.defaultActions,\n])\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message Buttons by providing \n`style`\n, \n`customId`\n, \n`type`\n, \n`run`\n and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'PRIMARY',\n    label: 'My Button',\n    customId: 'custom_button',\n    type: Constants.MessageComponentTypes.BUTTON,\n    run: (context) => console.log(context)\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message **Link** Buttons by providing \n`style`\n, \n`url`\n, \n`type`\n, and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'LINK',\n    label: 'Sapphire Website',\n    emoji: '🔷',\n    url: 'https://sapphirejs.dev',\n    type: Constants.MessageComponentTypes.BUTTON\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Select Menus by providing \n`customId`\n, \n`type`\n, and \n`run`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    customId: 'custom_menu',\n    type: Constants.MessageComponentTypes.SELECT_MENU,\n    run: (context) => console.log(context) // Do something here\n  }\n], true);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 824,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 825,
                  "name": "includeDefaultActions",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 813,
          "name": "setEmitPartialDMChannelWarning",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 304,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 814,
              "name": "setEmitPartialDMChannelWarning",
              "comment": {
                "description": "Sets the \nemitPartialDMChannelWarning\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 815,
                  "name": "emitPartialDMChannelWarning",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 819,
          "name": "setIdle",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 322,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 820,
              "name": "setIdle",
              "comment": {
                "description": "Sets the amount of time to idle before the paginator is closed.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 821,
                  "name": "idle",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 816,
          "name": "setIndex",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 313,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 817,
              "name": "setIndex",
              "comment": {
                "description": "Sets the handler's current page/message index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 818,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 835,
          "name": "setPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 438,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 836,
              "name": "setPages",
              "comment": {
                "description": "Clears all current pages and messages and sets them. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 837,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 801,
          "name": "setSelectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 260,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 802,
              "name": "setSelectMenuOptions",
              "comment": {
                "description": "Sets the \nselectMenuOptions\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 803,
                  "name": "newOptions",
                  "type": {
                    "kind": "reference",
                    "id": 1008,
                    "name": "PaginatedMessageSelectMenuOptionsFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 804,
          "name": "setSelectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 271,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 805,
              "name": "setSelectMenuPlaceholder",
              "comment": {
                "description": "Sets the \nselectMenuPlaceholder\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 806,
                  "name": "placeholder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 810,
          "name": "setStopPaginatedMessageCustomIds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 293,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 811,
              "name": "setStopPaginatedMessageCustomIds",
              "comment": {
                "description": "Sets the \nstopPaginatedMessageCustomIds\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 812,
                  "name": "stopPaginatedMessageCustomIds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 916,
          "name": "setUpCollector",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1037,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 917,
              "name": "setUpCollector",
              "comment": {
                "description": "Sets up the message's collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 918,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "TextBasedChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 919,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 912,
          "name": "setUpMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 973,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 913,
              "name": "setUpMessage",
              "comment": {
                "description": "Sets up the message.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 914,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 915,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 807,
          "name": "setWrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 282,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 808,
              "name": "setWrongUserInteractionReply",
              "comment": {
                "description": "Sets the \nwrongUserInteractionReply\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 809,
                  "name": "wrongUserInteractionReply",
                  "type": {
                    "kind": "reference",
                    "id": 1013,
                    "name": "PaginatedMessageWrongUserInteractionReplyFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 774,
          "name": "resolveTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1485,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 775,
              "name": "resolveTemplate",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 776,
                  "name": "template",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "MessageOptions",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1035,
      "name": "PaginatedMessageEmbedFields",
      "comment": {
        "description": "This is a utility of \nPaginatedMessage\n, except it exclusively paginates the fields of an embed.\nYou must either use this class directly or extend it.\n\nIt differs from PaginatedFieldMessageEmbed as the items here are whole fields, that are added to the embed,\nwhereas PaginatedFieldMessageEmbed concatenates the items in a single field with a given formatter function.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nimport { PaginatedMessageEmbedFields } from '@sapphire/discord.js-utilities';\n\nnew PaginatedMessageEmbedFields()\n\t.setTemplate({ title: 'Test pager embed', color: '#006080' })\n\t.setItems([\n\t\t{ name: 'Sapphire Framework', value: 'discord.js Framework' },\n\t\t{ name: 'Sapphire Framework 2', value: 'discord.js Framework 2' },\n\t\t{ name: 'Sapphire Framework 3', value: 'discord.js Framework 3' }\n\t])\n\t.setItemsPerPage(2)\n\t.make()\n\t.run(message);\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 29,
        "file": "PaginatedMessageEmbedFields.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 763,
        "name": "PaginatedMessage",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 1046,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 222,
          "file": "PaginatedMessage.ts",
          "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
        },
        "parameters": [
          {
            "id": 1048,
            "name": "__namedParameters",
            "type": {
              "kind": "reference",
              "id": 995,
              "name": "PaginatedMessageOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1080,
          "name": "#thisMazeWasNotMeantForYouContent",
          "comment": {
            "description": "The response we send when someone gets into an invalid flow",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 1081,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1082,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                      "line": 117,
                      "character": 39,
                      "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"This maze wasn't meant for you...what did you do.\""
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    1082
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                  "line": 117,
                  "character": 37,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L117"
                }
              ]
            }
          }
        },
        {
          "id": 1087,
          "name": "actions",
          "comment": {
            "description": "The actions which are to be used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 143,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 959,
                "name": "PaginatedMessageAction",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1085,
          "name": "collector",
          "comment": {
            "description": "The collector used for handling component interactions.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "InteractionCollector",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageComponentInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 1241,
          "name": "constructor",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1499,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 763,
              "name": "PaginatedMessage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 1092,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator to show after the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.embedFooterSeparator```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 175,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1049,
          "name": "embedTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 30,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageEmbed",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 1094,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client having the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "default",
                "text": "```PaginatedMessage.emitPartialDMChannelWarning```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 189,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1099,
          "name": "hasEmittedMaxPageWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the maximum amount of pages in the \nSelectMenu\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 205,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1100,
          "name": "hasEmittedPartialDMChannelWarning",
          "comment": {
            "description": "Tracks whether a warning was already emitted for this \nPaginatedMessage\n\nconcerning the \nPaginatedMessage\n being called in a \n`DMChannel`\n\nwithout the client having the \n`'Channel'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 214,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1089,
          "name": "idle",
          "comment": {
            "description": "The amount of milliseconds to idle before the paginator is closed.",
            "blockTags": [
              {
                "name": "default",
                "text": "14.5 minutes"
              },
              {
                "name": "remark",
                "text": "This is to ensure it is a bit before interactions expire."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 155,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1088,
          "name": "index",
          "comment": {
            "description": "The handler's current page/message index.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 148,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1051,
          "name": "items",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "EmbedFieldData",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        },
        {
          "id": 1052,
          "name": "itemsPerPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1086,
          "name": "messages",
          "comment": {
            "description": "The pages which were converted from \npages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "null"
                },
                {
                  "kind": "reference",
                  "id": 1002,
                  "name": "PaginatedMessagePage",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 1091,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.pageIndexPrefix```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1083,
          "name": "pages",
          "comment": {
            "description": "The pages to be converted to \nmessages",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1002,
              "name": "PaginatedMessagePage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 1095,
          "name": "paginatedMessageData",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "components"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 1084,
          "name": "response",
          "comment": {
            "description": "The response message used to edit on page changes.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 1348,
                "name": "NonModalInteraction",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1096,
          "name": "selectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 195,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 1097,
          "name": "selectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 197,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 1093,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "```PaginatedMessage.stopPaginatedMessageCustomIds```\n (static property)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 181,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 1090,
          "name": "template",
          "comment": {
            "description": "The template for this \nPaginatedMessage\n.\nYou can use templates to set defaults that will apply to each and every page in the \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 161,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1020,
            "name": "PaginatedMessageMessageOptionsUnion",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 1050,
          "name": "totalPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 31,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1098,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 199,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 1036,
          "name": "defaultActions",
          "comment": {
            "description": "The default actions of this handler.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1275,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 959,
              "name": "PaginatedMessageAction",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 1039,
          "name": "deletionStopReasons",
          "comment": {
            "description": "The reasons sent by \nInteractionCollector#end\n\nevent when the message (or its owner) has been deleted.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1360,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 1041,
          "name": "embedFooterSeparator",
          "comment": {
            "description": "Custom separator for the page index in the embed footer.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"•\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by passing \n`embedFooterSeparator`\n in the options of the constructor."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.embedFooterSeparator = '|';\n// This will make the separator of the embed footer something like \"Page 1/2 | Today at 4:20\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1390,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1037,
          "name": "emitPartialDMChannelWarning",
          "comment": {
            "description": "Whether to emit the warning about running a \nPaginatedMessage\n in a DM channel without the client the \n`'CHANNEL'`\n partial.",
            "blockTags": [
              {
                "name": "remark",
                "text": "When using message based commands (as opposed to Application Commands) then you will also need to specify the \n`DIRECT_MESSAGE`\n intent for \nPaginatedMessage\n to work."
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setEmitPartialDMChannelWarning(newBoolean)`"
              },
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1340,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1043,
          "name": "handlers",
          "comment": {
            "description": "The current \nInteractionCollector\n handlers that are active.\nThe key is the ID of of the author who sent the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that any given author can only trigger 1 \nPaginatedMessage\n.\nThis is important for performance reasons, and users should not have more than 1 \nPaginatedMessage\n open at once.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1408,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1042,
          "name": "messages",
          "comment": {
            "description": "The messages that are currently being handled by a \nPaginatedMessage\n\nThe key is the ID of the message that triggered this \nPaginatedMessage\n\n\nThis is to ensure that only 1 \nPaginatedMessage\n can run on a specified message at once.\nThis is important when having an editable commands solution.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1399,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1040,
          "name": "pageIndexPrefix",
          "comment": {
            "description": "Custom text to show in front of the page index in the embed footer.\nPaginatedMessage will automatically add a space (\n` `\n) after the given text. You do not have to add it yourself.",
            "blockTags": [
              {
                "name": "default",
                "text": "\"\""
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.pageIndexPrefix = 'Page';\n// This will make the footer of the embed something like \"Page 1/2\"\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1375,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1044,
          "name": "selectMenuOptions",
          "comment": {
            "description": "A generator for \nMessageSelectOption\n that will be used to generate the options for the \nMessageSelectMenu\n.\nWe do not allow overwriting the \nMessageSelectOption#value\n property with this, as it is vital to how we handle\nselect menu interactions.",
            "blockTags": [
              {
                "name": "pageIndex",
                "text": "The index of the page to add to the \nMessageSelectMenu\n. We will add 1 to this number because our pages are 0 based,\nso this will represent the pages as seen by the user."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tlabel: `Page ${pageIndex}`\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.selectMenuOptions = (pageIndex) => ({\n\t label: `Go to page: ${pageIndex}`,\n\t description: 'This is a description'\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1435,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1008,
            "name": "PaginatedMessageSelectMenuOptionsFunction",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 1038,
          "name": "stopPaginatedMessageCustomIds",
          "comment": {
            "description": "A list of \n`customId`\n that are bound to actions that will stop the \nPaginatedMessage",
            "blockTags": [
              {
                "name": "default",
                "text": "['@sapphire/paginated-messages.stop']"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it somewhere in a \"setup\" file, i.e. where you also call \n`client.login()`\n for your client.\nAlternatively, you can also customize it on a per-PaginatedMessage basis by using \n`paginatedMessageInstance.setStopPaginatedMessageCustomIds(customIds)`"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\nPaginatedMessage.stopPaginatedMessageCustomIds = ['my-custom-stop-custom-id'];\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1354,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 1045,
          "name": "wrongUserInteractionReply",
          "comment": {
            "description": "A generator for \nMessageComponentInteraction#reply\n that will be called and sent whenever an untargeted user interacts with one of the buttons.\nWhen modifying this it is recommended that the message is set to be ephemeral so only the user that is pressing the buttons can see them.\nFurthermore, we also recommend setting \n`allowedMentions: { users: [], roles: [] }`\n, so you don't have to worry about accidentally pinging anyone.\n\nWhen setting just a string, we will add \n`{ ephemeral: true, allowedMentions: { users: [], roles: [] } }`\n for you.",
            "blockTags": [
              {
                "name": "targetUser",
                "text": "The \nUser\n this \nPaginatedMessage\n was intended for."
              },
              {
                "name": "interactionUser",
                "text": "The \nUser\n that actually clicked the button."
              },
              {
                "name": "default",
                "text": "```ts\n{\n\tcontent: `Please stop interacting with the components on this message. They are only for ${Formatters.userMention(targetUser.id)}.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n}\n```"
              },
              {
                "name": "remark",
                "text": "To overwrite this property change it in a \"setup\" file prior to calling \n`client.login()`\n for your client."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\n\n// We  will add ephemeral and no allowed mention for string only overwrites\nPaginatedMessage.wrongUserInteractionReply = (targetUser) =>\n    `These buttons are only for ${Formatters.userMention(targetUser.id)}. Press them as much as you want, but I won't do anything with your clicks.`;\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { PaginatedMessage } from '@sapphire/discord.js-utilities';\nimport { Formatters } from 'discord.js';\n\nPaginatedMessage.wrongUserInteractionReply = (targetUser) => ({\n\tcontent: `These buttons are only for ${Formatters.userMention(\n\t\ttargetUser.id\n\t)}. Press them as much as you want, but I won't do anything with your clicks.`,\n\tephemeral: true,\n\tallowedMentions: { users: [], roles: [] }\n});\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1479,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1013,
            "name": "PaginatedMessageWrongUserInteractionReplyFunction",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 1129,
          "name": "addAction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 413,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1130,
              "name": "addAction",
              "comment": {
                "description": "Adds an action to the existing ones. This will be added as the last action.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the action."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1131,
                  "name": "action",
                  "type": {
                    "kind": "reference",
                    "id": 959,
                    "name": "PaginatedMessageAction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1126,
          "name": "addActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 403,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1127,
              "name": "addActions",
              "comment": {
                "description": "Adds actions to the existing ones. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "setActions\n for examples on how to structure the actions."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1128,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1147,
          "name": "addAsyncPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 540,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1148,
              "name": "addAsyncPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageBuilder\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageBuilder(async (builder) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1149,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1150,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 540,
                              "character": 55,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L540"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1151,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1152,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1162,
          "name": "addAsyncPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 610,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1163,
              "name": "addAsyncPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbed(async (embed) => {\n\t\tconst someRemoteData = await fetch('https://contoso.com/api/users');\n\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription(someRemoteData.data);\n\n\t\treturn embed;\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1164,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1165,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 610,
                              "character": 49,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L610"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1166,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1167,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1183,
          "name": "addAsyncPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 752,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1184,
              "name": "addAsyncPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage().addAsyncPageEmbeds(async (embed0, embed1, embed2) => {\n\tconst someRemoteData = (await fetch('https://contoso.com/api/users')) as any;\n\n\tfor (const [index, user] of Object.entries(someRemoteData.users.slice(0, 10)) as [`${0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10}`, any][]) {\n\t\tswitch (index) {\n\t\t\tcase '0': {\n\t\t\t\tembed0.setColor('#FF0000').setDescription('example description 1').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '1': {\n\t\t\t\tembed1.setColor('#00FF00').setDescription('example description 2').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '2': {\n\t\t\t\tembed2.setColor('#0000FF').setDescription('example description 3').setAuthor(user.name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [embed0, embed1, embed2];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addAsyncPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1185,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1186,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 755,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L755"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1187,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1188,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1189,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1190,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1191,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1192,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1193,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1194,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1195,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1196,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1197,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "name": "MessageEmbed",
                                      "qualifiedName": "MessageEmbed",
                                      "package": "discord.js"
                                    }
                                  }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1138,
          "name": "addPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 455,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1139,
              "name": "addPage",
              "comment": {
                "description": "Adds a page to the existing ones. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "While you can use this method you should first check out\n\naddPageBuilder\n,\n\naddPageContent\n and\n\naddPageEmbed\n as\nthese are easier functional methods of adding pages and will likely already suffice for your needs."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1140,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1141,
          "name": "addPageBuilder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 514,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1142,
              "name": "addPageBuilder",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageBuilder\n. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\nconst { MessageEmbed } = require('discord.js');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder((builder) => {\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn builder\n\t\t\t.setContent('example content')\n\t\t\t.setEmbeds([embed]);\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { MessageEmbed } = require('discord.js');\nconst { MessageBuilder, PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst builder = new MessageBuilder()\n\t.setContent('example content')\n\t.setEmbeds([embed]);\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageBuilder(builder);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1143,
                  "name": "builder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 111,
                        "name": "MessageBuilder",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1144,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 514,
                              "character": 50,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L514"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1145,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1146,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 111,
                                    "name": "MessageBuilder"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 111,
                                "name": "MessageBuilder"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1153,
          "name": "addPageContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 555,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1154,
              "name": "addPageContent",
              "comment": {
                "description": "Adds a page to the existing ones using simple message content. This will be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageContent('example content');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1155,
                  "name": "content",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1156,
          "name": "addPageEmbed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 587,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1157,
              "name": "addPageEmbed",
              "comment": {
                "description": "Adds a page to the existing ones using a \nMessageEmbed\n. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed((embed) => {\n\t\tembed\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description');\n\n\t\treturn embed;\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbed(embed);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1158,
                  "name": "embed",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1159,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 587,
                              "character": 44,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L587"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1160,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1161,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1168,
          "name": "addPageEmbeds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 661,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1169,
              "name": "addPageEmbeds",
              "comment": {
                "description": "Adds a page to the existing ones asynchronously using multiple \nMessageEmbed\n's. This wil be added as the last page.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "When using this with a callback this will construct 10 \nMessageEmbed\n's in the callback parameters, regardless of how many are actually used.\nIf this a performance impact you do not want to cope with then it is recommended to use \naddPageBuilder\n instead, which will let you add\nas many embeds as you want, albeit manually"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds((embed1, embed2, embed3) => { // You can add up to 10 embeds\n\t\tembed1\n\t\t\t.setColor('#FF0000')\n\t\t\t.setDescription('example description 1');\n\n\t\tembed2\n\t\t\t.setColor('#00FF00')\n\t\t\t.setDescription('example description 2');\n\n\t\tembed3\n\t\t\t.setColor('#0000FF')\n\t\t\t.setDescription('example description 3');\n\n\t\treturn [embed1, embed2, embed3];\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst { PaginatedMessage } = require('@sapphire/discord.js-utilities');\n\nconst embed1 = new MessageEmbed()\n\t.setColor('#FF0000')\n\t.setDescription('example description 1');\n\nconst embed2 = new MessageEmbed()\n\t.setColor('#00FF00')\n\t.setDescription('example description 2');\n\nconst embed3 = new MessageEmbed()\n\t.setColor('#0000FF')\n\t.setDescription('example description 3');\n\nconst paginatedMessage = new PaginatedMessage()\n\t.addPageEmbeds([embed1, embed2, embed3]); // You can add up to 10 embeds\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1170,
                  "name": "embeds",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageEmbed",
                          "packageName": "discord.js",
                          "typeArguments": []
                        }
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1171,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts",
                              "line": 664,
                              "character": 6,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessage.ts#L664"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1172,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1173,
                                  "name": "embed1",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1174,
                                  "name": "embed2",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1175,
                                  "name": "embed3",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1176,
                                  "name": "embed4",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1177,
                                  "name": "embed5",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1178,
                                  "name": "embed6",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1179,
                                  "name": "embed7",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1180,
                                  "name": "embed8",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1181,
                                  "name": "embed9",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                },
                                {
                                  "id": 1182,
                                  "name": "embed10",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "name": "MessageEmbed",
                                  "qualifiedName": "MessageEmbed",
                                  "package": "discord.js"
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1198,
          "name": "addPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 796,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1199,
              "name": "addPages",
              "comment": {
                "description": "Add pages to the existing ones. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1200,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1233,
          "name": "applyFooter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1168,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1234,
              "name": "applyFooter",
              "comment": {
                "description": "Applies footer to the last embed of the page",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The message options with the footer applied"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1235,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 1236,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1020,
                "name": "PaginatedMessageMessageOptionsUnion",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1210,
          "name": "clone",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 955,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1211,
              "name": "clone",
              "comment": {
                "description": "Clones the current handler into a new instance.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 763,
                "name": "PaginatedMessage",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1067,
          "name": "generatePages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1068,
              "name": "generatePages",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1224,
          "name": "handleCollect",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1090,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1225,
              "name": "handleCollect",
              "comment": {
                "description": "Handles the \n`collect`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1226,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1227,
                  "name": "channel",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "DMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "PartialDMChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "NewsChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "TextChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ThreadChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "VoiceChannel",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1228,
                  "name": "interaction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "SelectMenuInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ButtonInteraction",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "CacheType",
                            "packageName": "discord.js",
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1229,
          "name": "handleEnd",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1145,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1230,
              "name": "handleEnd",
              "comment": {
                "description": "Handles the \n`end`\n event from the collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1231,
                  "name": "_",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "SelectMenuInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "ButtonInteraction",
                            "packageName": "discord.js",
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CacheType",
                                "packageName": "discord.js",
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 1232,
                  "name": "reason",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1220,
          "name": "handlePageLoad",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1070,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1221,
              "name": "handlePageLoad",
              "comment": {
                "description": "Handles the load of a page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1222,
                  "name": "page",
                  "type": {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 1223,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1132,
          "name": "hasPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 430,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1133,
              "name": "hasPage",
              "comment": {
                "description": "Checks whether or not the handler has a specific page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1134,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1065,
          "name": "make",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 108,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1066,
              "name": "make",
              "comment": {
                "description": "Build the pages of the given array.\n\nYou must call the \nPaginatedMessageEmbedFields.make\n and \nPaginatedMessageEmbedFields.run\n methods last, in that order, for the pagination to work.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedMessageEmbedFields } from '@sapphire/discord.js-utilities';\n\nnew PaginatedMessageEmbedFields()\n\t.setItems([\n\t\t{ name: 'Sapphire Framework', value: 'discord.js Framework' },\n\t\t{ name: 'Sapphire Framework 2', value: 'discord.js Framework 2' },\n\t\t{ name: 'Sapphire Framework 3', value: 'discord.js Framework 3' }\n\t])\n\t.setItemsPerPage(3)\n\t.make()\n\t.run(message);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1069,
          "name": "paginateArray",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1070,
              "name": "paginateArray",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1071,
                  "name": "items",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "EmbedFieldData",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 1072,
                  "name": "currentPage",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 1073,
                  "name": "perPageItems",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "EmbedFieldData",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1207,
          "name": "resolvePage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 938,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1208,
              "name": "resolvePage",
              "comment": {
                "description": "Executed whenever an action is triggered and resolved.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1209,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1002,
                    "name": "PaginatedMessagePage",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1205,
          "name": "resolvePagesOnRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 928,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1206,
              "name": "resolvePagesOnRun",
              "comment": {
                "description": "Executed whenever \nrun\n is called.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1237,
          "name": "resolvePaginatedMessageInternationalizationContext",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1193,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1238,
              "name": "resolvePaginatedMessageInternationalizationContext",
              "comment": {
                "description": "Constructs a \nPaginatedMessageInternationalizationContext",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A constructed \nPaginatedMessageInternationalizationContext"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1239,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1240,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1021,
                "name": "PaginatedMessageInternationalizationContext",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1074,
          "name": "resolveTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1075,
              "name": "resolveTemplate",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1076,
                  "name": "template",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbedOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1077,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageEmbedFields.ts",
                              "line": 138,
                              "character": 73,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageEmbedFields.ts#L138"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1078,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1079,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "MessageEmbed",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1201,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 819,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1202,
              "name": "run",
              "comment": {
                "description": "Executes the \nPaginatedMessage\n and sends the pages corresponding with \nindex\n.\nThe handler will start collecting message component interactions.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "Please note that for \nPaginatedMessage\n to work in DMs to your client, you need to add the \n`'CHANNEL'`\n partial to your \n`client.options.partials`\n.\nMessage based commands can always be used in DMs, whereas Chat Input interactions can only be used in DMs when they are registered globally."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1203,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1204,
                  "name": "target",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1035,
                    "name": "PaginatedMessageEmbedFields",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1122,
          "name": "setActions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 393,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1123,
              "name": "setActions",
              "comment": {
                "description": "Clears all current actions and sets them. The order given is the order they will be used.",
                "blockTags": [
                  {
                    "name": "remark",
                    "text": "You can retrieve the default actions for the regular pagination"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  ...PaginatedMessage.defaultActions,\n])\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message Buttons by providing \n`style`\n, \n`customId`\n, \n`type`\n, \n`run`\n and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'PRIMARY',\n    label: 'My Button',\n    customId: 'custom_button',\n    type: Constants.MessageComponentTypes.BUTTON,\n    run: (context) => console.log(context)\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Message **Link** Buttons by providing \n`style`\n, \n`url`\n, \n`type`\n, and at least one of \n`label`\n or \n`emoji`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    style: 'LINK',\n    label: 'Sapphire Website',\n    emoji: '🔷',\n    url: 'https://sapphirejs.dev',\n    type: Constants.MessageComponentTypes.BUTTON\n  }\n], true);\n```"
                  },
                  {
                    "name": "remark",
                    "text": "You can add custom Select Menus by providing \n`customId`\n, \n`type`\n, and \n`run`\n."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst display = new PaginatedMessage();\n\ndisplay.setActions([\n  {\n    customId: 'custom_menu',\n    type: Constants.MessageComponentTypes.SELECT_MENU,\n    run: (context) => console.log(context) // Do something here\n  }\n], true);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1124,
                  "name": "actions",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 959,
                      "name": "PaginatedMessageAction",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 1125,
                  "name": "includeDefaultActions",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1113,
          "name": "setEmitPartialDMChannelWarning",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 304,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1114,
              "name": "setEmitPartialDMChannelWarning",
              "comment": {
                "description": "Sets the \nemitPartialDMChannelWarning\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1115,
                  "name": "emitPartialDMChannelWarning",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1119,
          "name": "setIdle",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 322,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1120,
              "name": "setIdle",
              "comment": {
                "description": "Sets the amount of time to idle before the paginator is closed.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1121,
                  "name": "idle",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1116,
          "name": "setIndex",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 313,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1117,
              "name": "setIndex",
              "comment": {
                "description": "Sets the handler's current page/message index.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1118,
                  "name": "index",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1053,
          "name": "setItems",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1054,
              "name": "setItems",
              "comment": {
                "description": "Set the items to paginate.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1055,
                  "name": "items",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "EmbedFieldData",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1056,
          "name": "setItemsPerPage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 48,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1057,
              "name": "setItemsPerPage",
              "comment": {
                "description": "Sets the amount of items that should be shown per page.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1058,
                  "name": "itemsPerPage",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1135,
          "name": "setPages",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 438,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1136,
              "name": "setPages",
              "comment": {
                "description": "Clears all current pages and messages and sets them. The order given is the order they will be used.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1137,
                  "name": "pages",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1002,
                      "name": "PaginatedMessagePage",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1101,
          "name": "setSelectMenuOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 260,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1102,
              "name": "setSelectMenuOptions",
              "comment": {
                "description": "Sets the \nselectMenuOptions\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1103,
                  "name": "newOptions",
                  "type": {
                    "kind": "reference",
                    "id": 1008,
                    "name": "PaginatedMessageSelectMenuOptionsFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1104,
          "name": "setSelectMenuPlaceholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 271,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1105,
              "name": "setSelectMenuPlaceholder",
              "comment": {
                "description": "Sets the \nselectMenuPlaceholder\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1106,
                  "name": "placeholder",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1110,
          "name": "setStopPaginatedMessageCustomIds",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 293,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1111,
              "name": "setStopPaginatedMessageCustomIds",
              "comment": {
                "description": "Sets the \nstopPaginatedMessageCustomIds\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1112,
                  "name": "stopPaginatedMessageCustomIds",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1059,
          "name": "setTemplate",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 83,
            "file": "PaginatedMessageEmbedFields.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1060,
              "name": "setTemplate",
              "comment": {
                "description": "Sets the template to be used to display the embed fields as pages. This template can either be set from a template \nMessageEmbed\n instance or an object with embed options.\nAll fields in the given template will be overwritten when calling \nmake\n.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedMessageEmbedFields } from '@sapphire/discord.js-utilities';\nimport { MessageEmbed } from 'discord.js';\n\nnew PaginatedMessageEmbedFields()\n\t.setTemplate(new MessageEmbed().setColor('#006080').setTitle('Test pager embed'))\n\t.setItems([{ name: 'My field', value: 'The field\\'s value' }])\n\t.make()\n\t.run(message);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { PaginatedMessageEmbedFields } from '@sapphire/discord.js-utilities';\nimport { MessageEmbed } from 'discord.js';\n\nnew PaginatedMessageEmbedFields()\n\t.setTemplate({ title: 'Test pager embed', color: '#006080' })\n\t.setItems([{ name: 'My field', value: 'The field\\'s value' }])\n\t.make()\n\t.run(message);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1061,
                  "name": "template",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbed",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "MessageEmbedOptions",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      {
                        "kind": "reflection",
                        "reflection": {
                          "id": 1062,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageEmbedFields.ts",
                              "line": 83,
                              "character": 68,
                              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageEmbedFields.ts#L83"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1063,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 1064,
                                  "name": "embed",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "name": "MessageEmbed",
                                    "qualifiedName": "MessageEmbed",
                                    "package": "discord.js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "MessageEmbed",
                                "qualifiedName": "MessageEmbed",
                                "package": "discord.js"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1216,
          "name": "setUpCollector",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1037,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1217,
              "name": "setUpCollector",
              "comment": {
                "description": "Sets up the message's collector.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1218,
                  "name": "channel",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "TextBasedChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1219,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1212,
          "name": "setUpMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 973,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1213,
              "name": "setUpMessage",
              "comment": {
                "description": "Sets up the message.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1214,
                  "name": "messageOrInteraction",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Message",
                        "packageName": "discord.js",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1348,
                        "name": "NonModalInteraction",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1215,
                  "name": "targetUser",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "User",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1107,
          "name": "setWrongUserInteractionReply",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 282,
            "file": "PaginatedMessage.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1108,
              "name": "setWrongUserInteractionReply",
              "comment": {
                "description": "Sets the \nwrongUserInteractionReply\n for this instance of \nPaginatedMessage\n.\nThis will only apply to this one instance and no others.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The current instance of \nPaginatedMessage"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1109,
                  "name": "wrongUserInteractionReply",
                  "type": {
                    "kind": "reference",
                    "id": 1013,
                    "name": "PaginatedMessageWrongUserInteractionReplyFunction",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1035,
                "name": "PaginatedMessageEmbedFields",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        }
      ]
    }
  ],
  "constants": [
    {
      "id": 1,
      "name": "ApplicationCommandLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord application commands (slash commands).",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 110,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 2,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 4,
              "name": "MaximumDescriptionCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in an application command description."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 118,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 3,
              "name": "MaximumNameCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in an application command name."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 114,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 32
              }
            },
            {
              "id": 5,
              "name": "MaximumOptionsLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum options allowed in an application command."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 122,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                4,
                3,
                5
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 110,
              "character": 40
            }
          ]
        }
      }
    },
    {
      "id": 6,
      "name": "ApplicationCommandOptionLimits",
      "comment": {
        "description": "Namespace containing limits related to Choices of Discord Application Commands.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 127,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 7,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 10,
              "name": "MaximumChoicesLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum length of choices allowed in the option of an application command."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 139,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 9,
              "name": "MaximumDescriptionCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the description of an option of an application command."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 135,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 8,
              "name": "MaximumNameCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the name of an option of an application command."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 131,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 32
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                10,
                9,
                8
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 127,
              "character": 46
            }
          ]
        }
      }
    },
    {
      "id": 11,
      "name": "AutoCompleteLimits",
      "comment": {
        "description": "Namespace container limits related to Discord autocomplete interactions.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 257,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 12,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 13,
              "name": "MaximumAmountOfOptions",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum options allowed in a single autocomplete response."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 261,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 14,
              "name": "MaximumLengthOfNameOfOption",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a select menu option's name."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 265,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                13,
                14
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 257,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 15,
      "name": "ButtonLimits",
      "comment": {
        "description": "Namespace containing limits related to Message Buttons.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 144,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 16,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 18,
              "name": "MaximumCustomIdCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a button custom ID."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 152,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 17,
              "name": "MaximumLabelCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a button label."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 148,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 80
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                18,
                17
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 144,
              "character": 28
            }
          ]
        }
      }
    },
    {
      "id": 19,
      "name": "ChannelLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord channels.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 20,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 21,
              "name": "MaximumDescriptionLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a channel description."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 8,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 1024
              }
            },
            {
              "id": 22,
              "name": "MaximumNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a channel name."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 12,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 23,
              "name": "MaximumViewersPerScreenShare",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum viewers allowed per screen share."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 16,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 50
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                21,
                22,
                23
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 4,
              "character": 29
            }
          ]
        }
      }
    },
    {
      "id": 24,
      "name": "ChannelMentionRegex",
      "comment": {
        "description": "Regex that can capture the ID in Discord Channel mentions",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^<#(?<id>\\d{17,20})>$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the ID of the channel. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 311,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 25,
      "name": "ChannelMessageRegex",
      "comment": {
        "description": "Regex that can capture the channel and message IDs in a channelId-messageId pattern\nThis pattern can be found when you hold Shift and hover over a message, and click the \"ID\" button",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^(?<channelId>\\d{17,20})-(?<messageId>\\d{17,20})$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the ID of the channel, named \n`channelId`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the ID of the message, named \n`messageId`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 319,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 26,
      "name": "DiscordHostnameRegex",
      "comment": {
        "description": "Regex that matches links on the known Discord host names",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?<subdomain>\\w+)\\.?(?<hostname>dis(?:cord)?(?:app|merch|status)?)\\.(?<tld>com|g(?:d|g|ift)|(?:de(?:sign|v))|media|new|store|net)/i`"
          },
          {
            "name": "remark",
            "text": "The regex is case insensitive"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the subdomain for this URL. It is named \n`subdomain`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the hostname for this URL, primarily \n`discord`\n but can also be \n`discordmerch`\n, \n`discordstatus`\n, \n`dis`\n, and \n`discordapp`\n. It is named \n`hostname`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the Top-Level Domain *without* \n`.`\n. It is named \n`tld`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 328,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 27,
      "name": "DiscordInviteLinkRegex",
      "comment": {
        "description": "Regex that can can capture the code of Discord invite links",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?:^|\\b)discord(?:(?:app)?\\.com/invite|\\.gg(?:/invite)?)/(?<code>[\\w-]{2,255})(?:$|\\b)/gi`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the invite URL's unique code. It is named \n`code`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 334,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 28,
      "name": "EmbedLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord embeds.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 29,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 30,
              "name": "MaximumAuthorNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the author field of an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 25,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 256
              }
            },
            {
              "id": 31,
              "name": "MaximumDescriptionLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in an embed description."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 29,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 4096
              }
            },
            {
              "id": 32,
              "name": "MaximumFieldNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the name of a field in an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 33,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 256
              }
            },
            {
              "id": 34,
              "name": "MaximumFieldValueLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the value of a field in an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 41,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 1024
              }
            },
            {
              "id": 33,
              "name": "MaximumFields",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum fields allowed in an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 37,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 35,
              "name": "MaximumFooterLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a footer of an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 45,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 2048
              }
            },
            {
              "id": 36,
              "name": "MaximumTitleLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the title of an embed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 49,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 256
              }
            },
            {
              "id": 37,
              "name": "MaximumTotalCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in an embed, in total."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 53,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 6000
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                30,
                31,
                32,
                34,
                33,
                35,
                36,
                37
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 21,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 38,
      "name": "EmojiLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord emojis.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 58,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 39,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 40,
              "name": "MaximumEmojiNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a custom guild emoji."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 62,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 32
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                40
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 58,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 41,
      "name": "EmojiRegex",
      "comment": {
        "description": "Regex that can capture the ID of any animated or non-animated custom Discord emoji",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^(?:<(?<animated>a)?:(?<name>\\w{2,32}):)?(?<id>\\d{17,21})>?$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 can be used to determine whether the emoji is animated or not. It is named \n`animated`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the name of the emoji as it is typed in a message. It is named \n`name`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the ID of the emoji. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 342,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 42,
      "name": "FormattedCustomEmoji",
      "comment": {
        "description": "Regex that matches any animated or non-animated custom Discord emoji.\nUnlike \nEmojiRegex\n It can be a substring of a larger string.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/<a?:\\w{2,32}:\\d{17,20}>/`"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 348,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 43,
      "name": "FormattedCustomEmojiWithGroups",
      "comment": {
        "description": "Regex that can capture any animated or non-animated custom Discord emoji.\nSimilar to \nFormattedCustomEmoji\n and unlike \nEmojiRegex\n can also be a substring of a larger string.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?<animated>a?):(?<name>[^:]+):(?<id>\\d{17,20})/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 can be used to determine whether the emoji is animated or not. It is named \n`animated`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the name of the emoji as it is typed in a message. It is named \n`name`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the ID of the emoji. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 357,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 44,
      "name": "GuildLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord guilds.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 67,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 45,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 46,
              "name": "MaximumChannels",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum channels allowed per guild, including category channels."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 71,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 500
              }
            },
            {
              "id": 47,
              "name": "MaximumRoles",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum roles allowed in a guild."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 75,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 250
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                46,
                47
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 67,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 48,
      "name": "GuildMemberLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord guild members.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 80,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 49,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 50,
              "name": "MaximumDisplayNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in the display name of a guild member."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 84,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 32
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                50
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 80,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 51,
      "name": "HttpUrlRegex",
      "comment": {
        "description": "Regex that matches any URL starting with \n`http`\n or \n`https`",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^https?:///`"
          },
          {
            "name": "remark",
            "text": "for WebSocket URLs see \nWebsocketGenericUrlRegex"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 363,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 52,
      "name": "InteractionLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord interactions.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 89,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 53,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 54,
              "name": "MaximumButtonsPerActionRow",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum buttons allowed in a single action row."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 93,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 5
              }
            },
            {
              "id": 57,
              "name": "MaximumOptionsInSelectMenus",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum options allowed in a single select menu."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 105,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 55,
              "name": "MaximumSelectMenusPerActionRow",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum select menus allowed in a single action row."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 97,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 1
              }
            },
            {
              "id": 56,
              "name": "MaximumTextInputsPerActionRow",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum text inputs allowed in a single action row."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 101,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 1
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                54,
                57,
                55,
                56
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 89,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 58,
      "name": "MessageLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord messages.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 186,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 59,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 61,
              "name": "MaximumActionRows",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum action rows allowed in a single message."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 194,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 5
              }
            },
            {
              "id": 60,
              "name": "MaximumEmbeds",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum embeds allowed in a single message."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 190,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 10
              }
            },
            {
              "id": 62,
              "name": "MaximumLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a single message for a user."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 198,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 2000
              }
            },
            {
              "id": 63,
              "name": "MaximumNitroLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a single message for a nitro user."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 202,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 4000
              }
            },
            {
              "id": 66,
              "name": "MaximumNitroUploadSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum upload size for a nitro user, in any guild or in DMs.\nSize is in bytes, and correspond to 10MB."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 216,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100000000
              }
            },
            {
              "id": 64,
              "name": "MaximumReactions",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum numbers of reactions allowed for a message."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 206,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 20
              }
            },
            {
              "id": 65,
              "name": "MaximumUploadSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum upload size for a free user in a guild of tier 1 or below, or in DMs.\nSize is in bytes, and correspond to 8MB."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 211,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 8000000
              }
            },
            {
              "id": 67,
              "name": "MaximumUploadSizeInGuild",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum upload size for a free user for all different boost levels available in a guild.\nSizes are in bytes, and correspond to 8MB, 8MB, 50MB, and 100MB."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 221,
                  "character": 13
                }
              ],
              "type": {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "tuple",
                  "elements": [
                    {
                      "type": "literal",
                      "value": 8000000
                    },
                    {
                      "type": "literal",
                      "value": 8000000
                    },
                    {
                      "type": "literal",
                      "value": 50000000
                    },
                    {
                      "type": "literal",
                      "value": 100000000
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                61,
                60,
                62,
                63,
                66,
                64,
                65,
                67
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 186,
              "character": 29
            }
          ]
        }
      }
    },
    {
      "id": 68,
      "name": "MessageLinkRegex",
      "comment": {
        "description": "Regex that can capture the Guild, Channel, and Message ID based on a shareable Discord message link.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^(?:https://)?(?:ptb\\.|canary\\.)?discord(?:app)?\\.com/channels/(?<guildId>(?:\\d{17,20}|@me))/(?<channelId>\\d{17,20})/(?<messageId>\\d{17,20})$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the ID of the guild the message was sent in. It is named \n`guildId`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the ID of the channel in that guild the message was sent in. It is named \n`channelId`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the ID of the message itself. It is named \n`messageId`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 371,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 69,
      "name": "ModalLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord Modals.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 270,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 70,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 73,
              "name": "MaximumComponents",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum components allowed in a modal."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 282,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 5
              }
            },
            {
              "id": 71,
              "name": "MaximumCustomIdCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a modal custom ID."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 274,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 72,
              "name": "MaximumTitleCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a modal title."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 278,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 45
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                73,
                71,
                72
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 270,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 74,
      "name": "ModerationLimits",
      "comment": {
        "description": "Namespace containing limits related to built-in moderation features.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 226,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 75,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 76,
              "name": "MaximumTimeoutDuration",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum duration of a guild timeout, in seconds (corresponds to 28 days)."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 230,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 2419200
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                76
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 226,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 77,
      "name": "ParsedCustomEmoji",
      "comment": {
        "description": "Regex that matches any animated or non-animated custom Discord emoji *without the wrapping \n`<...>`\n symbols.\nThis means that a string that matches this regex can directly be send inside a Discord message.\nOther than this difference it is similar to \nFormattedCustomEmoji\n.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/a?:\\w{2,32}:\\d{17,20}/`"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 378,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 78,
      "name": "ParsedCustomEmojiWithGroups",
      "comment": {
        "description": "Regex that matches any animated or non-animated custom Discord emoji *without the wrapping \n`<...>`\n symbols.\nThis means that a string that matches this regex can directly be send inside a Discord message.\nOther than this difference it is similar to \nFormattedCustomEmojiWithGroups\n.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?<animated>a?):(?<name>[^:]+):(?<id>\\d{17,20})/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 can be used to determine whether the emoji is animated or not. It is named \n`animated`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the name of the emoji as it is typed in a message. It is named \n`name`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the ID of the emoji. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 388,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 79,
      "name": "RoleLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord roles.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 235,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 80,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 81,
              "name": "MaximumNameLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a role name."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 239,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                81
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 235,
              "character": 26
            }
          ]
        }
      }
    },
    {
      "id": 82,
      "name": "RoleMentionRegex",
      "comment": {
        "description": "Regex that can capture the ID in Discord Role mentions",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^<@&(?<id>\\d{17,20})>$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the ID of the role. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 394,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 83,
      "name": "SelectMenuLimits",
      "comment": {
        "description": "Namespace containing limits related to Select Menus.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 157,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 84,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 85,
              "name": "MaximumCustomIdCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a select menu custom ID."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 161,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 90,
              "name": "MaximumLengthOfNameOfOption",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a select menu option's name."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 181,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 89,
              "name": "MaximumMaxValuesSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum \"maximum\" values allowed in a select menu."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 177,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 88,
              "name": "MaximumMinValuesSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum \"minimum\" values allowed in a select menu."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 173,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 86,
              "name": "MaximumOptionsLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum amount of options allowed in a select menu."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 165,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 25
              }
            },
            {
              "id": 87,
              "name": "MaximumPlaceholderCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a select menu placeholder."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 169,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 150
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                85,
                90,
                89,
                88,
                86,
                87
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 157,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 91,
      "name": "SnowflakeRegex",
      "comment": {
        "description": "Regex that can capture any Discord Snowflake ID",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^(?<id>\\d{17,20})$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the Snowflake. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 400,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 92,
      "name": "TextInputLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord Modal Text Input component.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 287,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 93,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 94,
              "name": "MaximumCustomIdCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a text input custom ID."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 291,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 95,
              "name": "MaximumLabelCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a text input label."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 295,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 45
              }
            },
            {
              "id": 96,
              "name": "MaximumPlaceholderCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a text input placeholder."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 299,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 100
              }
            },
            {
              "id": 97,
              "name": "MaximumValueCharacters",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a text input value."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 303,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 4000
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                94,
                95,
                96,
                97
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 287,
              "character": 31
            }
          ]
        }
      }
    },
    {
      "id": 98,
      "name": "TokenRegex",
      "comment": {
        "description": "Regex that can capture a Discord Token",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?<mfaToken>mfa\\.[a-z0-9_-]{20,})|(?<basicToken>[a-z0-9_-]{23,28}\\.[a-z0-9_-]{6,7}\\.[a-z0-9_-]{27})/i`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 can be used to retrieve a token for a User that has Multi-Factor Authentication enabled. It is named \n`mfaToken`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 can be used to retrieve a token for a User that doesn't have Multi-Factor Authentication enabled, or a Bot application. It is named \n`basicToken`\n."
          },
          {
            "name": "remark",
            "text": "For a valid token, either Capture group 1 or Capture group 2 will always be undefined, whereas the other group will then be defined and\ncontain the matched token.\nYou can use the name of the capture group to determine if the validated token was configured for a user with Multi-Factor Authentication, for a user without Multi-Factor Authentication, or for a bot application.\nIf both capture groups are undefined, then the token is invalid."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 411,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 99,
      "name": "TwemojiRegex",
      "comment": {
        "description": "Regex that can capture a Twemoji (Twitter Emoji)",
        "blockTags": [
          {
            "name": "raw",
            "text": "See official source code"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 438,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 100,
      "name": "UserLimits",
      "comment": {
        "description": "Namespace containing limits related to Discord users and Direct Messages.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 244,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 101,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 103,
              "name": "MaximumBiographyLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum characters allowed in a user's biography (the \"About Me\" section)."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 252,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 190
              }
            },
            {
              "id": 102,
              "name": "MaximumUsersPerDMGroup",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Maximum numbers of users in a DM group."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/discord-utilities/dist/index.d.ts",
                  "line": 248,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": 10
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                103,
                102
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/discord-utilities/dist/index.d.ts",
              "line": 244,
              "character": 26
            }
          ]
        }
      }
    },
    {
      "id": 104,
      "name": "UserOrMemberMentionRegex",
      "comment": {
        "description": "Regex that can capture the ID of a user in Discord user mentions",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^<@!?(?<id>\\d{17,20})>$/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the ID of the user. It is named \n`id`\n."
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 417,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 105,
      "name": "WebSocketUrlRegex",
      "comment": {
        "description": "Regex that matches any WebSocket URL starting with \n`ws`\n or \n`wss`",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/^wss?:///`"
          },
          {
            "name": "remark",
            "text": "for regular HTTP URLs see \nHttpUrlRegex"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 423,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    },
    {
      "id": 106,
      "name": "WebhookRegex",
      "comment": {
        "description": "Regex that captures the Webhook ID and token from a Discord Webhook URL.",
        "blockTags": [
          {
            "name": "raw",
            "text": "`/(?<url>^https://(?:(?:canary|ptb).)?discord(?:app)?.com/api(?:/v\\d+)?/webhooks/(?<id>\\d+)/(?<token>[\\w-]+)/?$)/`"
          },
          {
            "name": "remark",
            "text": "Capture group 1 is the full URL of the Discord Webhook. It is named \n`url`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 2 is the ID of the Discord Webhook. It is named \n`id`\n."
          },
          {
            "name": "remark",
            "text": "Capture group 3 is the token of the Discord Webhook. It is named \n`token`\n."
          },
          {
            "name": "remark",
            "text": "for regular HTTP URLs see \nHttpUrlRegex"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 432,
        "file": "index.d.ts",
        "path": "packages/discord-utilities/dist"
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "RegExp",
        "packageName": "typescript",
        "typeArguments": []
      }
    }
  ],
  "enums": [],
  "functions": [
    {
      "id": 1242,
      "name": "actionIsButtonOrMenu",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 12,
        "file": "utils.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "signatures": [
        {
          "id": 1243,
          "name": "actionIsButtonOrMenu",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1244,
              "name": "action",
              "type": {
                "kind": "reference",
                "id": 959,
                "name": "PaginatedMessageAction",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "action",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": 960,
                  "name": "PaginatedMessageActionButton",
                  "packageName": null,
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": 977,
                  "name": "PaginatedMessageActionMenu",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 1336,
      "name": "canJoinVoiceChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 101,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1337,
          "name": "canJoinVoiceChannel",
          "comment": {
            "description": "Determines whether the client can join the given voice based channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not the client can join the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1338,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "VoiceBasedChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1330,
      "name": "canReact",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 72,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1331,
          "name": "canReact",
          "comment": {
            "description": "Determines whether or not we can send react to messages in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can react to messages in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1332,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1318,
      "name": "canReadMessages",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 13,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1319,
          "name": "canReadMessages",
          "comment": {
            "description": "Determines whether or not we can read messages in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can read messages in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1320,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1333,
      "name": "canRemoveAllReactions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 87,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1334,
          "name": "canRemoveAllReactions",
          "comment": {
            "description": "Determines whether or not we can remove reactions from messages in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can remove reactions from messages in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1335,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1327,
      "name": "canSendAttachments",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 57,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1328,
          "name": "canSendAttachments",
          "comment": {
            "description": "Determines whether or not we can send attachments in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can send attachments in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1329,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1324,
      "name": "canSendEmbeds",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 42,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1325,
          "name": "canSendEmbeds",
          "comment": {
            "description": "Determines whether or not we can send embeds in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can send embeds in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1326,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1321,
      "name": "canSendMessages",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 27,
        "file": "utilities.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1322,
          "name": "canSendMessages",
          "comment": {
            "description": "Determines whether or not we can send messages in a given channel.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not we can send messages in the specified channel."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1323,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1251,
      "name": "createPartitionedMessageRow",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 31,
        "file": "utils.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "signatures": [
        {
          "id": 1252,
          "name": "createPartitionedMessageRow",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1253,
              "name": "components",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "MessageButton",
                      "packageName": "discord.js",
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "MessageSelectMenu",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "MessageActionRow",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1312,
      "name": "isAnyInteraction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 205,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1313,
          "name": "isAnyInteraction",
          "comment": {
            "description": "Checks whether the input \n`messageOrInteraction`\n is one of \nMessage\n or one of \nBaseCommandInteraction\n, \nCommandInteraction\n, \nContextMenuInteraction\n, or \nSelectMenuInteraction",
            "blockTags": [
              {
                "name": "returns",
                "text": "`true`\n if the \n`messageOrInteraction`\n is **NOT** an instanceof \nMessage\n, \n`false`\n if it is."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1314,
              "name": "messageOrInteraction",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 1349,
                    "name": "AnyInteraction",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "APIMessage",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "BaseCommandInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "messageOrInteraction",
            "type": {
              "kind": "reference",
              "id": 1349,
              "name": "AnyInteraction",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1258,
      "name": "isCategoryChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 32,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1259,
          "name": "isCategoryChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nCategoryChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1260,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "CategoryChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1261,
      "name": "isDMChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 40,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1262,
          "name": "isDMChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nDMChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1263,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "DMChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "PartialDMChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 1264,
      "name": "isGroupChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 48,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1265,
          "name": "isGroupChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nPartialGroupDMChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1266,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "PartialDMChannel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Channel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PartialGroupDMChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1267,
      "name": "isGuildBasedChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 57,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1268,
          "name": "isGuildBasedChannel",
          "comment": {
            "description": "Checks if a channel comes from a guild.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Whether or not the channel is guild-based."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1269,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": 1345,
              "name": "GuildTextBasedChannelTypes",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1270,
      "name": "isGuildBasedChannelByGuildKey",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 67,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1271,
          "name": "isGuildBasedChannelByGuildKey",
          "comment": {
            "description": "Checks whether or not a channel comes from a guild.",
            "blockTags": [
              {
                "name": "remark",
                "text": "As opposed to \nisGuildBasedChannel\n this checks if there is \n`guild`\n property on the channel."
              },
              {
                "name": "returns",
                "text": "Whether or not the channel is guild-based."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1272,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": 1345,
              "name": "GuildTextBasedChannelTypes",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1315,
      "name": "isGuildMember",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 216,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1316,
          "name": "isGuildMember",
          "comment": {
            "description": "Checks whether a given member is an instance of \nGuildMember\n, and not \nAPIInteractionGuildMember\n, \nAPIGuildMember\n, or \nNullish",
            "blockTags": [
              {
                "name": "returns",
                "text": "`true`\n if the member is an instance of \n`GuildMember`\n, false otherwise."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1317,
              "name": "member",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "GuildMember",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "APIGuildMember",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "APIInteractionGuildMember",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "APIInteractionDataResolvedGuildMember",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "member",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "GuildMember",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1248,
      "name": "isMessageButtonComponent",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 27,
        "file": "utils.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "signatures": [
        {
          "id": 1249,
          "name": "isMessageButtonComponent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1250,
              "name": "component",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageButton",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageSelectMenu",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "component",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "MessageButton",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1245,
      "name": "isMessageButtonInteraction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "utils.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "signatures": [
        {
          "id": 1246,
          "name": "isMessageButtonInteraction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1247,
              "name": "interaction",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "InteractionButtonOptions",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageSelectMenuOptions",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "interaction",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "InteractionButtonOptions",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1309,
      "name": "isMessageInstance",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 196,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1310,
          "name": "isMessageInstance",
          "comment": {
            "description": "Checks whether a given message is an instance of \nMessage\n, and not \nAPIMessage",
            "blockTags": [
              {
                "name": "returns",
                "text": "`true`\n if the message is an instance of \n`Message`\n, false otherwise."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1311,
              "name": "message",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "APIMessage",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "message",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Message",
              "packageName": "discord.js",
              "typeArguments": [
                {
                  "kind": "intrinsic",
                  "type": "boolean"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 1273,
      "name": "isNewsChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 75,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1274,
          "name": "isNewsChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nNewsChannel\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1275,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "NewsChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1291,
      "name": "isNewsThreadChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 124,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1292,
          "name": "isNewsThreadChannel",
          "comment": {
            "description": "Checks whether a given channel is a News \nThreadChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1293,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "ThreadChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1306,
      "name": "isNsfwChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 168,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1307,
          "name": "isNsfwChannel",
          "comment": {
            "description": "Checks whether a given channel allows NSFW content or not",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1308,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 1297,
      "name": "isPrivateThreadChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 140,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1298,
          "name": "isPrivateThreadChannel",
          "comment": {
            "description": "Checks whether a given channel is a Private \nThreadChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1299,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "ThreadChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1294,
      "name": "isPublicThreadChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 132,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1295,
          "name": "isPublicThreadChannel",
          "comment": {
            "description": "Checks whether a given channel is a Public \nThreadChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1296,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "ThreadChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1285,
      "name": "isStageChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 108,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1286,
          "name": "isStageChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nStageChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1287,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "StageChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1276,
      "name": "isStoreChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 84,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1277,
          "name": "isStoreChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nStoreChannel",
            "blockTags": [
              {
                "name": "deprecated",
                "text": "See [Self-serve Game Selling Deprecation](https://support-dev.discord.com/hc/en-us/articles/4414590563479) for more information."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1278,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "StoreChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1300,
      "name": "isTextBasedChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 148,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1301,
          "name": "isTextBasedChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nTextBasedChannelTypes\n. This means it has a \n`send`\n method.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1302,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "DMChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "PartialDMChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "NewsChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "TextChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "ThreadChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": null,
                  "name": "VoiceChannel",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 1279,
      "name": "isTextChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 92,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1280,
          "name": "isTextChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nTextChannel\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1281,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "TextChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1288,
      "name": "isThreadChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 116,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1289,
          "name": "isThreadChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nThreadChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1290,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "ThreadChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1303,
      "name": "isVoiceBasedChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 158,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1304,
          "name": "isVoiceBasedChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nBaseGuildVoiceChannel\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1305,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Channel",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "BaseGuildVoiceChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1282,
      "name": "isVoiceChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 100,
        "file": "type-guards.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 1283,
          "name": "isVoiceChannel",
          "comment": {
            "description": "Checks whether a given channel is a \nVoiceChannel",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 1284,
              "name": "channel",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1339,
                    "name": "ChannelTypes",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "channel",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "VoiceChannel",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 1254,
      "name": "safelyReplyToInteraction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 57,
        "file": "utils.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "signatures": [
        {
          "id": 1255,
          "name": "safelyReplyToInteraction",
          "comment": {
            "description": "Safely replies to a message or interaction. This is primarily to save duplicated code in the main \n`PaginatedMessage`\n class",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 1256,
              "name": "T",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "reply"
                  },
                  {
                    "kind": "literal",
                    "value": "edit"
                  }
                ]
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 1257,
              "name": "parameters",
              "type": {
                "kind": "reference",
                "id": 1027,
                "name": "SafeReplyToInteractionParameters",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1256,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "void"
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 348,
      "name": "IMessagePrompterConfirmStrategyOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "strategyOptions.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 350,
          "name": "cancelEmoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 349,
          "name": "confirmEmoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 10,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 353,
          "name": "editMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 352,
          "name": "explicitReturn",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 351,
          "name": "timeout",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ]
    },
    {
      "id": 154,
      "name": "IMessagePrompterExplicitConfirmReturn",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 13,
        "file": "ExplicitReturnTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 159,
          "name": "appliedMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 155,
          "name": "confirmed",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 156,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "GuildEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ReactionEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 160,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 10,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 157,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 158,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 206,
            "name": "MessagePrompterBaseStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 168,
      "name": "IMessagePrompterExplicitMessageReturn",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "ExplicitReturnTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 173,
          "name": "appliedMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 170,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "GuildEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ReactionEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 174,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 10,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 171,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 169,
          "name": "response",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 172,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 206,
            "name": "MessagePrompterBaseStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 161,
      "name": "IMessagePrompterExplicitNumberReturn",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 17,
        "file": "ExplicitReturnTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 166,
          "name": "appliedMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 163,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "GuildEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ReactionEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 167,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 10,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 162,
          "name": "number",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 18,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 164,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 165,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 206,
            "name": "MessagePrompterBaseStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 148,
      "name": "IMessagePrompterExplicitReturnBase",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "ExplicitReturnTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 152,
          "name": "appliedMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 149,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "GuildEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ReactionEmoji",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 153,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 10,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 147,
            "name": "MessagePrompterMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 150,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 151,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "ExplicitReturnTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 206,
            "name": "MessagePrompterBaseStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 354,
      "name": "IMessagePrompterNumberStrategyOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 14,
        "file": "strategyOptions.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 360,
          "name": "editMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 356,
          "name": "end",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 16,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 359,
          "name": "explicitReturn",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 357,
          "name": "numberEmojis",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              },
              {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "EmojiIdentifierResolvable",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              }
            ]
          }
        },
        {
          "id": 355,
          "name": "start",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 358,
          "name": "timeout",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ]
    },
    {
      "id": 361,
      "name": "IMessagePrompterReactionStrategyOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 20,
        "file": "strategyOptions.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 365,
          "name": "editMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 364,
          "name": "explicitReturn",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 362,
          "name": "reactions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 21,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              },
              {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "EmojiIdentifierResolvable",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              }
            ]
          }
        },
        {
          "id": 363,
          "name": "timeout",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ]
    },
    {
      "id": 344,
      "name": "IMessagePrompterStrategyOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "strategyOptions.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 347,
          "name": "editMessage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 346,
          "name": "explicitReturn",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 345,
          "name": "timeout",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "strategyOptions.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ]
    },
    {
      "id": 960,
      "name": "PaginatedMessageActionButton",
      "comment": {
        "description": "To utilize buttons you can pass an object with the structure of \nPaginatedMessageActionButton\n to \nPaginatedMessage\n actions.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nconst StopAction: PaginatedMessageActionButton {\n  customId: 'CustomStopAction',\n  emoji: '⏹️',\n  run: ({ collector }) => {\n    collector.stop();\n  }\n}\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 48,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 961,
          "name": "customId",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 49,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 968,
          "name": "disabled",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5315,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 967,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5316,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 969,
          "name": "label",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5317,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 963,
          "name": "style",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ExcludeEnum",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageButtonStyles",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              },
              {
                "kind": "literal",
                "value": "LINK"
              }
            ]
          }
        },
        {
          "id": 962,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 50,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ExcludeEnum",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageComponentTypes",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              },
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "ACTION_ROW"
                  },
                  {
                    "kind": "literal",
                    "value": "SELECT_MENU"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 988,
      "name": "PaginatedMessageActionContext",
      "comment": {
        "description": "The context to be used in \nPaginatedMessageActionButton\n.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 92,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 991,
          "name": "author",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 95,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "User",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 992,
          "name": "channel",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 96,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "DMChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "PartialDMChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "NewsChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "TextChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ThreadChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "VoiceChannel",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 994,
          "name": "collector",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 98,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "InteractionCollector",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageComponentInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 990,
          "name": "handler",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 94,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 763,
            "name": "PaginatedMessage",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 989,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 93,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "SelectMenuInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ButtonInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 993,
          "name": "response",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 97,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              },
              {
                "kind": "reference",
                "id": null,
                "name": "SelectMenuInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ButtonInteraction",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "CacheType",
                    "packageName": "discord.js",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 970,
      "name": "PaginatedMessageActionLink",
      "comment": {
        "description": "To utilize links you can pass an object with the structure of \nPaginatedMessageActionLink\n to \nPaginatedMessage\n actions.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\n You can also give the object directly.\n\nconst LinkSapphireJs: PaginatedMessageActionLink {\n  url: 'https://sapphirejs.dev',\n  label: 'Sapphire Website',\n  emoji: '🔗'\n}\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 68,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 974,
          "name": "disabled",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5315,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 975,
          "name": "emoji",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5316,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "EmojiIdentifierResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 976,
          "name": "label",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5317,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 972,
          "name": "style",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5321,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "LINK"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "MessageButtonStyles.LINK",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 971,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 69,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ExcludeEnum",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageComponentTypes",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              },
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "ACTION_ROW"
                  },
                  {
                    "kind": "literal",
                    "value": "SELECT_MENU"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 973,
          "name": "url",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5322,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 977,
      "name": "PaginatedMessageActionMenu",
      "comment": {
        "description": "To utilize Select Menus you can pass an object with the structure of \nPaginatedMessageActionMenu\n to \nPaginatedMessage\n actions.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nconst StopAction: PaginatedMessageActionMenu {\n  customId: 'CustomSelectMenu',\n  type: Constants.MessageComponentTypes.SELECT_MENU,\n  run: ({ handler, interaction }) => interaction.isSelectMenu() && (handler.index = parseInt(interaction.values[0], 10))\n}\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 83,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 978,
          "name": "customId",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 84,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 984,
          "name": "disabled",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5495,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 985,
          "name": "maxValues",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5496,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 986,
          "name": "minValues",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5497,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 983,
          "name": "options",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5498,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "MessageSelectOptionData",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        },
        {
          "id": 987,
          "name": "placeholder",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5499,
            "file": "index.d.ts",
            "path": "node_modules/discord.js/typings"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 979,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 85,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ExcludeEnum",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageComponentTypes",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              },
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "ACTION_ROW"
                  },
                  {
                    "kind": "literal",
                    "value": "BUTTON"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1021,
      "name": "PaginatedMessageInternationalizationContext",
      "comment": {
        "description": "This is a duplicate of the same interface in \n`@sapphire/plugin-i18next`\n\nDuplicated here for the type of the parameters in the functions\n\nContext for \nInternationalizationHandler.fetchLanguage\n functions.\nThis context enables implementation of per-guild, per-channel, and per-user localization.",
        "blockTags": [],
        "modifierTags": [
          "@internal"
        ]
      },
      "source": {
        "line": 180,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 1023,
          "name": "channel",
          "comment": {
            "description": "The \nDiscordChannel\n object to fetch the preferred language for.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 184,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "DMChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "PartialDMChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "NewsChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StageChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StoreChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "TextChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ThreadChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "VoiceChannel",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1022,
          "name": "guild",
          "comment": {
            "description": "The \nGuild\n object to fetch the preferred language for, or \n`null`\n if the language is to be fetched in a DM.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 182,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Guild",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1025,
          "name": "interactionGuildLocale",
          "comment": {
            "description": "The \nInteraction.guildLocale\n provided by the Discord API",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 188,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 1026,
          "name": "interactionLocale",
          "comment": {
            "description": "The \nInteraction.locale\n provided by the Discord API",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 190,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1024,
          "name": "user",
          "comment": {
            "description": "The user to fetch the preferred language for.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 186,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "User",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 995,
      "name": "PaginatedMessageOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 101,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 997,
          "name": "actions",
          "comment": {
            "description": "Custom actions to provide when sending the paginated message",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 109,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 959,
              "name": "PaginatedMessageAction",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 1000,
          "name": "embedFooterSeparator",
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "seealso",
                "text": "embedFooterSeparator"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 121,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 999,
          "name": "pageIndexPrefix",
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "seealso",
                "text": "pageIndexPrefix"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 996,
          "name": "pages",
          "comment": {
            "description": "The pages to display in this \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 105,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1002,
              "name": "PaginatedMessagePage",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 1001,
          "name": "paginatedMessageData",
          "comment": {
            "description": "Additional options that are applied to each message when sending it to Discord.\nBe careful with using this, misusing it can cause issues, such as sending empty messages.",
            "blockTags": [
              {
                "name": "remark",
                "text": "**This is for advanced usages only!**"
              },
              {
                "name": "default",
                "text": "null"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 129,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1020,
                    "name": "PaginatedMessageMessageOptionsUnion",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "components"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 998,
          "name": "template",
          "comment": {
            "description": "The \nMessageEmbed\n or \nMessageOptions\n options to apply to the entire \nPaginatedMessage",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 113,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageOptions",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "MessageEmbed",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1027,
      "name": "SafeReplyToInteractionParameters",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 193,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "properties": [
        {
          "id": 1031,
          "name": "componentUpdateContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 197,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "InteractionUpdateOptions",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 1029,
          "name": "interactionEditReplyContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 195,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "WebhookEditMessageOptions",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 1030,
          "name": "interactionReplyContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 196,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "InteractionReplyOptions",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 1032,
          "name": "messageMethod",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 198,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1034,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 1033,
          "name": "messageMethodContent",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 199,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 1034,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "literal",
              "value": "reply"
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "ReplyMessageOptions",
              "packageName": "discord.js",
              "typeArguments": []
            },
            "falseType": {
              "kind": "reference",
              "id": null,
              "name": "MessageEditOptions",
              "packageName": "discord.js",
              "typeArguments": []
            }
          }
        },
        {
          "id": 1028,
          "name": "messageOrInteraction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 194,
            "file": "PaginatedMessageTypes.ts",
            "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 1349,
                "name": "AnyInteraction",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIMessage",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 185,
      "name": "StrategyFilters",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 36,
        "file": "MessagePrompter.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 186,
          "name": "confirm",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "tuple",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageReaction",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "User",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 187,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "tuple",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 188,
          "name": "number",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "tuple",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageReaction",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "User",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 189,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 40,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "tuple",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageReaction",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "User",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 180,
      "name": "StrategyOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 29,
        "file": "MessagePrompter.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 181,
          "name": "confirm",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 30,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 348,
            "name": "IMessagePrompterConfirmStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 182,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 31,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 344,
            "name": "IMessagePrompterStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 183,
          "name": "number",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 354,
            "name": "IMessagePrompterNumberStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 184,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 361,
            "name": "IMessagePrompterReactionStrategyOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 175,
      "name": "StrategyReturns",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 22,
        "file": "MessagePrompter.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "properties": [
        {
          "id": 176,
          "name": "confirm",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 23,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              },
              {
                "kind": "reference",
                "id": 154,
                "name": "IMessagePrompterExplicitConfirmReturn",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 177,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 24,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "Message",
                "packageName": "discord.js",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 168,
                "name": "IMessagePrompterExplicitMessageReturn",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 178,
          "name": "number",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 25,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "number"
              },
              {
                "kind": "reference",
                "id": 161,
                "name": "IMessagePrompterExplicitNumberReturn",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 179,
          "name": "reaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "MessagePrompter.ts",
            "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "EmojiResolvable",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 148,
                "name": "IMessagePrompterExplicitReturnBase",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    }
  ],
  "namespaces": [],
  "typeAliases": [
    {
      "id": 1349,
      "name": "AnyInteraction",
      "comment": {
        "description": "A union of \nCommandInteraction\n, \nContextMenuInteraction\n, \nSelectMenuInteraction\n, \nButtonInteraction\n, and \nModalSubmitInteraction\n;",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 85,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 1348,
            "name": "NonModalInteraction",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ModalSubmitInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1346,
      "name": "ChannelTypeString",
      "comment": {
        "description": "The types of a channel, with the addition of \n`'UNKNOWN'`",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 70,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "reference",
              "id": 1339,
              "name": "ChannelTypes",
              "packageName": null,
              "typeArguments": []
            },
            "indexType": {
              "kind": "literal",
              "value": "type"
            }
          },
          {
            "kind": "literal",
            "value": "UNKNOWN"
          }
        ]
      }
    },
    {
      "id": 1339,
      "name": "ChannelTypes",
      "comment": {
        "description": "A union of all the various types of channels that Discord.js has",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 24,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "CategoryChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "DMChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "PartialDMChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "NewsChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "StageChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "StoreChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "TextChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ThreadChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "VoiceChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "GuildChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Channel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1347,
      "name": "ChatInputOrContextMenuInteraction",
      "comment": {
        "description": "A union of \nCommandInteraction\n and \nContextMenuInteraction\n. Similar to \nBaseCommandInteraction\n class but as a type union.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 75,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "CommandInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ContextMenuInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1343,
      "name": "GuildBasedChannelTypes",
      "comment": {
        "description": "A union of all the channel types that belong to a guild, including \nThreadChannel",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 55,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 1342,
            "name": "NonThreadGuildBasedChannelTypes",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ThreadChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1345,
      "name": "GuildTextBasedChannelTypes",
      "comment": {
        "description": "A union of guild based message channels, including \nThreadChannel",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 65,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 1344,
            "name": "NonThreadGuildTextBasedChannelTypes",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ThreadChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 107,
      "name": "MessageBuilderFileResolvable",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "MessageBuilder.ts",
        "path": "packages/discord.js-utilities/src/lib/builders"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "indexedAccess",
        "objectType": {
          "kind": "reference",
          "id": null,
          "name": "NonNullable",
          "packageName": "typescript",
          "typeArguments": [
            {
              "kind": "indexedAccess",
              "objectType": {
                "kind": "reference",
                "id": null,
                "name": "MessageOptions",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "indexType": {
                "kind": "literal",
                "value": "files"
              }
            }
          ]
        },
        "indexType": {
          "kind": "intrinsic",
          "type": "number"
        }
      }
    },
    {
      "id": 108,
      "name": "MessageBuilderResolvable",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "MessageBuilder.ts",
        "path": "packages/discord.js-utilities/src/lib/builders"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageOptions",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "embed"
                  },
                  {
                    "kind": "literal",
                    "value": "disableMentions"
                  },
                  {
                    "kind": "literal",
                    "value": "reply"
                  }
                ]
              }
            ]
          },
          {
            "kind": "reflection",
            "reflection": {
              "id": 109,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 110,
                  "name": "embeds",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "packages/discord.js-utilities/src/lib/builders/MessageBuilder.ts",
                      "line": 4,
                      "character": 103,
                      "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/builders/MessageBuilder.ts#L4"
                    }
                  ],
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "embeds"
                    },
                    "objectType": {
                      "type": "reference",
                      "name": "MessageOptions",
                      "qualifiedName": "MessageOptions",
                      "package": "discord.js"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    110
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/builders/MessageBuilder.ts",
                  "line": 4,
                  "character": 101,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/builders/MessageBuilder.ts#L4"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 146,
      "name": "MessagePrompterChannelTypes",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "constants.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Exclude",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1339,
            "name": "ChannelTypes",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": 1341,
                "name": "VoiceBasedChannelTypes",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StoreChannel",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CategoryChannel",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        ]
      }
    },
    {
      "id": 147,
      "name": "MessagePrompterMessage",
      "comment": {
        "description": "A type to extend multiple discord types and simplify usage in \nMessagePrompter",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "constants.ts",
        "path": "packages/discord.js-utilities/src/lib/MessagePrompter"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Omit",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "reference",
              "id": null,
              "name": "ArgumentTypes",
              "packageName": null,
              "typeArguments": [
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": null,
                    "name": "PartialTextBasedChannelFields",
                    "packageName": "discord.js",
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "literal",
                    "value": "send"
                  }
                }
              ]
            },
            "indexType": {
              "kind": "literal",
              "value": "0"
            }
          },
          {
            "kind": "literal",
            "value": "flags"
          }
        ]
      }
    },
    {
      "id": 1348,
      "name": "NonModalInteraction",
      "comment": {
        "description": "A union of \nCommandInteraction\n, \nContextMenuInteraction\n, \nSelectMenuInteraction\n, \nButtonInteraction\n, and \nModalSubmitInteraction\n;",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 80,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 1347,
            "name": "ChatInputOrContextMenuInteraction",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "SelectMenuInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "ButtonInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1342,
      "name": "NonThreadGuildBasedChannelTypes",
      "comment": {
        "description": "A union of all the channel types that belong to a guild, not including \nThreadChannel",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 50,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Extract",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1339,
            "name": "ChannelTypes",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "GuildChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1344,
      "name": "NonThreadGuildTextBasedChannelTypes",
      "comment": {
        "description": "A union of guild based message channels, not including \nThreadChannel",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 60,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Extract",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1340,
            "name": "TextBasedChannelTypes",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "GuildChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 959,
      "name": "PaginatedMessageAction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 33,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 960,
            "name": "PaginatedMessageActionButton",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 970,
            "name": "PaginatedMessageActionLink",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 977,
            "name": "PaginatedMessageActionMenu",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1019,
      "name": "PaginatedMessageEmbedResolvable",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 169,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "indexedAccess",
        "objectType": {
          "kind": "reference",
          "id": null,
          "name": "MessageOptions",
          "packageName": "discord.js",
          "typeArguments": []
        },
        "indexType": {
          "kind": "literal",
          "value": "embeds"
        }
      }
    },
    {
      "id": 1020,
      "name": "PaginatedMessageMessageOptionsUnion",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 171,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "MessageOptions",
                "packageName": "discord.js",
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "flags"
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "WebhookEditMessageOptions",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1002,
      "name": "PaginatedMessagePage",
      "comment": {
        "description": "The pages that are used for \npages\n\n\nPages can be either a \nMessage\n,\nor an \nAwaitable\n function that returns a \nMessage\n.\n\nFurthermore, \nMessageOptions\n can be used to\nconstruct the pages without state. This library also provides \nMessageBuilder\n, which can be used as a chainable\nalternative to raw objects, similar to how \nMessageEmbed\n\nworks.\n\nIdeally, however, you should use the utility functions\n\n`addPageBuilder`\n, \n`addPageContent`\n, and \n`addPageEmbed`\n\nas opposed to manually constructing \n`MessagePages`\n. This is because a \nPaginatedMessage\n does a lot of post-processing\non the provided pages and we can only guarantee this will work properly when using the utility methods.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 148,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reflection",
            "reflection": {
              "id": 1003,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts",
                  "line": 149,
                  "character": 4,
                  "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts#L149"
                }
              ],
              "signatures": [
                {
                  "id": 1004,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1005,
                      "name": "index",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1006,
                      "name": "pages",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 1002,
                          "name": "PaginatedMessagePage"
                        }
                      }
                    },
                    {
                      "id": 1007,
                      "name": "handler",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 763,
                        "name": "PaginatedMessage"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1020,
                        "name": "PaginatedMessageMessageOptionsUnion"
                      }
                    ],
                    "name": "Awaitable"
                  }
                }
              ]
            }
          },
          {
            "kind": "reference",
            "id": 1020,
            "name": "PaginatedMessageMessageOptionsUnion",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 1008,
      "name": "PaginatedMessageSelectMenuOptionsFunction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 155,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 1009,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts",
              "line": 155,
              "character": 56,
              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts#L155"
            }
          ],
          "signatures": [
            {
              "id": 1010,
              "name": "__type",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The type of the custom function that can be set for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "selectMenuOptions",
                    "target": 772
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1011,
                  "name": "pageIndex",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1012,
                  "name": "internationalizationContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1021,
                    "name": "PaginatedMessageInternationalizationContext"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "MessageSelectOptionData",
                        "qualifiedName": "MessageSelectOptionData",
                        "package": "discord.js"
                      },
                      {
                        "type": "literal",
                        "value": "value"
                      }
                    ],
                    "name": "Omit",
                    "qualifiedName": "Omit",
                    "package": "typescript"
                  }
                ],
                "name": "Awaitable"
              }
            }
          ]
        }
      }
    },
    {
      "id": 1013,
      "name": "PaginatedMessageWrongUserInteractionReplyFunction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 163,
        "file": "PaginatedMessageTypes.ts",
        "path": "packages/discord.js-utilities/src/lib/PaginatedMessages"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 1014,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts",
              "line": 163,
              "character": 64,
              "url": "https://github.com/sapphiredev/utilities/blob/c03d992/packages/discord.js-utilities/src/lib/PaginatedMessages/PaginatedMessageTypes.ts#L163"
            }
          ],
          "signatures": [
            {
              "id": 1015,
              "name": "__type",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The type of the custom function that can be set for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "wrongUserInteractionReply",
                    "target": 773
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1016,
                  "name": "targetUser",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "User",
                    "qualifiedName": "User",
                    "package": "discord.js"
                  }
                },
                {
                  "id": 1017,
                  "name": "interactionUser",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "User",
                    "qualifiedName": "User",
                    "package": "discord.js"
                  }
                },
                {
                  "id": 1018,
                  "name": "internationalizationContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1021,
                    "name": "PaginatedMessageInternationalizationContext"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": 0
                    },
                    "objectType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "literal",
                            "value": "reply"
                          },
                          "objectType": {
                            "type": "reference",
                            "name": "MessageComponentInteraction",
                            "qualifiedName": "MessageComponentInteraction",
                            "package": "discord.js"
                          }
                        }
                      ],
                      "name": "Parameters",
                      "qualifiedName": "Parameters",
                      "package": "typescript"
                    }
                  }
                ],
                "name": "Awaitable"
              }
            }
          ]
        }
      }
    },
    {
      "id": 1340,
      "name": "TextBasedChannelTypes",
      "comment": {
        "description": "A union of all the channel types that a message can come from",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 40,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "indexedAccess",
        "objectType": {
          "kind": "reference",
          "id": null,
          "name": "Message",
          "packageName": "discord.js",
          "typeArguments": []
        },
        "indexType": {
          "kind": "literal",
          "value": "channel"
        }
      }
    },
    {
      "id": 1341,
      "name": "VoiceBasedChannelTypes",
      "comment": {
        "description": "A union of all the voice-based channel types that Discord.js has",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 45,
        "file": "utility-types.ts",
        "path": "packages/discord.js-utilities/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "VoiceChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "StageChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    }
  ]
}