{
  "typeDocJsonParserVersion": "2.3.2",
  "id": 0,
  "name": "@sapphire/fetch",
  "version": "2.4.1",
  "classes": [
    {
      "id": 44,
      "name": "QueryError",
      "comment": {
        "description": "The QueryError class which is thrown by the \n`fetch`\n method",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "QueryError.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Error",
        "packageName": "typescript",
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 55,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 19,
          "file": "QueryError.ts",
          "path": "packages/fetch/src/lib"
        },
        "parameters": [
          {
            "id": 57,
            "name": "url",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          },
          {
            "id": 58,
            "name": "code",
            "type": {
              "kind": "intrinsic",
              "type": "number"
            }
          },
          {
            "id": 59,
            "name": "response",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Response",
              "packageName": "typescript",
              "typeArguments": []
            }
          },
          {
            "id": 60,
            "name": "body",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        ]
      },
      "properties": [
        {
          "id": 65,
          "name": "#json",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 63,
          "name": "body",
          "comment": {
            "description": "The returned response body as a string",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 71,
          "name": "cause",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "lib.es2022.error.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 62,
          "name": "code",
          "comment": {
            "description": "The HTTP status code.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 69,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1041,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 68,
          "name": "name",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1040,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 64,
          "name": "response",
          "comment": {
            "description": "The original \nResponse\n object",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Response",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 70,
          "name": "stack",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1042,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 61,
          "name": "url",
          "comment": {
            "description": "The requested url.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 49,
          "name": "prepareStackTrace",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 50,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/@types/node/globals.d.ts",
                  "line": 11,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 51,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Optional override for formatting stack traces"
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@see",
                        "content": [
                          {
                            "kind": "text",
                            "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 52,
                      "name": "err",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 53,
                      "name": "stackTraces",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "CallSite",
                          "qualifiedName": "NodeJS.CallSite",
                          "package": "@types/node"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 54,
          "name": "stackTraceLimit",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": [
        {
          "id": 66,
          "name": "toJSON",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 28,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 67,
              "name": "toJSON",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ]
        },
        {
          "id": 45,
          "name": "captureStackTrace",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node"
          },
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 46,
              "name": "captureStackTrace",
              "comment": {
                "description": "Create .stack property on a target object",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 47,
                  "name": "targetObject",
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  }
                },
                {
                  "id": 48,
                  "name": "constructorOpt",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        }
      ]
    }
  ],
  "constants": [],
  "enums": [
    {
      "id": 88,
      "name": "FetchMediaContentTypes",
      "comment": {
        "description": "A list of common [Media Content Types](https://www.iana.org/assignments/media-types/media-types.xhtml) as defined by the [IANA](https://www.iana.org/).\nMedia Content Types are also known as a Multipurpose Internet Mail Extensions or MIME type\nMedia Content Types are defined and standardized in IETF's [RFC 6838](https://datatracker.ietf.org/doc/html/rfc6838).",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 89,
        "file": "types.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 89,
          "name": "AudioAac",
          "comment": {
            "description": "The \n`audio/aac`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / audio / aac](https://www.iana.org/assignments/media-types/audio/aac)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 94,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/aac"
        },
        {
          "id": 90,
          "name": "AudioMp4",
          "comment": {
            "description": "The \n`audio/mp4`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / audio / mp4](https://www.iana.org/assignments/media-types/audio/mp4)\n\n\n - \n[[RFC4337](https://www.iana.org/go/rfc4337)] [[RFC6381](https://www.iana.org/go/rfc6381)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 100,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/mp4"
        },
        {
          "id": 91,
          "name": "AudioMpeg",
          "comment": {
            "description": "The \n`audio/mpeg`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / audio / mpeg](https://www.iana.org/assignments/media-types/audio/mpeg)\n\n\n - \n[[RFC3003](https://www.iana.org/go/rfc3003)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 106,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/mpeg"
        },
        {
          "id": 92,
          "name": "AudioOgg",
          "comment": {
            "description": "The \n`audio/ogg`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / audio / ogg](https://www.iana.org/assignments/media-types/audio/ogg)\n\n\n - \n[[RFC5334](https://www.iana.org/go/rfc5334)] [[RFC7845](https://www.iana.org/go/rfc7845)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 112,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/ogg"
        },
        {
          "id": 93,
          "name": "AudioOpus",
          "comment": {
            "description": "The \n`audio/opus`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / audio / opus](https://www.iana.org/assignments/media-types/audio/opus)\n\n\n - \n[[RFC7587](https://www.iana.org/go/rfc7587)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 118,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/opus"
        },
        {
          "id": 94,
          "name": "AudioVorbis",
          "comment": {
            "description": "The \n`audio/vorbis`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / audio / vorbis](https://www.iana.org/assignments/media-types/audio/vorbis)\n\n\n - \n[[RFC5215](https://www.iana.org/go/rfc5215)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 124,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/vorbis"
        },
        {
          "id": 95,
          "name": "AudioWav",
          "comment": {
            "description": "The \n`audio/wav`\n media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 128,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/wav"
        },
        {
          "id": 96,
          "name": "AudioWebm",
          "comment": {
            "description": "The \n`audio/webm`\n media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 132,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "audio/webm"
        },
        {
          "id": 97,
          "name": "FontOtf",
          "comment": {
            "description": "The \n`font/otf`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / font / otf](https://www.iana.org/assignments/media-types/font/otf)\n\n\n - \n[[RFC8081](https://www.iana.org/go/rfc8081)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 138,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "font/otf"
        },
        {
          "id": 98,
          "name": "FontTtf",
          "comment": {
            "description": "The \n`font/ttf`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / font / ttf](https://www.iana.org/assignments/media-types/font/ttf)\n\n\n - \n[[RFC8081](https://www.iana.org/go/rfc8081)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 144,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "font/ttf"
        },
        {
          "id": 99,
          "name": "FontWoff",
          "comment": {
            "description": "The \n`font/woff`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / font / woff](https://www.iana.org/assignments/media-types/font/woff)\n\n\n - \n[[RFC8081](https://www.iana.org/go/rfc8081)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 150,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "font/woff"
        },
        {
          "id": 100,
          "name": "FontWoff2",
          "comment": {
            "description": "The \n`font/woff2`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / font / woff2](https://www.iana.org/assignments/media-types/font/woff2)\n\n\n - \n[[RFC8081](https://www.iana.org/go/rfc8081)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 156,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "font/woff2"
        },
        {
          "id": 101,
          "name": "FormData",
          "comment": {
            "description": "The \n`multipart/form-data`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / multipart / form-data](https://www.iana.org/assignments/media-types/multipart/form-data)\n\n\n - \n[[RFC7578](https://www.iana.org/go/rfc7578)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 162,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "multipart/form-data"
        },
        {
          "id": 102,
          "name": "FormURLEncoded",
          "comment": {
            "description": "The \n`x-www-form-urlencoded`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / application / x-www-form-urlencoded](https://www.iana.org/assignments/media-types/application/x-www-form-urlencoded)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 167,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "application/x-www-form-urlencoded"
        },
        {
          "id": 103,
          "name": "ImageAPNG",
          "comment": {
            "description": "The \n`image/apng`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / apng](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#apng_animated_portable_network_graphics)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 172,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "image/apng"
        },
        {
          "id": 104,
          "name": "ImageGIF",
          "comment": {
            "description": "The \n`image/gif`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / image / gif](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#gif_graphics_interchange_format)\n\n\n - \n[[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046](https://www.iana.org/go/rfc2046)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 178,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "image/gif"
        },
        {
          "id": 105,
          "name": "ImageJPEG",
          "comment": {
            "description": "The \n`image/jpeg`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / image / jpeg](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#jpeg_joint_photographic_experts_group_image)\n\n\n - \n[[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046](https://www.iana.org/go/rfc2046)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 184,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "image/jpeg"
        },
        {
          "id": 106,
          "name": "ImagePNG",
          "comment": {
            "description": "The \n`image/png`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / png](https://www.iana.org/assignments/media-types/image/png)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 189,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "image/png"
        },
        {
          "id": 107,
          "name": "ImageWEBP",
          "comment": {
            "description": "The \n`image/webp`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / webp](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 194,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "image/webp"
        },
        {
          "id": 108,
          "name": "JSON",
          "comment": {
            "description": "The \n`application/json`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / application / json](https://www.iana.org/assignments/media-types/application/json)\n\n\n - \n[[RFC8259](https://www.iana.org/go/rfc8259)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 200,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "application/json"
        },
        {
          "id": 109,
          "name": "JavaScript",
          "comment": {
            "description": "The \n`application/javascript`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / application / javascript](https://www.iana.org/assignments/media-types/application/javascript)\n\n\n - \n[[RFC4329](https://www.iana.org/go/rfc4329)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 206,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "application/javascript"
        },
        {
          "id": 110,
          "name": "OctetStream",
          "comment": {
            "description": "The \n`application/octet-stream`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / application / octet-stream](https://www.iana.org/assignments/media-types/application/octet-stream)\n\n\n - \n[[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046(https://www.iana.org/go/rfc2046)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 212,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "application/octet-stream"
        },
        {
          "id": 111,
          "name": "TextCSS",
          "comment": {
            "description": "The \n`text/css`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / text / css](https://www.iana.org/assignments/media-types/text/css)\n\n\n - \n[[RFC2318](https://www.iana.org/go/rfc2318)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 218,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "text/css"
        },
        {
          "id": 112,
          "name": "TextHTML",
          "comment": {
            "description": "The \n`text/HTML`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / text / html](https://www.iana.org/assignments/media-types/text/html)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 223,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "text/html"
        },
        {
          "id": 113,
          "name": "TextPlain",
          "comment": {
            "description": "The \n`text/plain`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / text / plain](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#textplain)\n\n\n - \n[[RFC2046](https://www.iana.org/go/rfc2046)] [[RFC3676](https://www.iana.org/go/rfc3676)] [[RFC5147](https://www.iana.org/go/rfc5147)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 229,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "text/plain"
        },
        {
          "id": 114,
          "name": "VideoH264",
          "comment": {
            "description": "The \n`video/h264`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / video / h264](https://www.iana.org/assignments/media-types/video/H264)\n\n\n - \n[[RFC6184](https://www.iana.org/go/rfc6184)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 235,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "video/h264"
        },
        {
          "id": 115,
          "name": "VideoH265",
          "comment": {
            "description": "The \n`video/h265`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / video / h265](https://www.iana.org/assignments/media-types/video/H265)\n\n\n - \n[[RFC7798](https://www.iana.org/go/rfc7798)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 241,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "video/h265"
        },
        {
          "id": 116,
          "name": "VideoMp4",
          "comment": {
            "description": "The \n`video/mp4`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / video / mp4](https://www.iana.org/assignments/media-types/video/mp4)\n\n\n - \n[[RFC4337](https://www.iana.org/go/rfc4337)] [[RFC6381](https://www.iana.org/go/rfc6381)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 247,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "video/mp4"
        },
        {
          "id": 117,
          "name": "VideoOgg",
          "comment": {
            "description": "The \n`video/ogg`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / video / ogg](https://www.iana.org/assignments/media-types/video/ogg)\n\n\n - \n[[RFC5334](https://www.iana.org/go/rfc5334)] [[RFC7845](https://www.iana.org/go/rfc7845)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 253,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "video/ogg"
        },
        {
          "id": 118,
          "name": "VideoWebm",
          "comment": {
            "description": "The \n`video/webm`\n media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 257,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "video/webm"
        },
        {
          "id": 119,
          "name": "XML",
          "comment": {
            "description": "The \n`application/xml`\n media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - \n[Media-Types / application / xml](https://www.iana.org/assignments/media-types/application/xml)\n\n\n - \n[[RFC7303](https://www.iana.org/go/rfc7303)]\n\n"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 263,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "application/xml"
        }
      ]
    },
    {
      "id": 78,
      "name": "FetchMethods",
      "comment": {
        "description": "The list of [HTTP Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 36,
        "file": "types.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 84,
          "name": "Connect",
          "comment": {
            "description": "The \n`CONNECT`\n method establishes a tunnel to the server identified by the target resource",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / CONNECT](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 66,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "CONNECT"
        },
        {
          "id": 83,
          "name": "Delete",
          "comment": {
            "description": "The \n`DELETE`\n method deletes the specified resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / DELETE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 61,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "DELETE"
        },
        {
          "id": 79,
          "name": "Get",
          "comment": {
            "description": "The \n`GET`\n method requests a representation of the specified resource. Requests using \n`GET`\n should only retrieve data.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / GET](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 41,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "GET"
        },
        {
          "id": 80,
          "name": "Head",
          "comment": {
            "description": "The \n`HEAD`\n method asks for a response identical to that of a \n`GET`\n request, but without the response body.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / HEAD](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 46,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "HEAD"
        },
        {
          "id": 85,
          "name": "Options",
          "comment": {
            "description": "The \n`OPTIONS`\n method is used to describe the communication options for the target resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / OPTIONS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 71,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "OPTIONS"
        },
        {
          "id": 87,
          "name": "Patch",
          "comment": {
            "description": "The \n`PATCH`\n method is used to apply partial modifications to a resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / PATCH](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 81,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "PATCH"
        },
        {
          "id": 81,
          "name": "Post",
          "comment": {
            "description": "The \n`POST`\n method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / POST](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "POST"
        },
        {
          "id": 82,
          "name": "Put",
          "comment": {
            "description": "The \n`PUT`\n method replaces all current representations of the target resource with the request payload.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / PUT](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 56,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "PUT"
        },
        {
          "id": 86,
          "name": "Trace",
          "comment": {
            "description": "The \n`TRACE`\n method performs a message loop-back test along the path to the target resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / TRACE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE)"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 76,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "TRACE"
        }
      ]
    },
    {
      "id": 72,
      "name": "FetchResultTypes",
      "comment": {
        "description": "The supported return types for the \n`fetch`\n method",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "types.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 75,
          "name": "Blob",
          "comment": {
            "description": "Returns only the body, as a [\n`Blob`\n](https://developer.mozilla.org/en-US/docs/Web/API/Blob).",
            "blockTags": [
              {
                "name": "remark",
                "text": "For NodeJS environment other \n`FetchResultTypes`\n are recommended, but you can use a Blob if you want to."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "blob"
        },
        {
          "id": 74,
          "name": "Buffer",
          "comment": {
            "description": "Returns only the body, as a [Buffer](https://nodejs.org/api/buffer.html).",
            "blockTags": [
              {
                "name": "remark",
                "text": "Does not work in a Browser environment. For browsers use \nBlob\n instead.\nIf you use this type in a Browsers environment a \nReferenceError `ReferenceError: Buffer is not defined`\n will be thrown!"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "buffer"
        },
        {
          "id": 73,
          "name": "JSON",
          "comment": {
            "description": "Returns only the body, as JSON. Similar to [\n`Body.json()`\n](https://developer.mozilla.org/en-US/docs/Web/API/Body/json).\n\nYou should provide your own type cast (either through the generic return type, or with \n`as <type>`\n) to the response to define\nthe JSON structure, otherwise the result will be \n`unknown`\n.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "json"
        },
        {
          "id": 77,
          "name": "Result",
          "comment": {
            "description": "Returns the entire response and doesn't parse the \n`body`\n in any way.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 30,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "result"
        },
        {
          "id": 76,
          "name": "Text",
          "comment": {
            "description": "Returns only the body, as plain text. Similar to [\n`Body.text()`\n](https://developer.mozilla.org/en-US/docs/Web/API/Body/text).",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "value": "text"
        }
      ]
    }
  ],
  "functions": [
    {
      "id": 1,
      "name": "fetch",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "fetch.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 2,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The return type is determined by the provided \n`type`\n.\n- When using \n`FetchResultTypes.JSON`\n then the return type is \n`unknown`\n by default. The type should be specified by filling in the generic type of the function, or casting the result.\n- When using \n`FetchResultTypes.Buffer`\n the return type will be [\n`Buffer`\n](https://nodejs.org/api/buffer.html).\n- When using \n`FetchResultTypes.Blob`\n the return type will be a [\n`Blob`\n](https://developer.mozilla.org/en-US/docs/Web/API/Blob).\n- When using \n`FetchResultTypes.Text`\n the return type will be a \n`string`\n\n- When using \n`FetchResultTypes.Result`\n the return type will be a [\n`Response`\n](https://developer.mozilla.org/en-US/docs/Web/API/Response) (\nResponse\n in typescript)"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 3,
              "name": "R",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 4,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 5,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 73,
                "name": "JSON",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 3,
                "name": "R",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 6,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 7,
              "name": "R",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 8,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 9,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 10,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 73,
                "name": "JSON",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 7,
                "name": "R",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 11,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 12,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 13,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 74,
                "name": "Buffer",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "global.Buffer",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 14,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 15,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 16,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 17,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 74,
                "name": "Buffer",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "global.Buffer",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 18,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 19,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 20,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 75,
                "name": "Blob",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Blob",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 21,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 22,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 23,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 24,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 75,
                "name": "Blob",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Blob",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 25,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 26,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 27,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 76,
                "name": "Text",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 28,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 29,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 30,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 31,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 76,
                "name": "Text",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 32,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 33,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 34,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 77,
                "name": "Result",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Response",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 35,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 36,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 37,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 38,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 77,
                "name": "Result",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Response",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 39,
          "name": "fetch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 40,
              "name": "R",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 41,
              "name": "url",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 42,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 43,
              "name": "type",
              "type": {
                "kind": "reference",
                "id": 72,
                "name": "FetchResultTypes",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Response",
                    "packageName": "typescript",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Blob",
                    "packageName": "typescript",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "global.Buffer",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 40,
                    "name": "R",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 120,
      "name": "RequestOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 266,
        "file": "types.ts",
        "path": "packages/fetch/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 121,
          "name": "body",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 267,
            "file": "types.ts",
            "path": "packages/fetch/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "BodyInit",
                "packageName": "typescript",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Record",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 126,
          "name": "cache",
          "comment": {
            "description": "A string indicating how the request will interact with the browser's cache to set request's cache.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1538,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestCache",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 127,
          "name": "credentials",
          "comment": {
            "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1540,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestCredentials",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 128,
          "name": "headers",
          "comment": {
            "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1542,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "HeadersInit",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 129,
          "name": "integrity",
          "comment": {
            "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1544,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 130,
          "name": "keepalive",
          "comment": {
            "description": "A boolean to set request's keepalive.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1546,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 125,
          "name": "method",
          "comment": {
            "description": "A string to set request's method.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1548,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 131,
          "name": "mode",
          "comment": {
            "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1550,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestMode",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 132,
          "name": "redirect",
          "comment": {
            "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1552,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestRedirect",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 124,
          "name": "referrer",
          "comment": {
            "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1554,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 133,
          "name": "referrerPolicy",
          "comment": {
            "description": "A referrer policy to set request's referrerPolicy.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1556,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ReferrerPolicy",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 122,
          "name": "signal",
          "comment": {
            "description": "An AbortSignal to set request's signal.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1558,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "AbortSignal",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 123,
          "name": "window",
          "comment": {
            "description": "Can only be null. Used to disassociate request from any Window.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1560,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib"
          },
          "readonly": false,
          "type": {
            "kind": "literal",
            "value": "null"
          }
        }
      ]
    }
  ],
  "namespaces": [],
  "typeAliases": []
}