{
  "typeDocJsonParserVersion": "2.3.2",
  "id": 0,
  "name": "@sapphire/plugin-i18next",
  "version": "3.0.0",
  "classes": [
    {
      "id": 67,
      "name": "InternationalizationHandler",
      "comment": {
        "description": "A generalized class for handling \n`i18next`\n JSON files and their discovery.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 15,
        "file": "InternationalizationHandler.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 68,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 58,
          "file": "InternationalizationHandler.ts",
          "path": "packages/i18next/src/lib"
        },
        "parameters": [
          {
            "id": 70,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 117,
              "name": "InternationalizationOptions",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 76,
          "name": "backendOptions",
          "comment": {
            "description": "The backend options for \n`@skyra/i18next-backend`\n used by \n`i18next`\n.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Backend.Options",
            "packageName": "@skyra/i18next-backend",
            "typeArguments": []
          }
        },
        {
          "id": 77,
          "name": "fetchLanguage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 117,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 78,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/i18next/src/lib/InternationalizationHandler.ts",
                  "line": 117,
                  "character": 23,
                  "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/InternationalizationHandler.ts#L117"
                }
              ],
              "signatures": [
                {
                  "id": 79,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The method to be overridden by the developer."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@note",
                        "content": [
                          {
                            "kind": "text",
                            "text": "In the event that fetchLanguage is not defined or returns null / undefined, the defaulting from "
                          },
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "fetchLanguage",
                            "target": 53
                          },
                          {
                            "kind": "text",
                            "text": " will be used."
                          }
                        ]
                      },
                      {
                        "tag": "@since",
                        "content": [
                          {
                            "kind": "text",
                            "text": "2.0.0"
                          }
                        ]
                      },
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A string for the desired language or null for no match."
                          }
                        ]
                      },
                      {
                        "tag": "@see",
                        "content": [
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "fetchLanguage",
                            "target": 53
                          }
                        ]
                      },
                      {
                        "tag": "@example",
                        "content": [
                          {
                            "kind": "code",
                            "text": "```typescript\n// Always use the same language (no per-guild configuration):\ncontainer.i18n.fetchLanguage = () => 'en-US';\n```"
                          }
                        ]
                      },
                      {
                        "tag": "@example",
                        "content": [
                          {
                            "kind": "code",
                            "text": "```typescript\n// Retrieving the language from an SQL database:\ncontainer.i18n.fetchLanguage = async (context) => {\n  const guild = await driver.getOne('SELECT language FROM public.guild WHERE id = $1', [context.guild.id]);\n  return guild?.language ?? 'en-US';\n};\n```"
                          }
                        ]
                      },
                      {
                        "tag": "@example",
                        "content": [
                          {
                            "kind": "code",
                            "text": "```typescript\n// Retrieving the language from an ORM:\ncontainer.i18n.fetchLanguage = async (context) => {\n  const guild = await driver.getRepository(GuildEntity).findOne({ id: context.guild.id });\n  return guild?.language ?? 'en-US';\n};\n```"
                          }
                        ]
                      },
                      {
                        "tag": "@example",
                        "content": [
                          {
                            "kind": "code",
                            "text": "```typescript\n// Retrieving the language on a per channel basis, e.g. per user or guild channel (ORM example but same principles apply):\ncontainer.i18n.fetchLanguage = async (context) => {\n  const channel = await driver.getRepository(ChannelEntity).findOne({ id: context.channel.id });\n  return channel?.language ?? 'en-US';\n};\n```"
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 80,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 132,
                        "name": "InternationalizationContext"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    ],
                    "name": "Awaitable",
                    "qualifiedName": "Awaitable",
                    "package": "@sapphire/utilities"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 73,
          "name": "languages",
          "comment": {
            "description": "A \n`Map`\n of \n`i18next`\n language functions keyed by their language code.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": 5,
                "name": "TFunction",
                "packageName": "i18next",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 75,
          "name": "languagesDirectory",
          "comment": {
            "description": "The director passed to \n`@skyra/i18next-backend`\n.\nAlso used in \nInternationalizationHandler.walkLanguageDirectory\n.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.2.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 45,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 71,
          "name": "languagesLoaded",
          "comment": {
            "description": "Describes whether \ninit\n has been run and languages are loaded in \nlanguages\n.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 20,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 72,
          "name": "namespaces",
          "comment": {
            "description": "A \n`Set`\n of initially loaded namespaces.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.2.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 74,
          "name": "options",
          "comment": {
            "description": "The options InternationalizationHandler was initialized with in the client.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 117,
            "name": "InternationalizationOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 86,
          "name": "format",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 181,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 87,
              "name": "format",
              "comment": {
                "description": "Localizes a content given one or more keys and i18next options.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "2.0.0"
                  },
                  {
                    "name": "see",
                    "text": "https://www.i18next.com/overview/api#t"
                  },
                  {
                    "name": "returns",
                    "text": "The localized content."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 88,
                  "name": "TResult",
                  "type": {
                    "kind": "reference",
                    "id": 50,
                    "name": "TFunctionResult",
                    "packageName": "i18next",
                    "typeArguments": []
                  },
                  "default": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 89,
                  "name": "TKeys",
                  "type": {
                    "kind": "reference",
                    "id": 49,
                    "name": "TFunctionKeys",
                    "packageName": "i18next",
                    "typeArguments": []
                  },
                  "default": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 90,
                  "name": "TInterpolationMap",
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  },
                  "default": {
                    "kind": "reference",
                    "id": 1,
                    "name": "StringMap",
                    "packageName": "i18next",
                    "typeArguments": []
                  }
                }
              ],
              "parameters": [
                {
                  "id": 91,
                  "name": "locale",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 92,
                  "name": "key",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 89,
                        "name": "TKeys",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": 89,
                          "name": "TKeys",
                          "packageName": null,
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 93,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": 51,
                    "name": "TOptions",
                    "packageName": "i18next",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 90,
                        "name": "TInterpolationMap",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 88,
                "name": "TResult",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 83,
          "name": "getT",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 164,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 84,
              "name": "getT",
              "comment": {
                "description": "Retrieve a raw TFunction from the passed locale.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 85,
                  "name": "locale",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 5,
                "name": "TFunction",
                "packageName": "i18next",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "init",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 82,
              "name": "init",
              "comment": {
                "description": "Initializes the handler by loading in the namespaces, passing the data to i18next, and filling in the \nlanguages\n.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 100,
          "name": "reloadResources",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 222,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 101,
              "name": "reloadResources",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 102,
          "name": "walkLocaleDirectory",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 245,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 103,
              "name": "walkLocaleDirectory",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "description",
                    "text": "Skips any files that don't end with \n`.json`\n."
                  },
                  {
                    "name": "since",
                    "text": "3.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 104,
                  "name": "directory",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 105,
                  "name": "ns",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncGenerator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 94,
          "name": "walkRootDirectory",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 202,
            "file": "InternationalizationHandler.ts",
            "path": "packages/i18next/src/lib"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 95,
              "name": "walkRootDirectory",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "3.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 96,
                  "name": "directory",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "PathLike",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reflection",
                    "reflection": {
                      "id": 97,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 99,
                          "name": "languages",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/i18next/src/lib/InternationalizationHandler.ts",
                              "line": 219,
                              "character": 40,
                              "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/InternationalizationHandler.ts#L219"
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 98,
                          "name": "namespaces",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/i18next/src/lib/InternationalizationHandler.ts",
                              "line": 219,
                              "character": 11,
                              "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/InternationalizationHandler.ts#L219"
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            99,
                            98
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/i18next/src/lib/InternationalizationHandler.ts",
                          "line": 219,
                          "character": 9,
                          "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/InternationalizationHandler.ts#L219"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "constants": [],
  "enums": [],
  "functions": [
    {
      "id": 53,
      "name": "fetchLanguage",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 19,
        "file": "functions.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 54,
          "name": "fetchLanguage",
          "comment": {
            "description": "Retrieves the language name for a specific target, using \nfetchLanguage\n.\nIf \nfetchLanguage\n is not defined or this function returns a nullish value,\nthen there will be a series of fallback attempts in the following descending order:\n1. Returns \nGuild.preferredLocale\n.\n2. Returns \ndefaultName\n if no guild was provided.\n3. Returns \n`'en-US'`\n if nothing else was found.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "see",
                "text": "resolveLanguage"
              },
              {
                "name": "returns",
                "text": "The name of the language key."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 55,
              "name": "target",
              "type": {
                "kind": "reference",
                "id": 148,
                "name": "Target",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 56,
      "name": "fetchT",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 56,
        "file": "functions.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 57,
          "name": "fetchT",
          "comment": {
            "description": "Retrieves the language-assigned function from i18next designated to a target's preferred language code.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "returns",
                "text": "The language function from i18next."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 58,
              "name": "target",
              "type": {
                "kind": "reference",
                "id": 148,
                "name": "Target",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 5,
                "name": "TFunction",
                "packageName": "i18next",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 59,
      "name": "resolveKey",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 68,
        "file": "functions.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "signatures": [
        {
          "id": 60,
          "name": "resolveKey",
          "comment": {
            "description": "Resolves a key and its parameters.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "returns",
                "text": "The data that \n`key`\n held, processed by i18next."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 61,
              "name": "TResult",
              "type": {
                "kind": "reference",
                "id": 50,
                "name": "TFunctionResult",
                "packageName": "i18next",
                "typeArguments": []
              },
              "default": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 62,
              "name": "TKeys",
              "type": {
                "kind": "reference",
                "id": 49,
                "name": "TFunctionKeys",
                "packageName": "i18next",
                "typeArguments": []
              },
              "default": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 63,
              "name": "TInterpolationMap",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": {
                "kind": "reference",
                "id": 1,
                "name": "StringMap",
                "packageName": "i18next",
                "typeArguments": []
              }
            }
          ],
          "parameters": [
            {
              "id": 64,
              "name": "target",
              "type": {
                "kind": "reference",
                "id": 148,
                "name": "Target",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 65,
              "name": "key",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 62,
                    "name": "TKeys",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 62,
                      "name": "TKeys",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                ]
              }
            },
            {
              "id": 66,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 51,
                "name": "TOptions",
                "packageName": "i18next",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 63,
                    "name": "TInterpolationMap",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 61,
                "name": "TResult",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 106,
      "name": "HMROptions",
      "comment": {
        "description": "Configure whether to use Hot-Module-Replacement (HMR) for your i18next resources using these options. The minimum config to enable HMR is to set \n`enabled`\n to true. Any other properties are optional.",
        "blockTags": [
          {
            "name": "since",
            "text": "2.2.0"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 107,
          "name": "enabled",
          "comment": {
            "description": "HMR status for the i18next plugin.",
            "blockTags": [
              {
                "name": "default",
                "text": "false"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 108,
          "name": "languages",
          "comment": {
            "description": "Languages that will be reloaded when updating the languages directory.",
            "blockTags": [
              {
                "name": "default",
                "text": "All languages that are automatically resolved from your folder setup"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 32,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "id": 109,
          "name": "namespaces",
          "comment": {
            "description": "Namespaces that will be reloaded when updating the languages directory.",
            "blockTags": [
              {
                "name": "default",
                "text": "All namespaces that are automatically resolved from your languages folder setup"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "id": 110,
          "name": "options",
          "comment": {
            "description": "HMR options",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 43,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "WatchOptions",
            "packageName": "chokidar",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 140,
      "name": "I18nextFormatters",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 148,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 141,
          "name": "name",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 149,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 138,
      "name": "InternationalizationClientOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 144,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 139,
          "name": "i18n",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 145,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 117,
            "name": "InternationalizationOptions",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 132,
      "name": "InternationalizationContext",
      "comment": {
        "description": "Context for \nfetchLanguage\n functions.\nThis context enables implementation of per-guild, per-channel, and per-user localization.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 133,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 134,
          "name": "channel",
          "comment": {
            "description": "The \nDiscordChannel\n object to fetch the preferred language for.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 137,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": 131,
                "name": "DiscordChannel",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 133,
          "name": "guild",
          "comment": {
            "description": "The \nGuild\n object to fetch the preferred language for, or \n`null`\n if the language is to be fetched in a DM.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 135,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Guild",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 136,
          "name": "interactionGuildLocale",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 140,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 137,
          "name": "interactionLocale",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 141,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 135,
          "name": "user",
          "comment": {
            "description": "The user to fetch the preferred language for.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 139,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "User",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 117,
      "name": "InternationalizationOptions",
      "comment": {
        "description": "The options used in \nInternationalizationHandler\n.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 57,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "properties": [
        {
          "id": 119,
          "name": "backend",
          "comment": {
            "description": "The options passed to \n`backend`\n in \n`i18next.init`\n.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 69,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Backend.Options",
            "packageName": "@skyra/i18next-backend",
            "typeArguments": []
          }
        },
        {
          "id": 121,
          "name": "defaultLanguageDirectory",
          "comment": {
            "description": "The directory in which \"i18next-fs-backend\" should search for files.",
            "blockTags": [
              {
                "name": "default",
                "text": "`rootDirectory/language`"
              },
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 82,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 122,
          "name": "defaultMissingKey",
          "comment": {
            "description": "The default value to be used if a specific language key isn't found.\nDefaults to \"default:default\".",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 89,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 123,
          "name": "defaultNS",
          "comment": {
            "description": "The default NS that is prefixed to all keys that don't specify it.\nDefaults to \"default\".",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 96,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 118,
          "name": "defaultName",
          "comment": {
            "description": "Used as the default 2nd to last fallback locale if no other is found.\nIt's only followed by \"en-US\".",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 63,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 126,
          "name": "fetchLanguage",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 123,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 127,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/i18next/src/lib/types.ts",
                  "line": 123,
                  "character": 17,
                  "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/types.ts#L123"
                }
              ],
              "signatures": [
                {
                  "id": 128,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A function that is to be used to retrieve the language for the current context.\nContext exists of a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Guild `guild`"
                      },
                      {
                        "kind": "text",
                        "text": ", a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "`channel`",
                        "target": 131
                      },
                      {
                        "kind": "text",
                        "text": " and a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "User `user`"
                      },
                      {
                        "kind": "text",
                        "text": ".\n\nIf this is not set, then the language will always be the default language.\n\nThis will be inserted for "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "fetchLanguage",
                        "target": 77
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@since",
                        "content": [
                          {
                            "kind": "text",
                            "text": "2.0.0"
                          }
                        ]
                      },
                      {
                        "tag": "@default",
                        "content": [
                          {
                            "kind": "text",
                            "text": "() => InternationalizationOptions.defaultName"
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 129,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 132,
                        "name": "InternationalizationContext"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    ],
                    "name": "Awaitable",
                    "qualifiedName": "Awaitable",
                    "package": "@sapphire/utilities"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 124,
          "name": "formatters",
          "comment": {
            "description": "Array of formatters to add to i18n.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "[]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 104,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 140,
              "name": "I18nextFormatters",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 125,
          "name": "hmr",
          "comment": {
            "description": "Reload languages and namespaces when updating the languages directory.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.2.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 111,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 106,
            "name": "HMROptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 120,
          "name": "i18next",
          "comment": {
            "description": "The options passed to \n`i18next.init`\n.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 75,
            "file": "types.ts",
            "path": "packages/i18next/src/lib"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "InitOptions",
                "packageName": "i18next",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 111,
                "name": "DynamicOptions",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "InitOptions",
                    "packageName": "i18next",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 5,
      "name": "TFunction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 691,
        "file": "index.d.ts",
        "path": "node_modules/i18next"
      },
      "external": true,
      "properties": []
    }
  ],
  "namespaces": [],
  "typeAliases": [
    {
      "id": 147,
      "name": "ChannelTarget",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 153,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 131,
            "name": "DiscordChannel",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 131,
      "name": "DiscordChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 127,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 130,
            "name": "TextBasedDiscordChannel",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "StoreChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "StageChannel",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "VoiceChannel",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 111,
      "name": "DynamicOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 51,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 116,
          "name": "T",
          "type": {
            "kind": "reference",
            "id": null,
            "name": "InitOptions",
            "packageName": "i18next",
            "typeArguments": []
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 112,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/i18next/src/lib/types.ts",
              "line": 51,
              "character": 52,
              "url": "https://github.com/sapphiredev/plugins/blob/192eb00/packages/i18next/src/lib/types.ts#L51"
            }
          ],
          "signatures": [
            {
              "id": 113,
              "name": "__type",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used to dynamically add options based on found languages in "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "init",
                    "target": 81
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@since",
                    "content": [
                      {
                        "kind": "text",
                        "text": "1.1.0"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 114,
                  "name": "namespaces",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                },
                {
                  "id": 115,
                  "name": "languages",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 116,
                "name": "T"
              }
            }
          ]
        }
      }
    },
    {
      "id": 1,
      "name": "StringMap",
      "comment": {
        "description": "indexer that is open to any value",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 633,
        "file": "index.d.ts",
        "path": "node_modules/i18next"
      },
      "external": true,
      "typeParameters": [],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 2,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/i18next/index.d.ts",
              "line": 633,
              "character": 24
            }
          ],
          "indexSignature": {
            "id": 3,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {
              "isExternal": true
            },
            "parameters": [
              {
                "id": 4,
                "name": "key",
                "kind": 32768,
                "flags": {
                  "isExternal": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      }
    },
    {
      "id": 49,
      "name": "TFunctionKeys",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 690,
        "file": "index.d.ts",
        "path": "node_modules/i18next"
      },
      "external": true,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "intrinsic",
            "type": "string"
          },
          {
            "kind": "reference",
            "id": null,
            "name": "TemplateStringsArray",
            "packageName": "typescript",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 50,
      "name": "TFunctionResult",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 683,
        "file": "index.d.ts",
        "path": "node_modules/i18next"
      },
      "external": true,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "intrinsic",
            "type": "string"
          },
          {
            "kind": "intrinsic",
            "type": "object"
          },
          {
            "kind": "reference",
            "id": null,
            "name": "TFunctionDetailedResult",
            "packageName": "i18next",
            "typeArguments": []
          },
          {
            "kind": "array",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "intrinsic",
                  "type": "string"
                },
                {
                  "kind": "intrinsic",
                  "type": "object"
                }
              ]
            }
          },
          {
            "kind": "intrinsic",
            "type": "undefined"
          },
          {
            "kind": "literal",
            "value": "null"
          }
        ]
      }
    },
    {
      "id": 51,
      "name": "TOptions",
      "comment": {
        "description": "Options that allow open ended values for interpolation unless type is provided.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 638,
        "file": "index.d.ts",
        "path": "node_modules/i18next"
      },
      "external": true,
      "typeParameters": [
        {
          "id": 52,
          "name": "TInterpolationMap",
          "type": {
            "kind": "intrinsic",
            "type": "object"
          },
          "default": {
            "kind": "reference",
            "id": 1,
            "name": "StringMap",
            "packageName": "i18next",
            "typeArguments": []
          }
        }
      ],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "TOptionsBase",
            "packageName": "i18next",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 52,
            "name": "TInterpolationMap",
            "packageName": "i18next",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 148,
      "name": "Target",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 154,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "BaseCommandInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 147,
            "name": "ChannelTarget",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Guild",
            "packageName": "discord.js",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "MessageComponentInteraction",
            "packageName": "discord.js",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 130,
      "name": "TextBasedDiscordChannel",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 126,
        "file": "types.ts",
        "path": "packages/i18next/src/lib"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "indexedAccess",
        "objectType": {
          "kind": "reference",
          "id": null,
          "name": "Message",
          "packageName": "discord.js",
          "typeArguments": []
        },
        "indexType": {
          "kind": "literal",
          "value": "channel"
        }
      }
    }
  ]
}