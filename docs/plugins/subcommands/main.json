{
  "typeDocJsonParserVersion": "9.0.1",
  "id": 0,
  "name": "@sapphire/plugin-subcommands",
  "version": "4.2.1",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://raw.githubusercontent.com/sapphiredev/assets/main/banners/SapphireCommunity.png)\n\n# @sapphire/plugin-subcommands\n\n**Plugin for <a href=\"https://github.com/sapphiredev/framework\">@sapphire/framework</a> so your commands can have subcommands.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/plugins)](https://github.com/sapphiredev/plugins/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/plugins/branch/main/graph/badge.svg?token=QWL8FB16BR)](https://codecov.io/gh/sapphiredev/plugins)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/plugin-subcommands?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/plugin-subcommands)\n[![npm](https://img.shields.io/npm/v/@sapphire/plugin-subcommands?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/plugin-subcommands)\n\n</div>\n\n## Description\n\nSubcommands are a way to split 1 command into multiple. This can in particular be very useful for configuration commands with subcommands such as `set`, `reset` and `remove`.\n\n## Features\n\n-   Fully ready for TypeScript!\n-   Includes ESM ready entrypoint\n-   Type generics for easy extension in TypeScript\n-   Input/Output mapping\n\n## Installation\n\n`@sapphire/plugin-subcommands` depends on the following packages. Be sure to install these along with this package!\n\n-   [`@sapphire/framework`](https://www.npmjs.com/package/@sapphire/framework)\n-   [`@sapphire/utilities`](https://www.npmjs.com/package/@sapphire/utilities)\n-   [`discord.js`](https://www.npmjs.com/package/discord.js)\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/plugin-subcommands @sapphire/framework @sapphire/utilities discord.js\n```\n\n---\n\n## Usage\n\nStart by importing the registration file in your project to use the plugins error loggers:\n\n**JavaScript**\n\n```js\nrequire('@sapphire/plugin-subcommands/register');\n```\n\n**TypeScript**\n\n```typescript\nimport '@sapphire/plugin-subcommands/register';\n```\n\nThen, you can create new subcommands by extending the Subcommand class.\n_With TypeScript:_\n\n```typescript\nimport { Subcommand } from '@sapphire/plugin-subcommands';\nimport { ApplyOptions } from '@sapphire/decorators';\nimport type { Args } from '@sapphire/framework';\nimport type { Message, CommandInteraction } from 'discord.js';\n\n// Using ApplyOptions decorator makes it easy to configure\n@ApplyOptions<Subcommand.Options>({\n\tsubcommands: [\n\t\t{\n\t\t\tname: 'add',\n\t\t\tmessageRun: 'messageAdd',\n\t\t\tchatInputRun: 'chatInputAdd'\n\t\t},\n\t\t{\n\t\t\tname: 'remove',\n\t\t\tmessageRun: 'messageRemove',\n\t\t\tchatInputRun: 'chatInputRemove'\n\t\t},\n\t\t{\n\t\t\tname: 'list',\n\t\t\tmessageRun: 'messageList',\n\t\t\tchatInputRun: 'chatInputList'\n\t\t}\n\t]\n})\n// Extend `Subcommand` instead of `Command`\nexport class UserCommand extends Subcommand {\n\tpublic async messageAdd(message: Message, args: Args) {}\n\n\tpublic async messageRemove(message: Message, args: Args) {}\n\n\tpublic async messageList(message: Message, args: Args) {}\n\n\tpublic async chatInputAdd(interaction: Subcommand.ChatInputInteraction) {}\n\n\tpublic async chatInputRemove(interaction: Subcommand.ChatInputInteraction) {}\n\n\tpublic async chatInputList(interaction: Subcommand.ChatInputInteraction) {}\n}\n```\n\n_With JavaScript:_\n\n```javascript\nconst { Subcommand } = require('@sapphire/plugin-subcommands');\n\n// Extend `Subcommand` instead of `Command`\nmodule.exports = class UserCommand extends Subcommand {\n\tconstructor(context, options) {\n\t\tsuper(context, {\n\t\t\t...options,\n\t\t\tsubcommands: [\n\t\t\t\t{\n\t\t\t\t\tname: 'add',\n\t\t\t\t\tmessageRun: 'messageAdd',\n\t\t\t\t\tchatInputRun: 'chatInputAdd'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'remove',\n\t\t\t\t\tmessageRun: 'messageRemove',\n\t\t\t\t\tchatInputRun: 'chatInputRemove'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'list',\n\t\t\t\t\tmessageRun: 'messageList',\n\t\t\t\t\tchatInputRun: 'chatInputList'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tasync messageAdd(message, args) {}\n\n\tasync messageRemove(message, args) {}\n\n\tasync messageList(message, args) {}\n\n\tasync chatInputAdd(interaction) {}\n\n\tasync chatInputRemove(interaction) {}\n\n\tasync chatInputList(interaction) {}\n};\n```\n\nFor more documentation please refer to [guide](https://www.sapphirejs.dev/docs/Guide/plugins/Subcommands/getting-started)\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/plugins/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/plugins\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/plugin-subcommands@4.2.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.2.0...@sapphire/plugin-subcommands@4.2.1) - (2023-08-29)\n\n## üè† Refactor\n\n- **subcommands:** Deprecate `SubcommandPluginEvents.ChatInputSubCommandDenied` in favour of `SubcommandPluginEvents.ChatInputSubcommandDenied` and `SubcommandPluginEvents.MessageSubCommandDenied` in favour of `SubcommandPluginEvents.MessageSubcommandDenied` ([ed845b4](https://github.com/sapphiredev/plugins/commit/ed845b4102925fb8b419a752f992298fa892a74d))\n\n# [@sapphire/plugin-subcommands@4.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.1.1...@sapphire/plugin-subcommands@4.2.0) - (2023-08-23)\n\n## üöÄ Features\n\n- **subcommands:** Add runIn to match framework (#470) ([89cb5d9](https://github.com/sapphiredev/plugins/commit/89cb5d9937402140a28d10739ae9b911b22558f5))\n\n# [@sapphire/plugin-subcommands@4.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.1.0...@sapphire/plugin-subcommands@4.1.1) - (2023-08-23)\n\n## üè† Refactor\n\n- ***:** Cleanup plugin registry files (#469) ([215b334](https://github.com/sapphiredev/plugins/commit/215b3348b30077238147dbc643769d960b856ba1))\n\n## üêõ Bug Fixes\n\n- **subcommands:** Ensure that `subcommand.type` always has a value ([6007a23](https://github.com/sapphiredev/plugins/commit/6007a23926cad34e15dd72d58fec90bb858ae6c1))\n\n# [@sapphire/plugin-subcommands@4.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.0.2...@sapphire/plugin-subcommands@4.1.0) - (2023-08-21)\n\n## üöÄ Features\n\n- **subcommands:** Implement per-subcommand preconditions (#465) ([f5d5536](https://github.com/sapphiredev/plugins/commit/f5d55367e4833875a07438aa1cba435ed3889f27))\n\n# [@sapphire/plugin-subcommands@4.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.0.1...@sapphire/plugin-subcommands@4.0.2) - (2023-07-21)\n\n## üêõ Bug Fixes\n\n- **subcommands:** Bump transitive @sapphire/utilities dependency ([bc57087](https://github.com/sapphiredev/plugins/commit/bc57087df4d52d691ab61332a987bfbe1bf34bfb))\n- **deps:** Update all non-major dependencies ([9bb6627](https://github.com/sapphiredev/plugins/commit/9bb6627c20999d37130537fce58241c12a795046))\n\n# [@sapphire/plugin-subcommands@4.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@4.0.0...@sapphire/plugin-subcommands@4.0.1) - (2023-04-10)\n\n## üêõ Bug Fixes\n\n- **subcommands:** Fixed compatibility with TS 5.x ([3340544](https://github.com/sapphiredev/plugins/commit/3340544241e7546b23fe050e7a45d9e2f399af8c))\n- **subcommands:** Update dependencies ([249e9df](https://github.com/sapphiredev/plugins/commit/249e9df1fbb37bcfaf4192284dbd7b4734163854))\n\n# [@sapphire/plugin-subcommands@4.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.2.4...@sapphire/plugin-subcommands@4.0.0) - (2023-01-08)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies (#399) ([953d57b](https://github.com/sapphiredev/plugins/commit/953d57b06ea624baa89ba1d03131c5fb10cecbfb))\n\n## üöÄ Features\n\n- **deps:** Support for djs v14 (#403) ([7674782](https://github.com/sapphiredev/plugins/commit/76747829f4b3ec152ab888e57a56a138e7d527f5))\n\n# [@sapphire/plugin-subcommands@3.2.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.2.3...@sapphire/plugin-subcommands@3.2.4) - (2022-12-10)\n\n## üêõ Bug Fixes\n\n- SupportsXCommands() methods now use SubcommandMappings (#398) ([3e7a45a](https://github.com/sapphiredev/plugins/commit/3e7a45a63899b9ff1ffa39afb7855e81515daceb))\n- **deps:** Update all non-major dependencies (#387) ([e31f714](https://github.com/sapphiredev/plugins/commit/e31f7140c8bb7c34086540912eb595dd04adaef5))\n\n## üìù Documentation\n\n- Add @Arcadia148 as a contributor ([3a28c2f](https://github.com/sapphiredev/plugins/commit/3a28c2fc9a08be5e66026b7468a304c8b83203e6))\n\n# [@sapphire/plugin-subcommands@3.2.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.2.2...@sapphire/plugin-subcommands@3.2.3) - (2022-10-08)\n\n## üêõ Bug Fixes\n\n- **subcommands:** Update dependencies ([3d4e93c](https://github.com/sapphiredev/plugins/commit/3d4e93c1a94a2869a6bd576097747403b29fda0c))\n- Default subcommand argument behavior (#365) ([6cef7c6](https://github.com/sapphiredev/plugins/commit/6cef7c66da57a319e0348d80dcbde49526c071be))\n\n# [@sapphire/plugin-subcommands@3.2.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.2.1...@sapphire/plugin-subcommands@3.2.2) - (2022-10-02)\n\n## üêõ Bug Fixes\n\n- **subcommands:** Bump dependencies ([1142524](https://github.com/sapphiredev/plugins/commit/1142524d89cec3a527867cf0527434bc5c38c39c))\n\n## üìù Documentation\n\n- Add @r-priyam as a contributor ([2d97019](https://github.com/sapphiredev/plugins/commit/2d970198717285c0f1652340ce87b1a4780179f3))\n- Add @BenSegal855 as a contributor ([66553df](https://github.com/sapphiredev/plugins/commit/66553dfbb4bc7332c295277ffa4a8f720401bc89))\n- Add @yuansheng1549 as a contributor ([c36ac65](https://github.com/sapphiredev/plugins/commit/c36ac65cd0a1a3e266a8a3679a58404177e0bb6b))\n- Add @RealShadowNova as a contributor ([6cfa76f](https://github.com/sapphiredev/plugins/commit/6cfa76f793a16c6d11aa057e66e3fb41a9f4fb6d))\n\n# [@sapphire/plugin-subcommands@3.2.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.2.0...@sapphire/plugin-subcommands@3.2.1) - (2022-09-02)\n\n## üêõ Bug Fixes\n\n- Subcommands script (#346) ([4f5f06a](https://github.com/sapphiredev/plugins/commit/4f5f06a3b7df35c18d71d196bcda5abdb2b499b7))\n- **subcommands:** Fixed mismatch in `*SubcommandMissingHandler` built in errors (#345) ([4ab92be](https://github.com/sapphiredev/plugins/commit/4ab92bef58fbe81e3874740834ce7f592e7bde1e))\n\n# [@sapphire/plugin-subcommands@3.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.1.1...@sapphire/plugin-subcommands@3.2.0) - (2022-08-29)\n\n## üöÄ Features\n\n- **subcommands:** Add default error listeners (#343) ([7f36686](https://github.com/sapphiredev/plugins/commit/7f3668689e5c7e664bca16e3cd6a36ea803b6a9c))\n\n# [@sapphire/plugin-subcommands@3.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.1.0...@sapphire/plugin-subcommands@3.1.1) - (2022-08-21)\n\n## üêõ Bug Fixes\n\n- Fixed arg parsing (#340) ([80c35c9](https://github.com/sapphiredev/plugins/commit/80c35c97f3d0a0663382accb61efd1530c9849ee))\n\n# [@sapphire/plugin-subcommands@3.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@3.0.0...@sapphire/plugin-subcommands@3.1.0) - (2022-08-21)\n\n## üêõ Bug Fixes\n\n- Add missing messages to `UserError` throws ([59d5986](https://github.com/sapphiredev/plugins/commit/59d59869421af3d112793a60ff6633b4c70efbb7))\n- Fixed matching of message subcommand groups ([bb5a769](https://github.com/sapphiredev/plugins/commit/bb5a7698c8ee7637d076d8b827b458e148ac8baa))\n\n## üöÄ Features\n\n- Expose the `matchedSubcommandMapping` on `MessageSubcommandAcceptedPayload` and `ChatInputSubcommandAcceptedPayload` context ([273b740](https://github.com/sapphiredev/plugins/commit/273b7405392305d7e2f1324333906da4dc1ee8ed))\n\n# [@sapphire/plugin-subcommands@3.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.2.2...@sapphire/plugin-subcommands@3.0.0) - (2022-08-20)\n\n## üìù Documentation\n\n- Add @ricardooow as a contributor ([15d7f9b](https://github.com/sapphiredev/plugins/commit/15d7f9b0d7428559441550aba1918d068565baa6))\n- Add @imranbarbhuiya as a contributor ([e3d8fdc](https://github.com/sapphiredev/plugins/commit/e3d8fdc433a6c89389b2e1c574245e8140d1c47a))\n- Add @KrishAgarwal2811 as a contributor ([875dda0](https://github.com/sapphiredev/plugins/commit/875dda0756f1b5302e77993e44a1ac9ab1a065d0))\n- Add @jczstudios as a contributor ([c9126bc](https://github.com/sapphiredev/plugins/commit/c9126bc2bb454989c006864293ef99a47369dc38))\n- Add @MajesticString as a contributor ([2743c8d](https://github.com/sapphiredev/plugins/commit/2743c8d5b9abe1b554ac7d776cb827d6a1e9db7b))\n- Add @Mzato0001 as a contributor ([06626cd](https://github.com/sapphiredev/plugins/commit/06626cd7ff94d3bc8ce75da6383e1b77b6109a3d))\n\n## üöÄ Features\n\n- **subcommands:** Lowercase subcommands and dashless aliases (#337) ([31ea70c](https://github.com/sapphiredev/plugins/commit/31ea70caae38988ca395dd3e934822c26e6df4f6))\n- ***:** Subcommands v3 & update plugins to Sapphire Result v2 (#271) ([1cfc32a](https://github.com/sapphiredev/plugins/commit/1cfc32a9cb568d1031a35c5e0628a67bc082ff21))\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-subcommands has been completely rewritten from scratch for version 3. Please refer to the [README](https://github.com/sapphiredev/plugins/blob/main/packages/subcommands/README.md) or [the website](https://www.sapphirejs.dev/docs/Guide/plugins/Subcommands/getting-started) for updated usage.\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-hmr has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-pattern-commands has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-i18next has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-scheduled-tasks has been updated to use @sapphire/result v2 and @sapphire/framework v3\n\n# [@sapphire/plugin-subcommands@2.2.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.2.0...@sapphire/plugin-subcommands@2.2.2) - (2022-07-11)\n\n## üêõ Bug Fixes\n\n- Manually set version ([117d5a6](https://github.com/sapphiredev/plugins/commit/117d5a6256af7e01b420b28f95abec36f3feb0af))\n\n## üìù Documentation\n\n- Update typedoc setup ([5c855bd](https://github.com/sapphiredev/plugins/commit/5c855bd8341f155a41c9b85738541f1f47ac837a))\n\n# [2.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.1.3...@sapphire/plugin-subcommands@2.2.0) (2022-03-06)\n\n### Features\n\n-   add HMR plugin ([#209](https://github.com/sapphiredev/plugins/issues/209)) ([4a18bb1](https://github.com/sapphiredev/plugins/commit/4a18bb1377a8d506fddc5bb991430503902d393b))\n-   allow module: NodeNext ([#251](https://github.com/sapphiredev/plugins/issues/251)) ([31bab09](https://github.com/sapphiredev/plugins/commit/31bab09834ebc1bc646e4a2849dbd24c65f08c0e))\n\n## [2.1.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.1.2...@sapphire/plugin-subcommands@2.1.3) (2021-12-21)\n\n**Note:** Version bump only for package @sapphire/plugin-subcommands\n\n## [2.1.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.1.1...@sapphire/plugin-subcommands@2.1.2) (2021-12-06)\n\n### Bug Fixes\n\n-   **subcommands:** TS Only - Fixed type of re-export of SubCommandPluginCommand.Context ([39004ac](https://github.com/sapphiredev/plugins/commit/39004ac0d334dc68d9ad53258ba297f22fb8a7c9))\n\n## [2.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.1.0...@sapphire/plugin-subcommands@2.1.1) (2021-11-30)\n\n### Bug Fixes\n\n-   expose `Context`, `JSON` and `RunInTypes` in the `SubCommandPluginCommand` namespace ([9af2b57](https://github.com/sapphiredev/plugins/commit/9af2b57f8b1cf6bc483a75a5d7b80de0dbb0dbdb))\n\n# [2.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.0.2...@sapphire/plugin-subcommands@2.1.0) (2021-11-21)\n\n### Features\n\n-   expose and use namespaces for options, context, etc ([#176](https://github.com/sapphiredev/plugins/issues/176)) ([33452da](https://github.com/sapphiredev/plugins/commit/33452da808d91313a5d3bf680e11b5208ac67442))\n\n## [2.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.0.1...@sapphire/plugin-subcommands@2.0.2) (2021-11-06)\n\n### Bug Fixes\n\n-   **docs:** replace command usage of `run` to `messageRun` ([#160](https://github.com/sapphiredev/plugins/issues/160)) ([415adb8](https://github.com/sapphiredev/plugins/commit/415adb85b884da5d0f1f2ce07a9d46134f2bcb12))\n\n## [2.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@2.0.0...@sapphire/plugin-subcommands@2.0.1) (2021-10-17)\n\n### Bug Fixes\n\n-   allow more node & npm versions in engines field ([ce5b12f](https://github.com/sapphiredev/plugins/commit/ce5b12f8142297bceda49b85574a95a3cf9112ab))\n\n# [2.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.6...@sapphire/plugin-subcommands@2.0.0) (2021-10-16)\n\n### Code Refactoring\n\n-   **plugin-subcommands:** updated for discord.js@13 and framework@2 ([9ac515f](https://github.com/sapphiredev/plugins/commit/9ac515fa142d126a5448e092b0354d5f8a9bf5b8))\n\n### Features\n\n-   **i18next:** update i18next dependency ([#129](https://github.com/sapphiredev/plugins/issues/129)) ([96519de](https://github.com/sapphiredev/plugins/commit/96519de5de253db390ed9a76ed073ffe1eabd187))\n-   rename `Awaited` to `Awaitable` ([#152](https://github.com/sapphiredev/plugins/issues/152)) ([e8aabab](https://github.com/sapphiredev/plugins/commit/e8aababca760125fd3752a807ef26da16103dd65))\n-   **subcommands:** migrate `Command#run` to `Command#messageRun` ([#157](https://github.com/sapphiredev/plugins/issues/157)) ([2960711](https://github.com/sapphiredev/plugins/commit/29607111c4e4f61ece463e10854982f205879996))\n\n### BREAKING CHANGES\n\n-   **i18next:** i18next has been updated to v21.0.1. Please also seee the breaking changes for i18next [here](https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2100) and their migration guide [here](https://www.i18next.com/misc/migration-guide#v-20-x-x-to-v-21-0-0)\n\n-   chore: activate renovate\n-   **plugin-subcommands:** Increase `@sapphire/framework` requirement to v2.\n\n## [1.0.6](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.5...@sapphire/plugin-subcommands@1.0.6) (2021-06-19)\n\n### Bug Fixes\n\n-   remove peer deps, update dev deps, update READMEs ([#91](https://github.com/sapphiredev/plugins/issues/91)) ([3489b1d](https://github.com/sapphiredev/plugins/commit/3489b1dc1e8a7c64c255595b3d441cd0b5bac936))\n-   **subcommands:** fixed JavaScript usage in README ([#89](https://github.com/sapphiredev/plugins/issues/89)) ([73a35e9](https://github.com/sapphiredev/plugins/commit/73a35e98da56a27a05b2179188599fcaf1d87ff0))\n-   **subcommands:** mark package as side effect free ([7959288](https://github.com/sapphiredev/plugins/commit/7959288cb61131a75bd0692056e3764577cf5669))\n-   **subcommands:** respect caseInsensitive client option ([#84](https://github.com/sapphiredev/plugins/issues/84)) ([6fec28a](https://github.com/sapphiredev/plugins/commit/6fec28acdb2cd07013d4f7c64f2f985528727a53))\n\n## [1.0.5](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.4...@sapphire/plugin-subcommands@1.0.5) (2021-05-02)\n\n### Bug Fixes\n\n-   drop the `www.` from the SapphireJS URL ([a86049f](https://github.com/sapphiredev/plugins/commit/a86049f185f0ccb12d61379dd82255b36d4fa145))\n-   update all the SapphireJS URLs from `.com` to `.dev` ([c5fd156](https://github.com/sapphiredev/plugins/commit/c5fd15691abb9a9712dc4b8aebd8400f6d91f719))\n\n## [1.0.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.3...@sapphire/plugin-subcommands@1.0.4) (2021-04-21)\n\n### Bug Fixes\n\n-   change all Sapphire URLs from \"project\"->\"community\" & use our domain where applicable üë®‚Äçüåæüöú ([#75](https://github.com/sapphiredev/plugins/issues/75)) ([e437dc4](https://github.com/sapphiredev/plugins/commit/e437dc45fcd4d22ab2dcdb0e70c67cc5856883c0))\n\n## [1.0.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.2...@sapphire/plugin-subcommands@1.0.3) (2021-04-03)\n\n**Note:** Version bump only for package @sapphire/plugin-subcommands\n\n## [1.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.1...@sapphire/plugin-subcommands@1.0.2) (2021-03-16)\n\n### Bug Fixes\n\n-   update dependencies, add tslib, bump framework to v1.0.0 ([880b761](https://github.com/sapphiredev/plugins/commit/880b7614d857f23fcbcd351e69795c451a95f49c))\n\n## [1.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-subcommands@1.0.0...@sapphire/plugin-subcommands@1.0.1) (2021-02-12)\n\n### Bug Fixes\n\n-   **subcommands:** mark subCommands as optional in SubCommandPluginCommandOptions ([51c433d](https://github.com/sapphiredev/plugins/commit/51c433d963e1cdcb797eddef8dbd4ad3e634ec05))\n\n# 1.0.0 (2021-02-12)\n\n### Features\n\n-   **subcommands:** type improvements & fix build ([#59](https://github.com/sapphiredev/plugins/issues/59)) ([1707d01](https://github.com/sapphiredev/plugins/commit/1707d013d06ae109ddcba83ead9e936a17ba56eb))\n-   add subcommands plugin ([#58](https://github.com/sapphiredev/plugins/issues/58)) ([74fa051](https://github.com/sapphiredev/plugins/commit/74fa05151a5267927ec1c792b9fd0b88a078c6fd))\n",
  "classes": [
    {
      "id": 1,
      "name": "Subcommand",
      "source": {
        "line": 37,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L37"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The class to extends for commands that have subcommands.\nSpecify the subcommands through the {@link Subcommand.Options.subcommands} option.\n\nNote that you should not make **all** your commands extend this class, _only_ the ones that have subcommands.\nThe reason for this is that this class implements {@link Command.messageRun} and {@link Command.chatInputRun}\nwhich you wouldn't necessarily want to do for commands that don't have subcommands.\nFurthermore, it also just adds general unnecessary memory overhead.",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Command",
        "packageName": "@sapphire/framework",
        "typeArguments": [
          {
            "kind": "reference",
            "id": -1,
            "name": "PreParseReturn",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": -1,
            "name": "O",
            "packageName": null,
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [
        {
          "id": 125,
          "name": "PreParseReturn",
          "constraint": {
            "kind": "reference",
            "id": null,
            "name": "Args",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          },
          "default": {
            "kind": "reference",
            "id": null,
            "name": "Args",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 126,
          "name": "O",
          "constraint": {
            "kind": "reference",
            "id": 128,
            "name": "Subcommand.Options",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          },
          "default": {
            "kind": "reference",
            "id": 128,
            "name": "Subcommand.Options",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        }
      ],
      "construct": {
        "id": 2,
        "name": "constructor",
        "source": {
          "line": 56,
          "file": "Subcommand.ts",
          "path": "packages/subcommands/src/lib",
          "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L56"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1,
        "accessibility": "public",
        "parameters": [
          {
            "id": 6,
            "name": "context",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceContext",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          },
          {
            "id": 7,
            "name": "options",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": -1,
              "name": "O",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 114,
          "name": "aliases",
          "source": {
            "line": 687,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The aliases for the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 62,
          "name": "applicationCommandRegistry",
          "source": {
            "line": 1911,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The application command registry associated with this command.",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ApplicationCommandRegistry",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 10,
          "name": "caseInsensitiveSubcommands",
          "source": {
            "line": 54,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L54"
          },
          "comment": {
            "description": "Whether to use case insensitive subcommands. This is only relevant for message-command styled commands as\nchat input commands are always lowercase. This can be enabled through `clientOptions.caseInsensitiveCommands`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 56,
          "name": "description",
          "source": {
            "line": 1876,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "A basic summary about the command",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 58,
          "name": "detailedDescription",
          "source": {
            "line": 1886,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "Longer version of command's summary and how to use it",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "DetailedDescriptionCommand",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 117,
          "name": "enabled",
          "source": {
            "line": 450,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece is enabled.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 59,
          "name": "fullCategory",
          "source": {
            "line": 1895,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The full category for the command. Either an array of strings that denote every (sub)folder the command is in,\nor `null` if it could not be resolved automatically.\n\nIf this is `null` with how you set up your code then you can overwrite how the `fullCategory` is resolved by\nextending this class and overwriting the assignment in the constructor.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 63,
          "name": "lexer",
          "source": {
            "line": 1917,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The lexer to be used for command parsing",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Lexer",
            "packageName": "@sapphire/lexure",
            "typeArguments": []
          }
        },
        {
          "id": 115,
          "name": "location",
          "source": {
            "line": 442,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The location metadata for the piece's file.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceLocation",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 116,
          "name": "name",
          "source": {
            "line": 446,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name of the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 118,
          "name": "options",
          "source": {
            "line": 454,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The raw options passed to this {@link Piece}",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": -1,
            "name": "O",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 9,
          "name": "parsedSubcommandMappings",
          "source": {
            "line": 48,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L48"
          },
          "comment": {
            "description": "The parsed subcommand mappings that were provided with the {@link Subcommand.Options.subcommands} option.\nThis is built at construction time and is used to determine which subcommand to run.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 165,
            "name": "SubcommandMappingArray",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 57,
          "name": "preconditions",
          "source": {
            "line": 1881,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The preconditions to be run.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PreconditionContainerArray",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 55,
          "name": "store",
          "source": {
            "line": 1871,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The {@link CommandStore} that contains this {@link Command}.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "CommandStore",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 60,
          "name": "strategy",
          "source": {
            "line": 1900,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The strategy to use for the lexer.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "IUnorderedStrategy",
            "packageName": "@sapphire/lexure",
            "typeArguments": []
          }
        },
        {
          "id": 8,
          "name": "subcommandPreconditions",
          "source": {
            "line": 42,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L42"
          },
          "comment": {
            "description": "The preconditions to be run for each specified subcommand.",
            "blockTags": [
              {
                "name": "since",
                "text": "4.1.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "PreconditionContainerArray",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 61,
          "name": "typing",
          "source": {
            "line": 1906,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "If {@link SapphireClient.typing} is true, it can be overridden for a specific command using this property, set via its options.\nOtherwise, this property will be ignored.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 70,
          "name": "category",
          "source": {
            "line": 1939,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The main category for the command, if any.\n\nThis getter retrieves the first value of {@link Command.fullCategory}, if it has at least one item, otherwise it\nreturns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 120,
          "name": "container",
          "source": {
            "line": 460,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 74,
          "name": "parentCategory",
          "source": {
            "line": 1957,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The parent category for the command.\n\nThis getter retrieves the last value of {@link Command.fullCategory}, if it has at least one item, otherwise it\nreturns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 72,
          "name": "subCategory",
          "source": {
            "line": 1948,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The sub-category for the command, if any.\n\nThis getter retrieves the second value of {@link Command.fullCategory}, if it has at least two items, otherwise\nit returns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 42,
          "name": "#findSubcommand",
          "source": {
            "line": 478,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L478"
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 43,
              "name": "#findSubcommand",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 44,
                  "name": "mappings",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 166,
                      "name": "SubcommandMappingMethod",
                      "packageName": "@sapphire/plugin-subcommands",
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 45,
                  "name": "expectedName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reflection",
                    "properties": [
                      {
                        "id": 48,
                        "name": "defaultMatch",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "readonly": true,
                        "optional": false,
                        "type": {
                          "kind": "literal",
                          "value": "false"
                        }
                      },
                      {
                        "id": 47,
                        "name": "mapping",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "readonly": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": 166,
                          "name": "SubcommandMappingMethod",
                          "packageName": "@sapphire/plugin-subcommands",
                          "typeArguments": []
                        }
                      }
                    ],
                    "signatures": null,
                    "methods": null
                  },
                  {
                    "kind": "reflection",
                    "properties": [
                      {
                        "id": 51,
                        "name": "defaultMatch",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "readonly": true,
                        "optional": false,
                        "type": {
                          "kind": "literal",
                          "value": "true"
                        }
                      },
                      {
                        "id": 50,
                        "name": "mapping",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "readonly": true,
                        "optional": false,
                        "type": {
                          "kind": "union",
                          "types": [
                            {
                              "kind": "literal",
                              "value": "null"
                            },
                            {
                              "kind": "reference",
                              "id": 166,
                              "name": "SubcommandMappingMethod",
                              "packageName": "@sapphire/plugin-subcommands",
                              "typeArguments": []
                            }
                          ]
                        }
                      }
                    ],
                    "signatures": null,
                    "methods": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 26,
          "name": "#getMessageParametersAsString",
          "source": {
            "line": 335,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L335"
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 27,
              "name": "#getMessageParametersAsString",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 28,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Args",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Partial",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Pick",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "MessageCommandDeniedPayload",
                            "packageName": "@sapphire/framework",
                            "typeArguments": []
                          },
                          {
                            "kind": "literal",
                            "value": "parameters"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 36,
          "name": "#handleChatInputInteractionRun",
          "source": {
            "line": 415,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L415"
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 37,
              "name": "#handleChatInputInteractionRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 38,
                  "name": "interaction",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommand.Interaction",
                    "packageName": "@sapphire/framework",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 39,
                  "name": "context",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 40,
                  "name": "subcommand",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 166,
                    "name": "SubcommandMappingMethod",
                    "packageName": "@sapphire/plugin-subcommands",
                    "typeArguments": []
                  }
                },
                {
                  "id": 41,
                  "name": "subcommandGroupName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 29,
          "name": "#handleMessageRun",
          "source": {
            "line": 349,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L349"
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 30,
              "name": "#handleMessageRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 31,
                  "name": "message",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 32,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Args",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 33,
                  "name": "context",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 34,
                  "name": "subcommand",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 166,
                    "name": "SubcommandMappingMethod",
                    "packageName": "@sapphire/plugin-subcommands",
                    "typeArguments": []
                  }
                },
                {
                  "id": 35,
                  "name": "subcommandGroupName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 52,
          "name": "#supportsCommandType",
          "source": {
            "line": 496,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L496"
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 53,
              "name": "#supportsCommandType",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 54,
                  "name": "commandType",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "chatInputRun"
                      },
                      {
                        "kind": "literal",
                        "value": "messageRun"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 79,
          "name": "autocompleteRun",
          "source": {
            "line": 1989,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 80,
              "name": "autocompleteRun",
              "comment": {
                "description": "Executes the autocomplete logic.\n\n:::tip\n\nYou may use this, or alternatively create an {@link InteractionHandler interaction handler} to handle autocomplete interactions.\nKeep in mind that commands take precedence over interaction handlers.\n\n:::",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 81,
                  "name": "interaction",
                  "comment": {
                    "description": "The interaction that triggered the autocomplete.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "AutocompleteInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 22,
          "name": "chatInputRun",
          "source": {
            "line": 298,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L298"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 23,
              "name": "chatInputRun",
              "comment": {
                "description": "The method that is ran when a chat input based subcommand is ran.\n\n**DO NOT** override this in your implementation of a subcommand!",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 24,
                  "name": "interaction",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommand.Interaction",
                    "packageName": "@sapphire/framework",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 25,
                  "name": "context",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 75,
          "name": "contextMenuRun",
          "source": {
            "line": 1976,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 76,
              "name": "contextMenuRun",
              "comment": {
                "description": "Executes the context menu's logic.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 77,
                  "name": "interaction",
                  "comment": {
                    "description": "The interaction that triggered the command.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ContextMenuCommandInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 78,
                  "name": "context",
                  "comment": {
                    "description": "The context menu command run context.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ContextMenuCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 64,
          "name": "messagePreParse",
          "source": {
            "line": 1930,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 65,
              "name": "messagePreParse",
              "comment": {
                "description": "The message pre-parse method. This method can be overridden by plugins to define their own argument parser.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 66,
                  "name": "message",
                  "comment": {
                    "description": "The message that triggered the command.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 67,
                  "name": "parameters",
                  "comment": {
                    "description": "The raw parameters as a single string.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 68,
                  "name": "context",
                  "comment": {
                    "description": "The command-context used in this execution.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Awaitable",
                "packageName": "@sapphire/utilities",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "PreParseReturn",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 17,
          "name": "messageRun",
          "source": {
            "line": 201,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L201"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 18,
              "name": "messageRun",
              "comment": {
                "description": "The method that is ran when a message-based subcommand is ran.\n\n**DO NOT** override this in your implementation of a subcommand!",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 19,
                  "name": "message",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 20,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "PreParseReturn",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 21,
                  "name": "context",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 11,
          "name": "onLoad",
          "source": {
            "line": 169,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L169"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 12,
              "name": "onLoad",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 121,
          "name": "onUnload",
          "source": {
            "line": 470,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 122,
              "name": "onUnload",
              "comment": {
                "description": "Per-piece listener that is called when the piece is unloaded from the store.\nUseful to set-up clean-up tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 93,
          "name": "parseConstructorPreConditions",
          "source": {
            "line": 2024,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 94,
              "name": "parseConstructorPreConditions",
              "comment": {
                "description": "Parses the command's options and processes them, calling {@link Command#parseConstructorPreConditionsRunIn},\n{@link Command#parseConstructorPreConditionsNsfw},\n{@link Command#parseConstructorPreConditionsRequiredClientPermissions}, and\n{@link Command#parseConstructorPreConditionsCooldown}.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "2.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 95,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 108,
          "name": "parseConstructorPreConditionsCooldown",
          "source": {
            "line": 2053,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 109,
              "name": "parseConstructorPreConditionsCooldown",
              "comment": {
                "description": "Appends the `Cooldown` precondition when {@link Command.Options.cooldownLimit} and\n{@link Command.Options.cooldownDelay} are both non-zero.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 110,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 96,
          "name": "parseConstructorPreConditionsNsfw",
          "source": {
            "line": 2029,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 97,
              "name": "parseConstructorPreConditionsNsfw",
              "comment": {
                "description": "Appends the `NSFW` precondition if {@link Command.Options.nsfw} is set to true.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 98,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 102,
          "name": "parseConstructorPreConditionsRequiredClientPermissions",
          "source": {
            "line": 2041,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 103,
              "name": "parseConstructorPreConditionsRequiredClientPermissions",
              "comment": {
                "description": "Appends the `ClientPermissions` precondition when {@link Command.Options.requiredClientPermissions} resolves to a\nnon-zero bitfield.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 104,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 105,
          "name": "parseConstructorPreConditionsRequiredUserPermissions",
          "source": {
            "line": 2047,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 106,
              "name": "parseConstructorPreConditionsRequiredUserPermissions",
              "comment": {
                "description": "Appends the `UserPermissions` precondition when {@link Command.Options.requiredUserPermissions} resolves to a\nnon-zero bitfield.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 107,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 99,
          "name": "parseConstructorPreConditionsRunIn",
          "source": {
            "line": 2035,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 100,
              "name": "parseConstructorPreConditionsRunIn",
              "comment": {
                "description": "Appends the `RunIn` precondition based on the values passed, defaulting to `null`, which doesn't add a\nprecondition.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 101,
                  "name": "options",
                  "comment": {
                    "description": "The command options given from the constructor.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 84,
          "name": "registerApplicationCommands",
          "source": {
            "line": 1998,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 85,
              "name": "registerApplicationCommands",
              "comment": {
                "description": "Registers the application commands that should be handled by this command.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 86,
                  "name": "registry",
                  "comment": {
                    "description": "This command's registry",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ApplicationCommandRegistry",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Awaitable",
                "packageName": "@sapphire/utilities",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 91,
          "name": "reload",
          "source": {
            "line": 2015,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 92,
              "name": "reload",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 111,
          "name": "resolveConstructorPreConditionsRunType",
          "source": {
            "line": 2059,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 112,
              "name": "resolveConstructorPreConditionsRunType",
              "comment": {
                "description": "Resolves the {@link Command.Options.runIn} option into a {@link Command.RunInTypes} array.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The resolved types, or `null` if no types were resolved."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 113,
                  "name": "types",
                  "comment": {
                    "description": "The types to resolve.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ChannelType",
                        "packageName": "discord-api-types",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunType",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunTypeEnum",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      },
                      {
                        "kind": "typeOperator",
                        "operator": "readonly",
                        "type": {
                          "kind": "array",
                          "type": {
                            "kind": "union",
                            "types": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "ChannelType",
                                "packageName": "discord-api-types",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CommandOptionsRunType",
                                "packageName": "@sapphire/framework",
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "CommandOptionsRunTypeEnum",
                                "packageName": "@sapphire/framework",
                                "typeArguments": []
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": null,
                        "name": "ChannelType",
                        "packageName": "discord-api-types",
                        "typeArguments": []
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 89,
          "name": "supportsAutocompleteInteractions",
          "source": {
            "line": 2014,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 90,
              "name": "supportsAutocompleteInteractions",
              "comment": {
                "description": "Type-guard that ensures the command supports handling autocomplete interactions by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "AutocompleteCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 15,
          "name": "supportsChatInputCommands",
          "source": {
            "line": 192,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L192"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 16,
              "name": "supportsChatInputCommands",
              "comment": {
                "description": "Whether this command has chat input subcommands or not",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if this command has chat input subcommands, otherwise `false`"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "ChatInputCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 87,
          "name": "supportsContextMenuCommands",
          "source": {
            "line": 2010,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 88,
              "name": "supportsContextMenuCommands",
              "comment": {
                "description": "Type-guard that ensures the command supports context menu commands by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "ContextMenuCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 13,
          "name": "supportsMessageCommands",
          "source": {
            "line": 184,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L184"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 14,
              "name": "supportsMessageCommands",
              "comment": {
                "description": "Whether this command has message-based subcommands or not",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if this command has message-based subcommands, otherwise `false`"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 82,
          "name": "toJSON",
          "source": {
            "line": 1993,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 83,
              "name": "toJSON",
              "comment": {
                "description": "Defines the JSON.stringify behavior of the command.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CommandJSON",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 123,
          "name": "unload",
          "source": {
            "line": 474,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 124,
              "name": "unload",
              "comment": {
                "description": "Unloads and disables the piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "enums": [
    {
      "id": 205,
      "name": "SubcommandPluginIdentifiers",
      "source": {
        "line": 29,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L29"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 207,
          "name": "ChatInputSubcommandNoMatch",
          "source": {
            "line": 31,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L31"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 205,
          "value": "chatInputSubcommandNoMatch"
        },
        {
          "id": 206,
          "name": "MessageSubcommandNoMatch",
          "source": {
            "line": 30,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L30"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 205,
          "value": "messageSubcommandNoMatch"
        },
        {
          "id": 208,
          "name": "SubcommandNotFound",
          "source": {
            "line": 32,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L32"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 205,
          "value": "subcommandNotFound"
        }
      ]
    }
  ],
  "functions": [],
  "interfaces": [
    {
      "id": 248,
      "name": "ChatInputSubcommandAcceptedPayload",
      "source": {
        "line": 69,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L69"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 252,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 248,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 249,
          "name": "context",
          "source": {
            "line": 70,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L70"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 248,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 251,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 248,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 250,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 71,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L71"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 248,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 253,
      "name": "ChatInputSubcommandDeniedPayload",
      "source": {
        "line": 74,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L74"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 257,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 253,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 254,
          "name": "context",
          "source": {
            "line": 70,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L70"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 253,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 256,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 253,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 255,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 71,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L71"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 253,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 263,
      "name": "ChatInputSubcommandErrorPayload",
      "source": {
        "line": 78,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L78"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 267,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 263,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 264,
          "name": "context",
          "source": {
            "line": 70,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L70"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 263,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 266,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 263,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 265,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 71,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L71"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 263,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 258,
      "name": "ChatInputSubcommandRunPayload",
      "source": {
        "line": 76,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L76"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 262,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 258,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 259,
          "name": "context",
          "source": {
            "line": 70,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L70"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 258,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 261,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 258,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 260,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 71,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L71"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 258,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 268,
      "name": "ChatInputSubcommandSuccessPayload",
      "source": {
        "line": 80,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L80"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 273,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 268,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 270,
          "name": "context",
          "source": {
            "line": 70,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L70"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 268,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 272,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 268,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 271,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 71,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L71"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 268,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 269,
          "name": "result",
          "source": {
            "line": 81,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L81"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 268,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 245,
      "name": "IChatInputSubcommandPayload",
      "source": {
        "line": 64,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L64"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 247,
          "name": "command",
          "source": {
            "line": 66,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 245,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 246,
          "name": "interaction",
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 245,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 215,
      "name": "IMessageSubcommandPayload",
      "source": {
        "line": 40,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L40"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 217,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 215,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 216,
          "name": "message",
          "source": {
            "line": 41,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L41"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 215,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 224,
      "name": "MessageSubcommandAcceptedPayload",
      "source": {
        "line": 51,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L51"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 228,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 224,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 225,
          "name": "context",
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 224,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 226,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 53,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L53"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 224,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 227,
          "name": "message",
          "source": {
            "line": 41,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L41"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 224,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 218,
      "name": "MessageSubcommandDeniedPayload",
      "source": {
        "line": 45,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L45"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 223,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 218,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 221,
          "name": "context",
          "source": {
            "line": 3390,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 218,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 222,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 53,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L53"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 218,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 220,
          "name": "message",
          "source": {
            "line": 3383,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 218,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 219,
          "name": "parameters",
          "source": {
            "line": 48,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L48"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 218,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 234,
      "name": "MessageSubcommandErrorPayload",
      "source": {
        "line": 58,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L58"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 238,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 234,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 235,
          "name": "context",
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 234,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 236,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 53,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L53"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 234,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 237,
          "name": "message",
          "source": {
            "line": 41,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L41"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 234,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 209,
      "name": "MessageSubcommandNoMatchContext",
      "source": {
        "line": 35,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L35"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 213,
          "name": "commandName",
          "source": {
            "line": 1825,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The alias used to run this command.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 209,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 214,
          "name": "commandPrefix",
          "source": {
            "line": 1830,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The matched prefix, this will always be the same as {@link MessageCommand.RunContext.prefix} if it was a string, otherwise it is\nthe result of doing `prefix.exec(content)[0]`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 209,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 211,
          "name": "possibleSubcommandGroupOrName",
          "source": {
            "line": 37,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L37"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 209,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 210,
          "name": "possibleSubcommandName",
          "source": {
            "line": 36,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L36"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 209,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 212,
          "name": "prefix",
          "source": {
            "line": 1821,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The prefix used to run this command.\n\nThis is a string for the mention and default prefix, and a RegExp for the `regexPrefix`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 209,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "RegExp",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 229,
      "name": "MessageSubcommandRunPayload",
      "source": {
        "line": 56,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L56"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 233,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 229,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 230,
          "name": "context",
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 229,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 231,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 53,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L53"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 229,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 232,
          "name": "message",
          "source": {
            "line": 41,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L41"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 229,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 239,
      "name": "MessageSubcommandSuccessPayload",
      "source": {
        "line": 60,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L60"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 244,
          "name": "command",
          "source": {
            "line": 42,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L42"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 239,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 139,
                "name": "SubcommandOptions",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 241,
          "name": "context",
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 239,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 242,
          "name": "matchedSubcommandMapping",
          "source": {
            "line": 53,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L53"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 239,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 243,
          "name": "message",
          "source": {
            "line": 41,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L41"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 239,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 240,
          "name": "result",
          "source": {
            "line": 61,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L61"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 239,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 183,
      "name": "SubcommandMappingGroup",
      "source": {
        "line": 82,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L82"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 185,
          "name": "entries",
          "source": {
            "line": 90,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L90"
          },
          "comment": {
            "description": "The {@link SubcommandMappingMethod}s that are contained within this subcommand group.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 183,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 166,
              "name": "SubcommandMappingMethod",
              "packageName": "@sapphire/plugin-subcommands",
              "typeArguments": []
            }
          }
        },
        {
          "id": 186,
          "name": "name",
          "source": {
            "line": 14,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L14"
          },
          "comment": {
            "description": "The name of this subcommand, or subcommand group",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 183,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 184,
          "name": "type",
          "source": {
            "line": 86,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L86"
          },
          "comment": {
            "description": "This subcommand mapping describes a subcommand group and can therefore only ever be `'group'`",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 183,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "literal",
            "value": "group"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 166,
      "name": "SubcommandMappingMethod",
      "source": {
        "line": 25,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L25"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "Describes how a subcommand method maps to the actual implementation of that subcommand.",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 175,
          "name": "chatInputRun",
          "source": {
            "line": 79,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L79"
          },
          "comment": {
            "description": "The class method to call when invoking this subcommand through a **chat input command**,\nor a callback implementation of the subcommand.\n\nNote that when providing a string you have to first define the method that will be called within your function\nbefore this will allow any values. This is to ensure that the property is strictly typed to the context of the\nclass.",
            "blockTags": [
              {
                "name": "example",
                "text": "```typescript\nchatInputRun: 'runModeratorConfig'\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nchatInputRun(interaction: Subcommand.Interaction) {\n   return interaction.reply(`<@${interaction.user.id}> has been granted moderator`);\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reflection",
                "properties": null,
                "signatures": [
                  {
                    "id": 177,
                    "name": "__type",
                    "comment": {
                      "description": null,
                      "blockTags": [],
                      "modifierTags": []
                    },
                    "typeParameters": [],
                    "parameters": [
                      {
                        "id": 178,
                        "name": "interaction",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "rest": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "ChatInputCommandInteraction",
                          "packageName": "discord.js",
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "CacheType",
                              "packageName": "discord.js",
                              "typeArguments": []
                            }
                          ]
                        }
                      },
                      {
                        "id": 179,
                        "name": "context",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "rest": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "ChatInputCommandContext",
                          "packageName": "@sapphire/framework",
                          "typeArguments": []
                        }
                      }
                    ],
                    "returnType": {
                      "kind": "intrinsic",
                      "type": "unknown"
                    }
                  }
                ],
                "methods": null
              }
            ]
          }
        },
        {
          "id": 168,
          "name": "default",
          "source": {
            "line": 37,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L37"
          },
          "comment": {
            "description": "Whether this is the default subcommand when none is provided.\n\nNote that this is effectively only used for Message based subcommand\n(those implementing {@link SubcommandMappingMethod.messageRun})\nbecause the subcommand is always provided for chat input commands.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 169,
          "name": "messageRun",
          "source": {
            "line": 58,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L58"
          },
          "comment": {
            "description": "The class method to call when invoking this subcommand through a **message command**,\nor a callback implementation of the subcommand.\n\nNote that when providing a string you have to first define the method that will be called within your function\nbefore this will allow any values. This is to ensure that the property is strictly typed to the context of the\nclass.",
            "blockTags": [
              {
                "name": "example",
                "text": "```typescript\nmessageRun: 'runAdminConfig'\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nmessageRun(message: Message) {\n   return message.reply(`<@${message.author.id}> has been granted admin`);\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reflection",
                "properties": null,
                "signatures": [
                  {
                    "id": 171,
                    "name": "__type",
                    "comment": {
                      "description": null,
                      "blockTags": [],
                      "modifierTags": []
                    },
                    "typeParameters": [],
                    "parameters": [
                      {
                        "id": 172,
                        "name": "message",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "rest": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "Message",
                          "packageName": "discord.js",
                          "typeArguments": [
                            {
                              "kind": "intrinsic",
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      {
                        "id": 173,
                        "name": "args",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "rest": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "Args",
                          "packageName": "@sapphire/framework",
                          "typeArguments": []
                        }
                      },
                      {
                        "id": 174,
                        "name": "context",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "rest": false,
                        "optional": false,
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "MessageCommandContext",
                          "packageName": "@sapphire/framework",
                          "typeArguments": []
                        }
                      }
                    ],
                    "returnType": {
                      "kind": "intrinsic",
                      "type": "unknown"
                    }
                  }
                ],
                "methods": null
              }
            ]
          }
        },
        {
          "id": 180,
          "name": "name",
          "source": {
            "line": 14,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L14"
          },
          "comment": {
            "description": "The name of this subcommand, or subcommand group",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 182,
          "name": "preconditions",
          "source": {
            "line": 1746,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The {@link Precondition}s to be run, accepts an array of their names.",
            "blockTags": [
              {
                "name": "seealso",
                "text": "{@link PreconditionContainerArray}"
              },
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "PreconditionEntryResolvable",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            }
          }
        },
        {
          "id": 181,
          "name": "runIn",
          "source": {
            "line": 1807,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The channels the command should run in. If set to `null`, no precondition entry will be added. Some optimizations are applied when given an array to reduce the amount of preconditions run (e.g. `'GUILD_TEXT'` and `'GUILD_NEWS'` becomes `'GUILD_ANY'`, and if both `'DM'` and `'GUILD_ANY'` are defined, then no precondition entry is added as it runs in all channels).",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nnull\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ChannelType",
                "packageName": "discord-api-types",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunType",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunTypeEnum",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ChannelType",
                        "packageName": "discord-api-types",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunType",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunTypeEnum",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 167,
          "name": "type",
          "source": {
            "line": 29,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L29"
          },
          "comment": {
            "description": "This subcommand mapping describes a subcommand method and can therefore only ever be `'method'`",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 166,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "literal",
            "value": "method"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 139,
      "name": "SubcommandOptions",
      "source": {
        "line": 506,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L506"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 157,
          "name": "aliases",
          "source": {
            "line": 671,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The aliases for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": true,
          "optional": true,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 150,
          "name": "cooldownDelay",
          "source": {
            "line": 1776,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The time in milliseconds for the cooldown entries to reset, if set to a non-zero value alongside {@link Command.Options.cooldownLimit}, the `Cooldown` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n0\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 152,
          "name": "cooldownFilteredUsers",
          "source": {
            "line": 1789,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The users that are exempt from the Cooldown precondition.\nUse this to filter out someone like a bot owner",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nundefined\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 149,
          "name": "cooldownLimit",
          "source": {
            "line": 1770,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The amount of entries the cooldown can have before filling up, if set to a non-zero value alongside {@link Command.Options.cooldownDelay}, the `Cooldown` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n1\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 151,
          "name": "cooldownScope",
          "source": {
            "line": 1782,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The scope of the cooldown entries.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nBucketScope.User\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "BucketScope",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 143,
          "name": "description",
          "source": {
            "line": 1719,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The description for the command.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 144,
          "name": "detailedDescription",
          "source": {
            "line": 1725,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The detailed description for the command.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "DetailedDescriptionCommand",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 159,
          "name": "enabled",
          "source": {
            "line": 420,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece should be enabled. If set to false, the piece will be unloaded.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": true,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 160,
          "name": "flags",
          "source": {
            "line": 1590,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The accepted flags. Flags are key-only identifiers that can be placed anywhere in the command. Two different types are accepted:\n* An array of strings, e.g. [`silent`].\n* A boolean defining whether the strategy should accept all keys (`true`) or none at all (`false`).",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        {
          "id": 145,
          "name": "fullCategory",
          "source": {
            "line": 1739,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The full category path for the command",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n'An array of folder names that lead back to the folder that is registered for in the commands store'\n```"
              },
              {
                "name": "example",
                "text": "```typescript\n// Given a file named `ping.js` at the path of `commands/General/ping.js`\n['General']\n\n// Given a file named `info.js` at the path of `commands/General/About/ping.js`\n['General', 'About']\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 141,
          "name": "generateDashLessAliases",
          "source": {
            "line": 518,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L518"
          },
          "comment": {
            "description": "Whether to add aliases for subcommands with dashes in them\n\nWhen this option is enabled *and* the subcommand implements `messageRun`, dashless aliases will be added.\n\nFor subcommands groups both the group itself and all subcommands within the group will have dashless aliases added.",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nfalse\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 142,
          "name": "generateUnderscoreLessAliases",
          "source": {
            "line": 1713,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "Whether to add aliases for commands with underscores in them",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nfalse\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 158,
          "name": "name",
          "source": {
            "line": 415,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": true,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 148,
          "name": "nsfw",
          "source": {
            "line": 1764,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "Sets whether the command should be treated as NSFW. If set to true, the `NSFW` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nfalse\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 161,
          "name": "options",
          "source": {
            "line": 1597,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The accepted options. Options are key-value identifiers that can be placed anywhere in the command. Two different types are accepted:\n* An array of strings, e.g. [`silent`].\n* A boolean defining whether the strategy should accept all keys (`true`) or none at all (`false`).",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        {
          "id": 146,
          "name": "preconditions",
          "source": {
            "line": 1746,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The {@link Precondition}s to be run, accepts an array of their names.",
            "blockTags": [
              {
                "name": "seealso",
                "text": "{@link PreconditionContainerArray}"
              },
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "PreconditionEntryResolvable",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            }
          }
        },
        {
          "id": 162,
          "name": "prefixes",
          "source": {
            "line": 1602,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The prefixes for both flags and options.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n['--', '-', '‚Äî']\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 147,
          "name": "quotes",
          "source": {
            "line": 1758,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The quotes accepted by this command, pass `[]` to disable them.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n[\n  ['\"', '\"'], // Double quotes\n  ['‚Äú', '‚Äù'], // Fancy quotes (on iOS)\n  ['„Äå', '„Äç'] // Corner brackets (CJK)\n  ['¬´', '¬ª'] // French quotes (guillemets)\n]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "tuple",
              "types": [
                {
                  "kind": "intrinsic",
                  "type": "string"
                },
                {
                  "kind": "intrinsic",
                  "type": "string"
                }
              ]
            }
          }
        },
        {
          "id": 153,
          "name": "requiredClientPermissions",
          "source": {
            "line": 1795,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The required permissions for the client.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n0\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PermissionResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 154,
          "name": "requiredUserPermissions",
          "source": {
            "line": 1801,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The required permissions for the user.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n0\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PermissionResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 155,
          "name": "runIn",
          "source": {
            "line": 1807,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The channels the command should run in. If set to `null`, no precondition entry will be added. Some optimizations are applied when given an array to reduce the amount of preconditions run (e.g. `'GUILD_TEXT'` and `'GUILD_NEWS'` becomes `'GUILD_ANY'`, and if both `'DM'` and `'GUILD_ANY'` are defined, then no precondition entry is added as it runs in all channels).",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nnull\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "ChannelType",
                "packageName": "discord-api-types",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunType",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunTypeEnum",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "ChannelType",
                        "packageName": "discord-api-types",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunType",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunTypeEnum",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 163,
          "name": "separators",
          "source": {
            "line": 1607,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "The flag separators.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n['=', ':']\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 140,
          "name": "subcommands",
          "source": {
            "line": 507,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L507"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": 165,
            "name": "SubcommandMappingArray",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 156,
          "name": "typing",
          "source": {
            "line": 1813,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "comment": {
            "description": "If {@link SapphireClient.typing} is true, this option will override it.\nOtherwise, this option has no effect - you may call {@link Channel#sendTyping}` in the run method if you want specific commands to display the typing status.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 139,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [
    {
      "id": 127,
      "name": "Subcommand",
      "source": {
        "line": 37,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L37"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 136,
          "name": "AutocompleteInteraction",
          "source": {
            "line": 528,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L528"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 137,
              "name": "Cached",
              "constraint": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.AutocompleteInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": -1,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 132,
          "name": "ChatInputCommandInteraction",
          "source": {
            "line": 526,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L526"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 133,
              "name": "Cached",
              "constraint": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.ChatInputCommandInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": -1,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 130,
          "name": "Context",
          "source": {
            "line": 524,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L524"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.Context",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 134,
          "name": "ContextMenuCommandInteraction",
          "source": {
            "line": 527,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L527"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 135,
              "name": "Cached",
              "constraint": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.ContextMenuCommandInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": -1,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 129,
          "name": "JSON",
          "source": {
            "line": 523,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L523"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.JSON",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 128,
          "name": "Options",
          "source": {
            "line": 522,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L522"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 139,
            "name": "SubcommandOptions",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        },
        {
          "id": 138,
          "name": "Registry",
          "source": {
            "line": 529,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L529"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.Registry",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 131,
          "name": "RunInTypes",
          "source": {
            "line": 525,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/Subcommand.ts#L525"
          },
          "namespaceParentId": 127,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.RunInTypes",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        }
      ],
      "variables": []
    }
  ],
  "typeAliases": [
    {
      "id": 188,
      "name": "ChatInputCommandSubcommandMappingMethod",
      "source": {
        "line": 96,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L96"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 166,
                "name": "SubcommandMappingMethod",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "chatInputRun"
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 166,
                    "name": "SubcommandMappingMethod",
                    "packageName": "@sapphire/plugin-subcommands",
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "chatInputRun"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 187,
      "name": "MessageSubcommandMappingMethod",
      "source": {
        "line": 94,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L94"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 166,
                "name": "SubcommandMappingMethod",
                "packageName": "@sapphire/plugin-subcommands",
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "messageRun"
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 166,
                    "name": "SubcommandMappingMethod",
                    "packageName": "@sapphire/plugin-subcommands",
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "messageRun"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 164,
      "name": "SubcommandMapping",
      "source": {
        "line": 3,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L3"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 166,
            "name": "SubcommandMappingMethod",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 183,
            "name": "SubcommandMappingGroup",
            "packageName": "@sapphire/plugin-subcommands",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 165,
      "name": "SubcommandMappingArray",
      "source": {
        "line": 5,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/SubcommandMappings.ts#L5"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "array",
        "type": {
          "kind": "reference",
          "id": 164,
          "name": "SubcommandMapping",
          "packageName": "@sapphire/plugin-subcommands",
          "typeArguments": []
        }
      }
    }
  ],
  "variables": [
    {
      "id": 189,
      "name": "SubcommandPluginEvents",
      "source": {
        "line": 6,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/b1e4449/packages/subcommands/src/lib/types/Events.ts#L6"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "properties": [
          {
            "id": 191,
            "name": "ChatInputSubCommandDenied",
            "comment": {
              "description": null,
              "blockTags": [
                {
                  "name": "deprecated",
                  "text": "use {@link SubcommandPluginEvents.ChatInputSubcommandDenied}"
                }
              ],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubCommandDenied"
            }
          },
          {
            "id": 192,
            "name": "ChatInputSubcommandDenied",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubcommandDenied"
            }
          },
          {
            "id": 196,
            "name": "ChatInputSubcommandError",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubcommandError"
            }
          },
          {
            "id": 195,
            "name": "ChatInputSubcommandNotFound",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubcommandNotFound"
            }
          },
          {
            "id": 193,
            "name": "ChatInputSubcommandRun",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubcommandRun"
            }
          },
          {
            "id": 194,
            "name": "ChatInputSubcommandSuccess",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "chatInputSubcommandSuccess"
            }
          },
          {
            "id": 197,
            "name": "MessageSubCommandDenied",
            "comment": {
              "description": null,
              "blockTags": [
                {
                  "name": "deprecated",
                  "text": "use {@link SubcommandPluginEvents.MessageSubcommandDenied}"
                }
              ],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubCommandDenied"
            }
          },
          {
            "id": 198,
            "name": "MessageSubcommandDenied",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubcommandDenied"
            }
          },
          {
            "id": 202,
            "name": "MessageSubcommandError",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubcommandError"
            }
          },
          {
            "id": 201,
            "name": "MessageSubcommandNotFound",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubcommandNotFound"
            }
          },
          {
            "id": 199,
            "name": "MessageSubcommandRun",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubcommandRun"
            }
          },
          {
            "id": 200,
            "name": "MessageSubcommandSuccess",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "messageSubcommandSuccess"
            }
          },
          {
            "id": 204,
            "name": "SubcommandMappingIsMissingChatInputCommandHandler",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "subcommandMappingIsMissingChatInputCommandHandler"
            }
          },
          {
            "id": 203,
            "name": "SubcommandMappingIsMissingMessageCommandHandler",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "readonly": false,
            "optional": false,
            "type": {
              "kind": "literal",
              "value": "subcommandMappingIsMissingMessageCommandHandler"
            }
          }
        ],
        "signatures": null,
        "methods": null
      },
      "value": "..."
    }
  ]
}