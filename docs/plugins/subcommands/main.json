{
  "typeDocJsonParserVersion": "3.1.0",
  "id": 0,
  "name": "@sapphire/plugin-subcommands",
  "version": "3.2.1",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://cdn.skyra.pw/gh-assets/sapphire-banner.png)\n\n# @sapphire/plugin-subcommands\n\n**Plugin for <a href=\"https://github.com/sapphiredev/framework\">@sapphire/framework</a> so your commands can have subcommands.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/plugins)](https://github.com/sapphiredev/plugins/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/plugins/branch/main/graph/badge.svg?token=QWL8FB16BR)](https://codecov.io/gh/sapphiredev/plugins)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/plugin-subcommands?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/plugin-subcommands)\n[![npm](https://img.shields.io/npm/v/@sapphire/plugin-subcommands?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/plugin-subcommands)\n\n</div>\n\n## Description\n\nSubcommands are a way to split 1 command into multiple. This can in particular be very useful for configuration commands with subcommands such as `set`, `reset` and `remove`.\n\n## Features\n\n-   Fully ready for TypeScript!\n-   Includes ESM ready entrypoint\n-   Type generics for easy extension in TypeScript\n-   Input/Output mapping\n\n## Installation\n\n`@sapphire/plugin-subcommands` depends on the following packages. Be sure to install these along with this package!\n\n-   [`@sapphire/framework`](https://www.npmjs.com/package/@sapphire/framework)\n-   [`@sapphire/utilities`](https://www.npmjs.com/package/@sapphire/utilities)\n-   [`discord.js`](https://www.npmjs.com/package/discord.js)\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/plugin-subcommands @sapphire/framework @sapphire/utilities discord.js\n```\n\n---\n\n## Usage\n\nStart by importing the registration file in your project to use the plugins error loggers:\n\n**JavaScript**\n\n```js\nrequire('@sapphire/plugin-subcommands/register');\n```\n\n**TypeScript**\n\n```typescript\nimport '@sapphire/plugin-subcommands/register';\n```\n\nThen, you can create new subcommands by extending the Subcommand class.\n_With TypeScript:_\n\n```typescript\nimport { Subcommand } from '@sapphire/plugin-subcommands';\nimport { ApplyOptions } from '@sapphire/decorators';\nimport type { Args } from '@sapphire/framework';\nimport type { Message, CommandInteraction } from 'discord.js';\n\n// Using ApplyOptions decorator makes it easy to configure\n@ApplyOptions<Subcommand.Options>({\n\tsubcommands: [\n\t\t{\n\t\t\tname: 'add',\n\t\t\tmessageRun: 'messageAdd',\n\t\t\tchatInputRun: 'chatInputAdd'\n\t\t},\n\t\t{\n\t\t\tname: 'remove',\n\t\t\tmessageRun: 'messageRemove',\n\t\t\tchatInputRun: 'chatInputRemove'\n\t\t},\n\t\t{\n\t\t\tname: 'list',\n\t\t\tmessageRun: 'messageList',\n\t\t\tchatInputRun: 'chatInputList'\n\t\t}\n\t]\n})\n// Extend `Subcommand` instead of `Command`\nexport class UserCommand extends Subcommand {\n\tpublic async messageAdd(message: Message, args: Args) {}\n\n\tpublic async messageRemove(message: Message, args: Args) {}\n\n\tpublic async messageList(message: Message, args: Args) {}\n\n\tpublic async chatInputAdd(interaction: Subcommand.ChatInputInteraction) {}\n\n\tpublic async chatInputRemove(interaction: Subcommand.ChatInputInteraction) {}\n\n\tpublic async chatInputList(interaction: Subcommand.ChatInputInteraction) {}\n}\n```\n\n_With JavaScript:_\n\n```javascript\nconst { Subcommand } = require('@sapphire/plugin-subcommands');\n\n// Extend `Subcommand` instead of `Command`\nmodule.exports = class UserCommand extends Subcommand {\n\tconstructor(context, options) {\n\t\tsuper(context, {\n\t\t\t...options,\n\t\t\tsubcommands: [\n\t\t\t\t{\n\t\t\t\t\tname: 'add',\n\t\t\t\t\tmessageRun: 'messageAdd',\n\t\t\t\t\tchatInputRun: 'chatInputAdd'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'remove',\n\t\t\t\t\tmessageRun: 'messageRemove',\n\t\t\t\t\tchatInputRun: 'chatInputRemove'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'list',\n\t\t\t\t\tmessageRun: 'messageList',\n\t\t\t\t\tchatInputRun: 'chatInputList'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tasync messageAdd(message, args) {}\n\n\tasync messageRemove(message, args) {}\n\n\tasync messageList(message, args) {}\n\n\tasync chatInputAdd(interaction) {}\n\n\tasync chatInputRemove(interaction) {}\n\n\tasync chatInputList(interaction) {}\n};\n```\n\nFor more documentation please refer to [guide](https://www.sapphirejs.dev/docs/Guide/plugins/Subcommands/getting-started)\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://favware.tech/\"><img src=\"https://avatars3.githubusercontent.com/u/4019718?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeroen Claassens</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=favna\" title=\"Code\">💻</a> <a href=\"#infra-favna\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#projectManagement-favna\" title=\"Project Management\">📆</a></td>\n    <td align=\"center\"><a href=\"https://Quantumlyy.com\"><img src=\"https://avatars1.githubusercontent.com/u/7919610?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nejc Drobnic</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Quantumlyy\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/plugins/commits?author=Quantumlyy\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kyranet\"><img src=\"https://avatars0.githubusercontent.com/u/24852502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Antonio Román</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=kyranet\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/vladfrangu\"><img src=\"https://avatars3.githubusercontent.com/u/17960496?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vlad Frangu</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/pulls?q=is%3Apr+reviewed-by%3Avladfrangu\" title=\"Reviewed Pull Requests\">👀</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/depfu\"><img src=\"https://avatars3.githubusercontent.com/in/715?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>depfu[bot]</b></sub></a><br /><a href=\"#maintenance-depfu[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/dependabot\"><img src=\"https://avatars0.githubusercontent.com/in/29110?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>dependabot[bot]</b></sub></a><br /><a href=\"#maintenance-dependabot[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/allcontributors\"><img src=\"https://avatars0.githubusercontent.com/in/23186?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>allcontributors[bot]</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=allcontributors[bot]\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Nytelife26\"><img src=\"https://avatars1.githubusercontent.com/u/22531310?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tyler J Russell</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Nytelife26\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/plugins/commits?author=Nytelife26\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Stitch07\"><img src=\"https://avatars.githubusercontent.com/u/29275227?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stitch07</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Stitch07\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/plugins/issues?q=author%3AStitch07\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/PlatinBae\"><img src=\"https://avatars.githubusercontent.com/u/50950966?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>PlatinBae</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=PlatinBae\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://kaname.netlify.app\"><img src=\"https://avatars.githubusercontent.com/u/56084970?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kaname</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=kaname-png\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/plugins/commits?author=kaname-png\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/noftaly\"><img src=\"https://avatars.githubusercontent.com/u/34779161?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Elliot</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=noftaly\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Lioness100\"><img src=\"https://avatars.githubusercontent.com/u/65814829?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lioness100</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Lioness100\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/plugins/commits?author=Lioness100\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/UndiedGamer\"><img src=\"https://avatars.githubusercontent.com/u/84702365?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>UndiedGamer</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=UndiedGamer\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/feralheart\"><img src=\"https://avatars.githubusercontent.com/u/3487559?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Feralheart</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=feralheart\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://jurien.dev/\"><img src=\"https://avatars.githubusercontent.com/u/5418114?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jurien Hamaker</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=jurienhamaker\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/renovate\"><img src=\"https://avatars.githubusercontent.com/in/2740?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>renovate[bot]</b></sub></a><br /><a href=\"#maintenance-renovate[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://renovate.whitesourcesoftware.com/\"><img src=\"https://avatars.githubusercontent.com/u/25180681?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>WhiteSource Renovate</b></sub></a><br /><a href=\"#maintenance-renovate-bot\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://c43721.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/55610086?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>c43721</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=c43721\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://megatank58.me/\"><img src=\"https://avatars.githubusercontent.com/u/51410502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>megatank58</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=megatank58\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://fc5570.me/\"><img src=\"https://avatars.githubusercontent.com/u/68158483?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>FC</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=FC5570\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Suyashtnt\"><img src=\"https://avatars.githubusercontent.com/u/45307955?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Just a Badly Drawn TABS Dude</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Suyashtnt\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://newtt.me/\"><img src=\"https://avatars.githubusercontent.com/u/19301186?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>newt :D</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=newtykins\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://linktr.ee/mzato0001\"><img src=\"https://avatars.githubusercontent.com/u/62367547?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mzato</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=Mzato0001\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/MajesticString\"><img src=\"https://avatars.githubusercontent.com/u/66224939?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Harry Allen</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=MajesticString\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jczstudios\"><img src=\"https://avatars.githubusercontent.com/u/17862924?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Julian</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=jczstudios\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/KrishAgarwal2811\"><img src=\"https://avatars.githubusercontent.com/u/68506145?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Krish</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=KrishAgarwal2811\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/imranbarbhuiya\"><img src=\"https://avatars.githubusercontent.com/u/74945038?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Parbez</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=imranbarbhuiya\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/ricardooow\"><img src=\"https://avatars.githubusercontent.com/u/28981399?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>ricardooow</b></sub></a><br /><a href=\"https://github.com/sapphiredev/plugins/commits?author=ricardooow\" title=\"Code\">💻</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n",
  "classes": [
    {
      "id": 1,
      "name": "Subcommand",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 17,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L17"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Command",
        "packageName": "@sapphire/framework",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 4,
            "name": "PreParseReturn",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 5,
            "name": "O",
            "packageName": null,
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "construct": {
        "id": 2,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 21,
          "file": "Subcommand.ts",
          "path": "packages/subcommands/src/lib",
          "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L21"
        },
        "parameters": [
          {
            "id": 6,
            "name": "context",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceContext",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          },
          {
            "id": 7,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 5,
              "name": "O",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 101,
          "name": "aliases",
          "comment": {
            "description": "The aliases for the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 687,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 48,
          "name": "applicationCommandRegistry",
          "comment": {
            "description": "The application command registry associated with this command.",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2006,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ApplicationCommandRegistry",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 9,
          "name": "caseInsensitiveSubcommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 19,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L19"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 42,
          "name": "description",
          "comment": {
            "description": "A basic summary about the command",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1971,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 44,
          "name": "detailedDescription",
          "comment": {
            "description": "Longer version of command's summary and how to use it",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1981,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "DetailedDescriptionCommand",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 105,
          "name": "enabled",
          "comment": {
            "description": "Whether or not the piece is enabled.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 450,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 45,
          "name": "fullCategory",
          "comment": {
            "description": "The full category for the command. Either an array of strings that denote every (sub)folder the command is in,\nor `null` if it could not be resolved automatically.\n\nIf this is `null` for how you setup your code then you can overwrite how the `fullCategory` is resolved by\nextending this class and overwriting the assignment in the constructor.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1990,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 49,
          "name": "lexer",
          "comment": {
            "description": "The lexer to be used for command parsing",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2012,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Lexer",
            "packageName": "@sapphire/lexure",
            "typeArguments": []
          }
        },
        {
          "id": 103,
          "name": "location",
          "comment": {
            "description": "The location metadata for the piece's file.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 442,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceLocation",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 104,
          "name": "name",
          "comment": {
            "description": "The name of the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 446,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 106,
          "name": "options",
          "comment": {
            "description": "The raw options passed to this {@link Piece}",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 454,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 5,
            "name": "O",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 8,
          "name": "parsedSubcommandMappings",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 18,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L18"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 153,
            "name": "SubcommandMappingArray",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 43,
          "name": "preconditions",
          "comment": {
            "description": "The preconditions to be run.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1976,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PreconditionContainerArray",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 102,
          "name": "store",
          "comment": {
            "description": "The store that contains the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 438,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Store",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Piece",
                "packageName": "@sapphire/pieces",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "PieceOptions",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 46,
          "name": "strategy",
          "comment": {
            "description": "The strategy to use for the lexer.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1995,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "IUnorderedStrategy",
            "packageName": "@sapphire/lexure",
            "typeArguments": []
          }
        },
        {
          "id": 47,
          "name": "typing",
          "comment": {
            "description": "If {@link SapphireClient.typing} is true, it can be overridden for a specific command using this property, set via its options.\nOtherwise, this property will be ignored.",
            "blockTags": [
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2001,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 56,
          "name": "category",
          "comment": {
            "description": "The main category for the command, if any.\n\nThis getter retrieves the first value of {@link Command.fullCategory}, if it has at least one item, otherwise it\nreturns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2034,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 108,
          "name": "container",
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 460,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 60,
          "name": "parentCategory",
          "comment": {
            "description": "The parent category for the command.\n\nThis getter retrieves the last value of {@link Command.fullCategory}, if it has at least one item, otherwise it\nreturns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2052,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 58,
          "name": "subCategory",
          "comment": {
            "description": "The sub-category for the command, if any.\n\nThis getter retrieves the second value of {@link Command.fullCategory}, if it has at least two items, otherwise\nit returns `null`.",
            "blockTags": [
              {
                "name": "note",
                "text": "You can set {@link Command.Options.fullCategory} to override the built-in category resolution."
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 2043,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 32,
          "name": "#findSubcommand",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 335,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L335"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 33,
              "name": "#findSubcommand",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 34,
                  "name": "mappings",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 154,
                      "name": "SubcommandMappingMethod",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                },
                {
                  "id": 35,
                  "name": "expectedName",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reflection",
                    "reflection": {
                      "id": 36,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 38,
                          "name": "defaultMatch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                              "line": 346,
                              "character": 22,
                              "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L346"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": false
                          },
                          "defaultValue": "false"
                        },
                        {
                          "id": 37,
                          "name": "mapping",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                              "line": 346,
                              "character": 13,
                              "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L346"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 154,
                            "name": "SubcommandMappingMethod"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            38,
                            37
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                          "line": 346,
                          "character": 11,
                          "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L346"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "reflection",
                    "reflection": {
                      "id": 39,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 41,
                          "name": "defaultMatch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                              "line": 350,
                              "character": 34,
                              "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L350"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": true
                          },
                          "defaultValue": "true"
                        },
                        {
                          "id": 40,
                          "name": "mapping",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                              "line": 350,
                              "character": 11,
                              "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L350"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 154,
                                "name": "SubcommandMappingMethod"
                              }
                            ]
                          },
                          "defaultValue": "foundDefault"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            41,
                            40
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/subcommands/src/lib/Subcommand.ts",
                          "line": 350,
                          "character": 9,
                          "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L350"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "#handleChatInputInteractionRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 287,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L287"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 28,
              "name": "#handleChatInputInteractionRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 29,
                  "name": "interaction",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommand.Interaction",
                    "packageName": "@sapphire/framework",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 30,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 31,
                  "name": "subcommand",
                  "type": {
                    "kind": "reference",
                    "id": 154,
                    "name": "SubcommandMappingMethod",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 21,
          "name": "#handleMessageRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 248,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L248"
          },
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 22,
              "name": "#handleMessageRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 23,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 24,
                  "name": "args",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Args",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 25,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                },
                {
                  "id": 26,
                  "name": "subcommand",
                  "type": {
                    "kind": "reference",
                    "id": 154,
                    "name": "SubcommandMappingMethod",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 65,
          "name": "autocompleteRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2082,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 66,
              "name": "autocompleteRun",
              "comment": {
                "description": "Executes the autocomplete logic.\n\n:::tip\n\nYou may use this, or alternatively create an {@link InteractionHandler interaction handler} to handle autocomplete interactions.\nKeep in mind that commands take precedence over interaction handlers.\n\n:::",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 67,
                  "name": "interaction",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "AutocompleteInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 17,
          "name": "chatInputRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 211,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L211"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 18,
              "name": "chatInputRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 19,
                  "name": "interaction",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommand.Interaction",
                    "packageName": "@sapphire/framework",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 20,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ChatInputCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 61,
          "name": "contextMenuRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2069,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 62,
              "name": "contextMenuRun",
              "comment": {
                "description": "Executes the context menu's logic.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 63,
                  "name": "interaction",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ContextMenuInteraction",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CacheType",
                        "packageName": "discord.js",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 64,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ContextMenuCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 50,
          "name": "messagePreParse",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2025,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 51,
              "name": "messagePreParse",
              "comment": {
                "description": "The message pre-parse method. This method can be overridden by plugins to define their own argument parser.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 52,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 53,
                  "name": "parameters",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 54,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Awaitable",
                "packageName": "@sapphire/utilities",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 4,
                    "name": "PreParseReturn",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 12,
          "name": "messageRun",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 119,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L119"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 13,
              "name": "messageRun",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 14,
                  "name": "message",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Message",
                    "packageName": "discord.js",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                },
                {
                  "id": 15,
                  "name": "args",
                  "type": {
                    "kind": "reference",
                    "id": 4,
                    "name": "PreParseReturn",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 16,
                  "name": "context",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "MessageCommandContext",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 10,
          "name": "onLoad",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 108,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L108"
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 11,
              "name": "onLoad",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 109,
          "name": "onUnload",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 470,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 110,
              "name": "onUnload",
              "comment": {
                "description": "Per-piece listener that is called when the piece is unloaded from the store.\nUseful to set-up clean-up tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 83,
          "name": "parseConstructorPreConditions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2117,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 84,
              "name": "parseConstructorPreConditions",
              "comment": {
                "description": "Parses the command's options and processes them, calling {@link Command#parseConstructorPreConditionsRunIn},\n{@link Command#parseConstructorPreConditionsNsfw},\n{@link Command#parseConstructorPreConditionsRequiredClientPermissions}, and\n{@link Command#parseConstructorPreConditionsCooldown}.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "2.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 85,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 98,
          "name": "parseConstructorPreConditionsCooldown",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2147,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 99,
              "name": "parseConstructorPreConditionsCooldown",
              "comment": {
                "description": "Appends the `Cooldown` precondition when {@link Command.Options.cooldownLimit} and\n{@link Command.Options.cooldownDelay} are both non-zero.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 100,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 86,
          "name": "parseConstructorPreConditionsNsfw",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2122,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 87,
              "name": "parseConstructorPreConditionsNsfw",
              "comment": {
                "description": "Appends the `NSFW` precondition if {@link Command.Options.nsfw} is set to true.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 88,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 92,
          "name": "parseConstructorPreConditionsRequiredClientPermissions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2135,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 93,
              "name": "parseConstructorPreConditionsRequiredClientPermissions",
              "comment": {
                "description": "Appends the `ClientPermissions` precondition when {@link Command.Options.requiredClientPermissions} resolves to a\nnon-zero bitfield.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 94,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 95,
          "name": "parseConstructorPreConditionsRequiredUserPermissions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2141,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 96,
              "name": "parseConstructorPreConditionsRequiredUserPermissions",
              "comment": {
                "description": "Appends the `UserPermissions` precondition when {@link Command.Options.requiredUserPermissions} resolves to a\nnon-zero bitfield.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 97,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 89,
          "name": "parseConstructorPreConditionsRunIn",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2129,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 90,
              "name": "parseConstructorPreConditionsRunIn",
              "comment": {
                "description": "Appends the `DMOnly`, `GuildOnly`, `NewsOnly`, and `TextOnly` preconditions based on the values passed in\n{@link Command.Options.runIn}, optimizing in specific cases (`NewsOnly` + `TextOnly` = `GuildOnly`; `DMOnly` +\n`GuildOnly` = `null`), defaulting to `null`, which doesn't add a precondition.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 91,
                  "name": "options",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "CommandOptions",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 70,
          "name": "registerApplicationCommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2091,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 71,
              "name": "registerApplicationCommands",
              "comment": {
                "description": "Registers the application commands that should be handled by this command.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 72,
                  "name": "registry",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ApplicationCommandRegistry",
                    "packageName": "@sapphire/framework",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Awaitable",
                "packageName": "@sapphire/utilities",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "reload",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2108,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 82,
              "name": "reload",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 79,
          "name": "supportsAutocompleteInteractions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2107,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 80,
              "name": "supportsAutocompleteInteractions",
              "comment": {
                "description": "Type-guard that ensures the command supports handling autocomplete interactions by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "AutocompleteCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 75,
          "name": "supportsChatInputCommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2099,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 76,
              "name": "supportsChatInputCommands",
              "comment": {
                "description": "Type-guard that ensures the command supports chat input commands by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "ChatInputCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 77,
          "name": "supportsContextMenuCommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2103,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 78,
              "name": "supportsContextMenuCommands",
              "comment": {
                "description": "Type-guard that ensures the command supports context menu commands by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "ContextMenuCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 73,
          "name": "supportsMessageCommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2095,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 74,
              "name": "supportsMessageCommands",
              "comment": {
                "description": "Type-guard that ensures the command supports message commands by checking if the handler for it is present",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "MessageCommand",
                  "packageName": "@sapphire/framework",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 68,
          "name": "toJSON",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2086,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 69,
              "name": "toJSON",
              "comment": {
                "description": "Defines the JSON.stringify behavior of the command.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "CommandJSON",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 111,
          "name": "unload",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 474,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 112,
              "name": "unload",
              "comment": {
                "description": "Unloads and disables the piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "constants": [
    {
      "id": 175,
      "name": "SubcommandPluginEvents",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L6"
      },
      "external": false,
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 176,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 180,
              "name": "ChatInputSubcommandError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 10,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L10"
                }
              ],
              "type": {
                "type": "literal",
                "value": "chatInputSubcommandError"
              },
              "defaultValue": "..."
            },
            {
              "id": 179,
              "name": "ChatInputSubcommandNotFound",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 9,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L9"
                }
              ],
              "type": {
                "type": "literal",
                "value": "chatInputSubcommandNotFound"
              },
              "defaultValue": "..."
            },
            {
              "id": 177,
              "name": "ChatInputSubcommandRun",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 7,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L7"
                }
              ],
              "type": {
                "type": "literal",
                "value": "chatInputSubcommandRun"
              },
              "defaultValue": "..."
            },
            {
              "id": 178,
              "name": "ChatInputSubcommandSuccess",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 8,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L8"
                }
              ],
              "type": {
                "type": "literal",
                "value": "chatInputSubcommandSuccess"
              },
              "defaultValue": "..."
            },
            {
              "id": 184,
              "name": "MessageSubcommandError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 15,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L15"
                }
              ],
              "type": {
                "type": "literal",
                "value": "messageSubcommandError"
              },
              "defaultValue": "..."
            },
            {
              "id": 183,
              "name": "MessageSubcommandNotFound",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 14,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L14"
                }
              ],
              "type": {
                "type": "literal",
                "value": "messageSubcommandNotFound"
              },
              "defaultValue": "..."
            },
            {
              "id": 181,
              "name": "MessageSubcommandRun",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 12,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L12"
                }
              ],
              "type": {
                "type": "literal",
                "value": "messageSubcommandRun"
              },
              "defaultValue": "..."
            },
            {
              "id": 182,
              "name": "MessageSubcommandSuccess",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 13,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L13"
                }
              ],
              "type": {
                "type": "literal",
                "value": "messageSubcommandSuccess"
              },
              "defaultValue": "..."
            },
            {
              "id": 186,
              "name": "SubcommandMappingIsMissingChatInputCommandHandler",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 18,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L18"
                }
              ],
              "type": {
                "type": "literal",
                "value": "subcommandMappingIsMissingChatInputCommandHandler"
              },
              "defaultValue": "..."
            },
            {
              "id": 185,
              "name": "SubcommandMappingIsMissingMessageCommandHandler",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/subcommands/src/lib/types/Events.ts",
                  "line": 17,
                  "character": 1,
                  "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L17"
                }
              ],
              "type": {
                "type": "literal",
                "value": "subcommandMappingIsMissingMessageCommandHandler"
              },
              "defaultValue": "..."
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                180,
                179,
                177,
                178,
                184,
                183,
                181,
                182,
                186,
                185
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/subcommands/src/lib/types/Events.ts",
              "line": 6,
              "character": 38,
              "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L6"
            }
          ]
        }
      },
      "value": "..."
    }
  ],
  "enums": [
    {
      "id": 187,
      "name": "SubcommandPluginIdentifiers",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L21"
      },
      "external": false,
      "properties": [
        {
          "id": 189,
          "name": "ChatInputSubcommandNoMatch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 23,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L23"
          },
          "value": "chatInputSubcommandNoMatch"
        },
        {
          "id": 188,
          "name": "MessageSubcommandNoMatch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 22,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L22"
          },
          "value": "messageSubcommandNoMatch"
        },
        {
          "id": 190,
          "name": "SubcommandNotFound",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 24,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L24"
          },
          "value": "subcommandNotFound"
        }
      ]
    }
  ],
  "functions": [],
  "interfaces": [
    {
      "id": 224,
      "name": "ChatInputSubcommandAcceptedPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 55,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L55"
      },
      "external": false,
      "properties": [
        {
          "id": 228,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 225,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 56,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L56"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 227,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L51"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 226,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 57,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L57"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 234,
      "name": "ChatInputSubcommandErrorPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 62,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L62"
      },
      "external": false,
      "properties": [
        {
          "id": 238,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 235,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 56,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L56"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 237,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L51"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 236,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 57,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L57"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 229,
      "name": "ChatInputSubcommandRunPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 60,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L60"
      },
      "external": false,
      "properties": [
        {
          "id": 233,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 230,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 56,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L56"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 232,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L51"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 231,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 57,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L57"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 239,
      "name": "ChatInputSubcommandSuccessPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 64,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L64"
      },
      "external": false,
      "properties": [
        {
          "id": 244,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 241,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 56,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L56"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 243,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L51"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 242,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 57,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L57"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 240,
          "name": "result",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 65,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L65"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 221,
      "name": "IChatInputSubcommandPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 50,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L50"
      },
      "external": false,
      "properties": [
        {
          "id": 223,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 52,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L52"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 222,
          "name": "interaction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 51,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L51"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ChatInputCommand.Interaction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 197,
      "name": "IMessageSubcommandPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 32,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L32"
      },
      "external": false,
      "properties": [
        {
          "id": 199,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L34"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 198,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L33"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 200,
      "name": "MessageSubcommandAcceptedPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 37,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L37"
      },
      "external": false,
      "properties": [
        {
          "id": 204,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L34"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 201,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L38"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 202,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L39"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 203,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L33"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 210,
      "name": "MessageSubcommandErrorPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 44,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L44"
      },
      "external": false,
      "properties": [
        {
          "id": 214,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L34"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 211,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L38"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 212,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L39"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 213,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L33"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 191,
      "name": "MessageSubcommandNoMatchContext",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 27,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L27"
      },
      "external": false,
      "properties": [
        {
          "id": 195,
          "name": "commandName",
          "comment": {
            "description": "The alias used to run this command.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1924,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 196,
          "name": "commandPrefix",
          "comment": {
            "description": "The matched prefix, this will always be the same as {@link MessageCommand.RunContext.prefix} if it was a string, otherwise it is\nthe result of doing `prefix.exec(content)[0]`.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1929,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 193,
          "name": "possibleSubcommandGroupOrName",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 29,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L29"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 192,
          "name": "possibleSubcommandName",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 28,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L28"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 194,
          "name": "prefix",
          "comment": {
            "description": "The prefix used to run this command.\n\nThis is a string for the mention and default prefix, and a RegExp for the `regexPrefix`.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1920,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "RegExp",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 205,
      "name": "MessageSubcommandRunPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 42,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L42"
      },
      "external": false,
      "properties": [
        {
          "id": 209,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L34"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 206,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L38"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 207,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L39"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 208,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L33"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 215,
      "name": "MessageSubcommandSuccessPayload",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 46,
        "file": "Events.ts",
        "path": "packages/subcommands/src/lib/types",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L46"
      },
      "external": false,
      "properties": [
        {
          "id": 220,
          "name": "command",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L34"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Subcommand",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Args",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 127,
                "name": "SubcommandOptions",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 217,
          "name": "context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L38"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MessageCommandContext",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 218,
          "name": "matchedSubcommandMapping",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L39"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 219,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 33,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L33"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Message",
            "packageName": "discord.js",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 216,
          "name": "result",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 47,
            "file": "Events.ts",
            "path": "packages/subcommands/src/lib/types",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/types/Events.ts#L47"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 169,
      "name": "SubcommandMappingGroup",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 82,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L82"
      },
      "external": false,
      "properties": [
        {
          "id": 171,
          "name": "entries",
          "comment": {
            "description": "The {@link SubcommandMappingMethod}s that are contained within this subcommand group.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 90,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L90"
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 154,
              "name": "SubcommandMappingMethod",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 172,
          "name": "name",
          "comment": {
            "description": "The name of this subcommand, or subcommand group",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L14"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 170,
          "name": "type",
          "comment": {
            "description": "This subcommand mapping describes a subcommand group and can therefore only ever be `'group'`",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 86,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L86"
          },
          "readonly": false,
          "type": {
            "kind": "literal",
            "value": "group"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 154,
      "name": "SubcommandMappingMethod",
      "comment": {
        "description": "Describes how a subcommand method maps to the actual implementation of that subcommand.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 25,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L25"
      },
      "external": false,
      "properties": [
        {
          "id": 163,
          "name": "chatInputRun",
          "comment": {
            "description": "The class method to call when invoking this subcommand through a **chat input command**,\nor a callback implementation of the subcommand.\n\nNote that when providing a string you have to first define the method that will be called within your function\nbefore this will allow any values. This is to ensure that the property is strictly typed to the context of the\nclass.",
            "blockTags": [
              {
                "name": "example",
                "text": "```typescript\nchatInputRun: 'runModeratorConfig'\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nchatInputRun(interaction: Subcommand.Interaction) {\n   return interaction.reply(`<@${interaction.user.id}> has been granted moderator`);\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 79,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L79"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reflection",
                "reflection": {
                  "id": 164,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "node_modules/@sapphire/framework/dist/index.d.ts",
                      "line": 2064,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 165,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Executes the application command's logic."
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 166,
                          "name": "interaction",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The interaction that triggered the command."
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "name": "CacheType",
                                "qualifiedName": "CacheType",
                                "package": "discord.js"
                              }
                            ],
                            "name": "CommandInteraction",
                            "qualifiedName": "CommandInteraction",
                            "package": "discord.js"
                          }
                        },
                        {
                          "id": 167,
                          "name": "context",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "ChatInputCommandContext",
                            "qualifiedName": "ChatInputCommandContext",
                            "package": "@sapphire/framework"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 156,
          "name": "default",
          "comment": {
            "description": "Whether this is the default subcommand when none is provided.\n\nNote that this is effectively only used for Message based subcommand\n(those implementing {@link messageRun})\nbecause the subcommand is always provided for chat input commands.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 37,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L37"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 157,
          "name": "messageRun",
          "comment": {
            "description": "The class method to call when invoking this subcommand through a **message command**,\nor a callback implementation of the subcommand.\n\nNote that when providing a string you have to first define the method that will be called within your function\nbefore this will allow any values. This is to ensure that the property is strictly typed to the context of the\nclass.",
            "blockTags": [
              {
                "name": "example",
                "text": "```typescript\nmessageRun: 'runAdminConfig'\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nmessageRun(message: Message) {\n   return message.reply(`<@${message.author.id}> has been granted admin`);\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 58,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L58"
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "reflection",
                "reflection": {
                  "id": 158,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "node_modules/@sapphire/framework/dist/index.d.ts",
                      "line": 2059,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 159,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Executes the message command's logic."
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 160,
                          "name": "message",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The message that triggered the command."
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            ],
                            "name": "Message",
                            "qualifiedName": "Message",
                            "package": "discord.js"
                          }
                        },
                        {
                          "id": 161,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The value returned by "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "Command.messagePreParse"
                              },
                              {
                                "kind": "text",
                                "text": ", by default an instance of "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "Args"
                              },
                              {
                                "kind": "text",
                                "text": "."
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "name": "Args",
                            "qualifiedName": "Args",
                            "package": "@sapphire/framework"
                          }
                        },
                        {
                          "id": 162,
                          "name": "context",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The context in which the command was executed."
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "name": "MessageCommandContext",
                            "qualifiedName": "MessageCommandContext",
                            "package": "@sapphire/framework"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 168,
          "name": "name",
          "comment": {
            "description": "The name of this subcommand, or subcommand group",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L14"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 155,
          "name": "type",
          "comment": {
            "description": "This subcommand mapping describes a subcommand method and can therefore only ever be `'method'`",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 29,
            "file": "SubcommandMappings.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L29"
          },
          "readonly": false,
          "type": {
            "kind": "literal",
            "value": "method"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 127,
      "name": "SubcommandOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 354,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L354"
      },
      "external": false,
      "properties": [
        {
          "id": 145,
          "name": "aliases",
          "comment": {
            "description": "The aliases for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "[]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 671,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "readonly": true,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 138,
          "name": "cooldownDelay",
          "comment": {
            "description": "The time in milliseconds for the cooldown entries to reset, if set to a non-zero value alongside {@link Command.Options.cooldownLimit}, the `Cooldown` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1828,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 140,
          "name": "cooldownFilteredUsers",
          "comment": {
            "description": "The users that are exempt from the Cooldown precondition.\nUse this to filter out someone like a bot owner",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "undefined"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1841,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 137,
          "name": "cooldownLimit",
          "comment": {
            "description": "The amount of entries the cooldown can have before filling up, if set to a non-zero value alongside {@link Command.Options.cooldownDelay}, the `Cooldown` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "1"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1822,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 139,
          "name": "cooldownScope",
          "comment": {
            "description": "The scope of the cooldown entries.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "BucketScope.User"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1834,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "BucketScope",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 131,
          "name": "description",
          "comment": {
            "description": "The description for the command.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "''"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1771,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 132,
          "name": "detailedDescription",
          "comment": {
            "description": "The detailed description for the command.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "''"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1777,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "DetailedDescriptionCommand",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 147,
          "name": "enabled",
          "comment": {
            "description": "Whether or not the piece should be enabled. If set to false, the piece will be unloaded.",
            "blockTags": [
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 420,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 148,
          "name": "flags",
          "comment": {
            "description": "The accepted flags. Flags are key-only identifiers that can be placed anywhere in the command. Two different types are accepted:\n* An array of strings, e.g. [`silent`].\n* A boolean defining whether the strategy should accept all keys (`true`) or none at all (`false`).",
            "blockTags": [
              {
                "name": "default",
                "text": "[]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1652,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        {
          "id": 133,
          "name": "fullCategory",
          "comment": {
            "description": "The full category path for the command",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "'An array of folder names that lead back to the folder that is registered for in the commands store'"
              },
              {
                "name": "example",
                "text": "```typescript\n// Given a file named `ping.js` at the path of `commands/General/ping.js`\n['General']\n\n// Given a file named `info.js` at the path of `commands/General/About/ping.js`\n['General', 'About']\n```"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1791,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 129,
          "name": "generateDashLessAliases",
          "comment": {
            "description": "Whether to add aliases for subcommands with dashes in them\n\nWhen this option is enabled *and* the subcommand implements `messageRun`, dashless aliases will be added.\n\nFor subcommands groups both the group itself and all subcommands within the group will have dashless aliases added.",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              },
              {
                "name": "default",
                "text": "false"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 366,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L366"
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 130,
          "name": "generateUnderscoreLessAliases",
          "comment": {
            "description": "Whether to add aliases for commands with underscores in them",
            "blockTags": [
              {
                "name": "since",
                "text": "3.0.0"
              },
              {
                "name": "default",
                "text": "false"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1765,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 146,
          "name": "name",
          "comment": {
            "description": "The name for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "''"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 415,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 136,
          "name": "nsfw",
          "comment": {
            "description": "Sets whether or not the command should be treated as NSFW. If set to true, the `NSFW` precondition will be added to the list.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "false"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1816,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 149,
          "name": "options",
          "comment": {
            "description": "The accepted options. Options are key-value identifiers that can be placed anywhere in the command. Two different types are accepted:\n* An array of strings, e.g. [`silent`].\n* A boolean defining whether the strategy should accept all keys (`true`) or none at all (`false`).",
            "blockTags": [
              {
                "name": "default",
                "text": "[]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1659,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "boolean"
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        {
          "id": 134,
          "name": "preconditions",
          "comment": {
            "description": "The {@link Precondition}s to be run, accepts an array of their names.",
            "blockTags": [
              {
                "name": "seealso",
                "text": "{@link PreconditionContainerArray}"
              },
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "[]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1798,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "PreconditionEntryResolvable",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              }
            }
          }
        },
        {
          "id": 150,
          "name": "prefixes",
          "comment": {
            "description": "The prefixes for both flags and options.",
            "blockTags": [
              {
                "name": "default",
                "text": "['--', '-', '—']"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1664,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 135,
          "name": "quotes",
          "comment": {
            "description": "The quotes accepted by this command, pass `[]` to disable them.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "[\n  ['\"', '\"'], // Double quotes\n  ['“', '”'], // Fancy quotes (on iOS)\n  ['「', '」'] // Corner brackets (CJK)\n  ['«', '»'] // French quotes (guillemets)\n]"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1810,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "tuple",
              "types": [
                {
                  "kind": "intrinsic",
                  "type": "string"
                },
                {
                  "kind": "intrinsic",
                  "type": "string"
                }
              ]
            }
          }
        },
        {
          "id": 141,
          "name": "requiredClientPermissions",
          "comment": {
            "description": "The required permissions for the client.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1847,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PermissionResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 142,
          "name": "requiredUserPermissions",
          "comment": {
            "description": "The required permissions for the user.",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1853,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PermissionResolvable",
            "packageName": "discord.js",
            "typeArguments": []
          }
        },
        {
          "id": 143,
          "name": "runIn",
          "comment": {
            "description": "The channels the command should run in. If set to `null`, no precondition entry will be added. Some optimizations are applied when given an array to reduce the amount of preconditions run (e.g. `'GUILD_TEXT'` and `'GUILD_NEWS'` becomes `'GUILD_ANY'`, and if both `'DM'` and `'GUILD_ANY'` are defined, then no precondition entry is added as it runs in all channels).",
            "blockTags": [
              {
                "name": "since",
                "text": "2.0.0"
              },
              {
                "name": "default",
                "text": "null"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1859,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunType",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "CommandOptionsRunTypeEnum",
                "packageName": "@sapphire/framework",
                "typeArguments": []
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunType",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "CommandOptionsRunTypeEnum",
                        "packageName": "@sapphire/framework",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 151,
          "name": "separators",
          "comment": {
            "description": "The flag separators.",
            "blockTags": [
              {
                "name": "default",
                "text": "['=', ':']"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1669,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 128,
          "name": "subcommands",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 355,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L355"
          },
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 153,
            "name": "SubcommandMappingArray",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 144,
          "name": "typing",
          "comment": {
            "description": "If {@link SapphireClient.typing} is true, this option will override it.\nOtherwise, this option has no effect - you may call {@link Channel#sendTyping}` in the run method if you want specific commands to display the typing status.",
            "blockTags": [
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 1865,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/framework/dist",
            "url": null
          },
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [
    {
      "id": 115,
      "name": "Subcommand",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 17,
        "file": "Subcommand.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L17"
      },
      "external": false,
      "classes": [],
      "constants": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 124,
          "name": "AutocompleteInteraction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 376,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L376"
          },
          "external": false,
          "typeParameters": [
            {
              "id": 125,
              "name": "Cached",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.AutocompleteInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 125,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 120,
          "name": "ChatInputInteraction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 374,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L374"
          },
          "external": false,
          "typeParameters": [
            {
              "id": 121,
              "name": "Cached",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.ChatInputInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 121,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 118,
          "name": "Context",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 372,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L372"
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.Context",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 122,
          "name": "ContextMenuInteraction",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 375,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L375"
          },
          "external": false,
          "typeParameters": [
            {
              "id": 123,
              "name": "Cached",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              },
              "default": {
                "kind": "reference",
                "id": null,
                "name": "CacheType",
                "packageName": "discord.js",
                "typeArguments": []
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.ContextMenuInteraction",
            "packageName": "@sapphire/framework",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 123,
                "name": "Cached",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 117,
          "name": "JSON",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 371,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L371"
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.JSON",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 116,
          "name": "Options",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 370,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L370"
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 127,
            "name": "SubcommandOptions",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 126,
          "name": "Registry",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 377,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L377"
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.Registry",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        },
        {
          "id": 119,
          "name": "RunInTypes",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 373,
            "file": "Subcommand.ts",
            "path": "packages/subcommands/src/lib",
            "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/Subcommand.ts#L373"
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Command.RunInTypes",
            "packageName": "@sapphire/framework",
            "typeArguments": []
          }
        }
      ]
    }
  ],
  "typeAliases": [
    {
      "id": 174,
      "name": "ChatInputCommandSubcommandMappingMethod",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 96,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L96"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 154,
                "name": "SubcommandMappingMethod",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "chatInputRun"
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 154,
                    "name": "SubcommandMappingMethod",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "chatInputRun"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 173,
      "name": "MessageSubcommandMappingMethod",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 94,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L94"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Omit",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 154,
                "name": "SubcommandMappingMethod",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "messageRun"
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 154,
                    "name": "SubcommandMappingMethod",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "messageRun"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 152,
      "name": "SubcommandMapping",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L3"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 154,
            "name": "SubcommandMappingMethod",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 169,
            "name": "SubcommandMappingGroup",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 153,
      "name": "SubcommandMappingArray",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "SubcommandMappings.ts",
        "path": "packages/subcommands/src/lib",
        "url": "https://github.com/sapphiredev/plugins/blob/de79724/packages/subcommands/src/lib/SubcommandMappings.ts#L5"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "array",
        "type": {
          "kind": "reference",
          "id": 152,
          "name": "SubcommandMapping",
          "packageName": null,
          "typeArguments": []
        }
      }
    }
  ]
}