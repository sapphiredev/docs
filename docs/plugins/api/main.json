{
  "typeDocJsonParserVersion": "7.4.0",
  "id": 0,
  "name": "@sapphire/plugin-api",
  "version": "5.0.4",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://raw.githubusercontent.com/sapphiredev/assets/main/banners/SapphireCommunity.png)\n\n# @sapphire/plugin-api\n\n**Plugin for <a href=\"https://github.com/sapphiredev/framework\">@sapphire/framework</a> to expose a REST API.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/plugins)](https://github.com/sapphiredev/plugins/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/plugins/branch/main/graph/badge.svg?token=QWL8FB16BR)](https://codecov.io/gh/sapphiredev/plugins)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/plugin-api?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/plugin-api)\n[![npm](https://img.shields.io/npm/v/@sapphire/plugin-api?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/plugin-api)\n\n</div>\n\n## Description\n\nThis plugin provides an API endpoint for your bot that can be called from external services. A good exemplary use case for this is once your bot grows to have enough configuration options that you want to offer a website to your end-users to change those settings, and your website needs to interface with the bot for this to work.\n\n## Features\n\n-   Fully ready for TypeScript!\n-   Follows common REST standards.\n-   Includes ESM ready entrypoint\n-   Premade OAuth 2.0 endpoints\n\n## Installation\n\n`@sapphire/plugin-api` depends on the following packages. Be sure to install these along with this package!\n\n-   [`@sapphire/framework`](https://www.npmjs.com/package/@sapphire/framework)\n-   [`discord.js`](https://www.npmjs.com/package/discord.js)\n-   [`discord-api-types`](https://www.npmjs.com/package/discord-api-types)\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/plugin-api @sapphire/framework discord.js discord-api-types\n```\n\n---\n\n## Usage\n\nStart by importing the registration file in your project to use the plugin:\n\n**JavaScript**\n\n```js\nrequire('@sapphire/plugin-api/register');\n```\n\n**TypeScript**\n\n```typescript\nimport '@sapphire/plugin-api/register';\n```\n\nThen, you can use the following configuration options in your SapphireClient extension class or initializer. This will either be located in your `new SapphireClient` constructor call, or `super` in your constructor method if you use an extension class.\n\n```js\n{\n  auth: {\n\t// The application/client ID of your bot.\n\t// You can find this at https://discord.com/developers/applications\n    id: '',\n\t// The client secret of your bot.\n\t// You can find this at https://discord.com/developers/applications\n    secret: '',\n\t// The name of the authentication cookie.\n    cookie: 'SAPPHIRE_AUTH',\n\t// The URL that users should be redirected to after a successful authentication\n    redirect: '',\n\t// The scopes that should be given to the authentication.\n    scopes: [OAuth2Scopes.Identify],\n\t// Transformers to transform the raw data from Discord to a different structure.\n    transformers: []\n  },\n  // The prefix for all routes, e.g. / or v1/.\n  prefix: '',\n  // The origin header to be set on every request at 'Access-Control-Allow-Origin.\n  origin: '*',\n  // Any options passed to the NodeJS \"net\" internal server.listen function\n  // See https://nodejs.org/api/net.html#net_server_listen_options_callback\n  listenOptions: {\n\t// The port the API will listen on.\n    port: 4000\n  }\n}\n```\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/plugins/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/plugins\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/plugin-api@5.0.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@5.0.3...@sapphire/plugin-api@5.0.4) - (2023-05-03)\n\n## üè† Refactor\n\n- **api:** Switch from psl to tldts library (#436) ([1fde242](https://github.com/sapphiredev/plugins/commit/1fde242d2108edeca57a38d40bebcb303a9c1d71))\n\n## üêõ Bug Fixes\n\n- **api:** Remove const enum for verbatimModuleSyntax ([daeb694](https://github.com/sapphiredev/plugins/commit/daeb69458c7a4fac666a963ef3ea0e9e820fbc06))\n\n## üìù Documentation\n\n- **api:** Fix typedoc for MiddlewareStore#sortedMiddlewares ([f0c940e](https://github.com/sapphiredev/plugins/commit/f0c940e97a55b54d800aede26177dbf8e6cd88fd))\n\n# [@sapphire/plugin-api@5.0.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@5.0.2...@sapphire/plugin-api@5.0.3) - (2023-04-10)\n\n## üêõ Bug Fixes\n\n- **api:** Explicitly import tslib ([d7921a4](https://github.com/sapphiredev/plugins/commit/d7921a4851b6197279d26e517aaf9e54a828c56c))\n- **api:** Fixed compatibility with TS 5.x ([dc843af](https://github.com/sapphiredev/plugins/commit/dc843afdfc614bb7fea61452621c4a6227518ad4))\n\n# [@sapphire/plugin-api@5.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@5.0.1...@sapphire/plugin-api@5.0.2) - (2023-04-02)\n\n## üêõ Bug Fixes\n\n- **api:** Bump undici dependency ([2e3409c](https://github.com/sapphiredev/plugins/commit/2e3409ce9ab189b67a59d414acef2e9c15d4c12c))\n\n# [@sapphire/plugin-api@5.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@5.0.0...@sapphire/plugin-api@5.0.1) - (2023-02-18)\n\n## üêõ Bug Fixes\n\n- **api:** Bump undici dependency minor ([2038e60](https://github.com/sapphiredev/plugins/commit/2038e6053f42502e2642e4d85e5cf9d7a7c2bc3e))\n\n## üìù Documentation\n\n- **api:** Update feature list ([c0d982b](https://github.com/sapphiredev/plugins/commit/c0d982b1a277bb5ec476f698a011b4cfff8ffea1))\n\n# [@sapphire/plugin-api@5.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@4.0.1...@sapphire/plugin-api@5.0.0) - (2023-01-08)\n\n## üè† Refactor\n\n- Node-fetch to undici (#145) ([16409fd](https://github.com/sapphiredev/plugins/commit/16409fdebe4bae7d8eb22da32e639b68e6239dd1))\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies (#399) ([953d57b](https://github.com/sapphiredev/plugins/commit/953d57b06ea624baa89ba1d03131c5fb10cecbfb))\n- **deps:** Update all non-major dependencies (#387) ([e31f714](https://github.com/sapphiredev/plugins/commit/e31f7140c8bb7c34086540912eb595dd04adaef5))\n\n## üìù Documentation\n\n- Add @Arcadia148 as a contributor ([3a28c2f](https://github.com/sapphiredev/plugins/commit/3a28c2fc9a08be5e66026b7468a304c8b83203e6))\n- Add @r-priyam as a contributor ([2d97019](https://github.com/sapphiredev/plugins/commit/2d970198717285c0f1652340ce87b1a4780179f3))\n- Add @BenSegal855 as a contributor ([66553df](https://github.com/sapphiredev/plugins/commit/66553dfbb4bc7332c295277ffa4a8f720401bc89))\n- Add @yuansheng1549 as a contributor ([c36ac65](https://github.com/sapphiredev/plugins/commit/c36ac65cd0a1a3e266a8a3679a58404177e0bb6b))\n- Add @RealShadowNova as a contributor ([6cfa76f](https://github.com/sapphiredev/plugins/commit/6cfa76f793a16c6d11aa057e66e3fb41a9f4fb6d))\n\n## üöÄ Features\n\n- **deps:** Support for djs v14 (#403) ([7674782](https://github.com/sapphiredev/plugins/commit/76747829f4b3ec152ab888e57a56a138e7d527f5))\n\n# [@sapphire/plugin-api@4.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@4.0.0...@sapphire/plugin-api@4.0.1) - (2022-09-18)\n\n## üêõ Bug Fixes\n\n- **api:** Compatibility with latest @types/node ([8c80780](https://github.com/sapphiredev/plugins/commit/8c807807bbeb979fb4344b1c7a342d72aceee83c))\n\n## üß™ Testing\n\n- Migrate to vitest ([94a182e](https://github.com/sapphiredev/plugins/commit/94a182ea0d03f79616c66983695caf64e93cb6c3))\n\n# [@sapphire/plugin-api@4.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.2.4...@sapphire/plugin-api@4.0.0) - (2022-08-20)\n\n## üìù Documentation\n\n- Add @ricardooow as a contributor ([15d7f9b](https://github.com/sapphiredev/plugins/commit/15d7f9b0d7428559441550aba1918d068565baa6))\n- Add @imranbarbhuiya as a contributor ([e3d8fdc](https://github.com/sapphiredev/plugins/commit/e3d8fdc433a6c89389b2e1c574245e8140d1c47a))\n- Add @KrishAgarwal2811 as a contributor ([875dda0](https://github.com/sapphiredev/plugins/commit/875dda0756f1b5302e77993e44a1ac9ab1a065d0))\n- Add @jczstudios as a contributor ([c9126bc](https://github.com/sapphiredev/plugins/commit/c9126bc2bb454989c006864293ef99a47369dc38))\n- Add @MajesticString as a contributor ([2743c8d](https://github.com/sapphiredev/plugins/commit/2743c8d5b9abe1b554ac7d776cb827d6a1e9db7b))\n- Add @Mzato0001 as a contributor ([06626cd](https://github.com/sapphiredev/plugins/commit/06626cd7ff94d3bc8ce75da6383e1b77b6109a3d))\n\n## üöÄ Features\n\n- ***:** Subcommands v3 & update plugins to Sapphire Result v2 (#271) ([1cfc32a](https://github.com/sapphiredev/plugins/commit/1cfc32a9cb568d1031a35c5e0628a67bc082ff21))\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-subcommands has been completely rewritten from scratch for version 3. Please refer to the [README](https://github.com/sapphiredev/plugins/blob/main/packages/subcommands/README.md) or [the website](https://www.sapphirejs.dev/docs/Guide/plugins/Subcommands/getting-started) for updated usage.\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-hmr has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-pattern-commands has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-i18next has been updated to use @sapphire/result v2 and @sapphire/framework v3\n  - üí• **BREAKING CHANGE:** @sapphire/plugin-scheduled-tasks has been updated to use @sapphire/result v2 and @sapphire/framework v3\n\n# [@sapphire/plugin-api@3.2.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.2.3...@sapphire/plugin-api@3.2.4) - (2022-07-18)\n\n## üêõ Bug Fixes\n\n- End response only if options route handler is not present (#325) ([058d088](https://github.com/sapphiredev/plugins/commit/058d0881d1b542e669052d816939dde16f33877b))\n\n# [@sapphire/plugin-api@3.2.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.2.1...@sapphire/plugin-api@3.2.3) - (2022-07-11)\n\n## üèÉ Performance\n\n- **i18next:** Switch to new backend library ([21cd166](https://github.com/sapphiredev/plugins/commit/21cd1665c3bcba9c3dbc9711e9d57153ad768276))\n\n## üêõ Bug Fixes\n\n- Manually set version ([117d5a6](https://github.com/sapphiredev/plugins/commit/117d5a6256af7e01b420b28f95abec36f3feb0af))\n\n## üìù Documentation\n\n- Update typedoc setup ([5c855bd](https://github.com/sapphiredev/plugins/commit/5c855bd8341f155a41c9b85738541f1f47ac837a))\n\n## [3.2.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.2.0...@sapphire/plugin-api@3.2.1) (2022-04-01)\n\n### Bug Fixes\n\n-   **deps:** update all non-major dependencies ([2377eb9](https://github.com/sapphiredev/plugins/commit/2377eb90c7a5efb65e2be242d492f06bd4841a2e))\n\n# [3.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.1.4...@sapphire/plugin-api@3.2.0) (2022-03-06)\n\n### Bug Fixes\n\n-   **deps:** update all non-major dependencies ([2016134](https://github.com/sapphiredev/plugins/commit/201613418babe93748e74064cf66d4ea0582725c))\n\n### Features\n\n-   allow module: NodeNext ([#251](https://github.com/sapphiredev/plugins/issues/251)) ([31bab09](https://github.com/sapphiredev/plugins/commit/31bab09834ebc1bc646e4a2849dbd24c65f08c0e))\n-   **api:** Add automatically connect option ([#250](https://github.com/sapphiredev/plugins/issues/250)) ([6bf3626](https://github.com/sapphiredev/plugins/commit/6bf3626364264a6450a4d97e7dc3f6ada538269a))\n\n## [3.1.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.1.3...@sapphire/plugin-api@3.1.4) (2022-01-23)\n\n### Bug Fixes\n\n-   **deps:** update dependency node-fetch to v2.6.7 [security] ([743c9a6](https://github.com/sapphiredev/plugins/commit/743c9a606cd8d03cc91666cb86953ba302ccfb65))\n\n## [3.1.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.1.2...@sapphire/plugin-api@3.1.3) (2022-01-06)\n\n### Bug Fixes\n\n-   **api:** fixed return of `response.json` and `response.text` to actually return `void` ([add3ce5](https://github.com/sapphiredev/plugins/commit/add3ce55b2d49f9a605691d78baed13ef27844c7))\n\n## [3.1.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.1.1...@sapphire/plugin-api@3.1.2) (2021-12-21)\n\n### Bug Fixes\n\n-   **routes:** ensure that unmatched routes return 404 instead of 200 ([#193](https://github.com/sapphiredev/plugins/issues/193)) ([19e1be9](https://github.com/sapphiredev/plugins/commit/19e1be98d9c8ef4493fd76a517d33b3bf7577ba8))\n\n## [3.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.1.0...@sapphire/plugin-api@3.1.1) (2021-12-06)\n\n**Note:** Version bump only for package @sapphire/plugin-api\n\n# [3.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.0.2...@sapphire/plugin-api@3.1.0) (2021-11-21)\n\n### Bug Fixes\n\n-   **deps:** update all non-major dependencies ([4c796f8](https://github.com/sapphiredev/plugins/commit/4c796f8ea424c0fe37cda949afac0d5900cc2ff2))\n\n### Features\n\n-   expose and use namespaces for options, context, etc ([#176](https://github.com/sapphiredev/plugins/issues/176)) ([33452da](https://github.com/sapphiredev/plugins/commit/33452da808d91313a5d3bf680e11b5208ac67442))\n\n## [3.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.0.1...@sapphire/plugin-api@3.0.2) (2021-11-06)\n\n**Note:** Version bump only for package @sapphire/plugin-api\n\n## [3.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@3.0.0...@sapphire/plugin-api@3.0.1) (2021-10-17)\n\n### Bug Fixes\n\n-   allow more node & npm versions in engines field ([ce5b12f](https://github.com/sapphiredev/plugins/commit/ce5b12f8142297bceda49b85574a95a3cf9112ab))\n\n# [3.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.2.0...@sapphire/plugin-api@3.0.0) (2021-10-16)\n\n### Bug Fixes\n\n-   **api:** remove @sapphire/pieces from install instructions ([44e514c](https://github.com/sapphiredev/plugins/commit/44e514c7a755b13b316e875d3be7ed055bd33baf))\n-   **api:** update to Discord API v9 ([#124](https://github.com/sapphiredev/plugins/issues/124)) ([b194fe6](https://github.com/sapphiredev/plugins/commit/b194fe613ec04f327a2aa5ae8d051c400ed105c8))\n-   **plugin-api:** resolved augmentation bugs ([#102](https://github.com/sapphiredev/plugins/issues/102)) ([e21fd4a](https://github.com/sapphiredev/plugins/commit/e21fd4a6b0b36b2351c388b57d9c454734627a8b))\n\n### Code Refactoring\n\n-   **plugin-api:** updated for discord.js@13 and framework@2 ([856cd6f](https://github.com/sapphiredev/plugins/commit/856cd6f6f409ebb7fc156a64b0f7503154d2a38e))\n\n### Features\n\n-   **i18next:** update i18next dependency ([#129](https://github.com/sapphiredev/plugins/issues/129)) ([96519de](https://github.com/sapphiredev/plugins/commit/96519de5de253db390ed9a76ed073ffe1eabd187))\n-   rename `Awaited` to `Awaitable` ([#152](https://github.com/sapphiredev/plugins/issues/152)) ([e8aabab](https://github.com/sapphiredev/plugins/commit/e8aababca760125fd3752a807ef26da16103dd65))\n\n### BREAKING CHANGES\n\n-   **i18next:** i18next has been updated to v21.0.1. Please also seee the breaking changes for i18next [here](https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2100) and their migration guide [here](https://www.i18next.com/misc/migration-guide#v-20-x-x-to-v-21-0-0)\n\n-   chore: activate renovate\n-   **plugin-api:** Increase `@sapphire/framework` requirement to v2.\n\n# [2.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.1.4...@sapphire/plugin-api@2.2.0) (2021-06-19)\n\n### Bug Fixes\n\n-   **api:** specify package side effects ([2b50666](https://github.com/sapphiredev/plugins/commit/2b506666031af0f7586d5cd98f35957ba5dc8620))\n-   **doc:** change `[@link](https://github.com/link)` to `[@linkplain](https://github.com/linkplain)` for support in VSCode IntelliSense ([e448947](https://github.com/sapphiredev/plugins/commit/e44894769aae533668de7d6f2559cc4f7b58041d))\n-   **docs:** update-tsdoc-for-vscode-may-2021 ([#92](https://github.com/sapphiredev/plugins/issues/92)) ([ac52451](https://github.com/sapphiredev/plugins/commit/ac52451f3cf5560a8b93931411cc04497c00d4a9))\n-   remove peer deps, update dev deps, update READMEs ([#91](https://github.com/sapphiredev/plugins/issues/91)) ([3489b1d](https://github.com/sapphiredev/plugins/commit/3489b1dc1e8a7c64c255595b3d441cd0b5bac936))\n\n### Features\n\n-   **api:** expand MimeTypes enum with more common mime types ([b824cc6](https://github.com/sapphiredev/plugins/commit/b824cc60ea9c160b6c057dfb48ad0f9f416c2a24))\n\n## [2.1.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.1.3...@sapphire/plugin-api@2.1.4) (2021-05-02)\n\n### Bug Fixes\n\n-   drop the `www.` from the SapphireJS URL ([a86049f](https://github.com/sapphiredev/plugins/commit/a86049f185f0ccb12d61379dd82255b36d4fa145))\n-   update all the SapphireJS URLs from `.com` to `.dev` ([c5fd156](https://github.com/sapphiredev/plugins/commit/c5fd15691abb9a9712dc4b8aebd8400f6d91f719))\n\n## [2.1.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.1.2...@sapphire/plugin-api@2.1.3) (2021-04-21)\n\n### Bug Fixes\n\n-   change all Sapphire URLs from \"project\"->\"community\" & use our domain where applicable üë®‚Äçüåæüöú ([#75](https://github.com/sapphiredev/plugins/issues/75)) ([e437dc4](https://github.com/sapphiredev/plugins/commit/e437dc45fcd4d22ab2dcdb0e70c67cc5856883c0))\n\n## [2.1.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.1.1...@sapphire/plugin-api@2.1.2) (2021-04-03)\n\n### Bug Fixes\n\n-   **api:** always set Domain on cookie ([90b76e9](https://github.com/sapphiredev/plugins/commit/90b76e9586f213745517c1937437b7c48e4cafb0))\n\n## [2.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.1.0...@sapphire/plugin-api@2.1.1) (2021-04-03)\n\n### Bug Fixes\n\n-   **api:** fixed types for CookieStore ([83420f4](https://github.com/sapphiredev/plugins/commit/83420f46dfbcfba3477aa4db0897dc4aacc2118e))\n\n# [2.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.5...@sapphire/plugin-api@2.1.0) (2021-04-03)\n\n### Features\n\n-   **api:** add domainOverwrite to ServerOptions.auth ([#73](https://github.com/sapphiredev/plugins/issues/73)) ([32f9222](https://github.com/sapphiredev/plugins/commit/32f922240438b5587e4e51c76fe28babb1a5811f))\n\n## [2.0.5](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.4...@sapphire/plugin-api@2.0.5) (2021-04-03)\n\n### Bug Fixes\n\n-   **api:** fixed how domain is retrieved for cookies ([#72](https://github.com/sapphiredev/plugins/issues/72)) ([bd5302f](https://github.com/sapphiredev/plugins/commit/bd5302fca79606f887bed19ffc828dccbecdb991))\n\n## [2.0.4](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.3...@sapphire/plugin-api@2.0.4) (2021-03-16)\n\n### Bug Fixes\n\n-   update dependencies, add tslib, bump framework to v1.0.0 ([880b761](https://github.com/sapphiredev/plugins/commit/880b7614d857f23fcbcd351e69795c451a95f49c))\n\n## [2.0.3](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.2...@sapphire/plugin-api@2.0.3) (2021-02-16)\n\n### Bug Fixes\n\n-   **plugin-api:** automatically remove cookie on invalid token ([#62](https://github.com/sapphiredev/plugins/issues/62)) ([5ce667e](https://github.com/sapphiredev/plugins/commit/5ce667ed6fc1eb1b2b88fea7698041d71c4579b7))\n\n## [2.0.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.1...@sapphire/plugin-api@2.0.2) (2021-02-13)\n\n### Bug Fixes\n\n-   **plugin-api:** `expires_in` is in seconds, not milliseconds ([#60](https://github.com/sapphiredev/plugins/issues/60)) ([fccfab5](https://github.com/sapphiredev/plugins/commit/fccfab5321791a80dd30b541fca207b87acba4d2))\n\n## [2.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@2.0.0...@sapphire/plugin-api@2.0.1) (2021-02-07)\n\n**Note:** Version bump only for package @sapphire/plugin-api\n\n# [2.0.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.5.2...@sapphire/plugin-api@2.0.0) (2021-02-03)\n\n### Features\n\n-   **api:** update for @sapphire/framework alpha 5 ([#53](https://github.com/sapphiredev/plugins/issues/53)) ([fe51322](https://github.com/sapphiredev/plugins/commit/fe513225a671072acd6904165393cb0e3d078464))\n\n### BREAKING CHANGES\n\n-   **api:** refer to breaking changes in [@sapphire/framework v1.0.0-alpha.5](https://github.com/sapphiredev/framework/releases/tag/v1.0.0-alpha.5)\n\n## [1.5.2](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.5.1...@sapphire/plugin-api@1.5.2) (2021-01-28)\n\n### Bug Fixes\n\n-   **plugin-api:** swap condition ([27742f2](https://github.com/sapphiredev/plugins/commit/27742f23f71fbbc79b9e6606da9cfc4d48a891ae))\n\n## [1.5.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.5.0...@sapphire/plugin-api@1.5.1) (2021-01-28)\n\n### Bug Fixes\n\n-   add additional peer dependencies ([d67820a](https://github.com/sapphiredev/plugins/commit/d67820ab2e0390980c785b56d4194c05fa59b1ba))\n-   **plugin-api:** fixed typo ([#50](https://github.com/sapphiredev/plugins/issues/50)) ([d25c674](https://github.com/sapphiredev/plugins/commit/d25c674f2463f8bbe865f34ca5a6ef4c5b26f434))\n\n# [1.5.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.4.0...@sapphire/plugin-api@1.5.0) (2021-01-28)\n\n### Features\n\n-   **plugin-api:** make LoginDataTransformer accept Awaited<LoginData> ([#49](https://github.com/sapphiredev/plugins/issues/49)) ([666e0a2](https://github.com/sapphiredev/plugins/commit/666e0a2adfb00510fa303f8b3d796eb00409fd38))\n\n# [1.4.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.3.1...@sapphire/plugin-api@1.4.0) (2021-01-27)\n\n### Features\n\n-   **plugin-api:** added Auth#{fetchData,transformers}, fixed Oauth bug ([#48](https://github.com/sapphiredev/plugins/issues/48)) ([957a63b](https://github.com/sapphiredev/plugins/commit/957a63be9b783521d1a95015369d9e2530a41f55))\n\n## [1.3.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.3.0...@sapphire/plugin-api@1.3.1) (2021-01-23)\n\n### Bug Fixes\n\n-   **plugin-api:** return null instead of throwing error ([#46](https://github.com/sapphiredev/plugins/issues/46)) ([7a0cf3d](https://github.com/sapphiredev/plugins/commit/7a0cf3d6d135ae4ab5de72e9e0c22446b3a9fffd))\n\n# [1.3.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.2.0...@sapphire/plugin-api@1.3.0) (2021-01-09)\n\n### Bug Fixes\n\n-   **api:** update to latest discord-api-types ([6a46797](https://github.com/sapphiredev/plugins/commit/6a4679770f44b4930016280963c0fe4563c48bf2))\n\n### Features\n\n-   **api:** add media parsers ([#39](https://github.com/sapphiredev/plugins/issues/39)) ([18fac10](https://github.com/sapphiredev/plugins/commit/18fac107e9210a8c66da6b7cc5d3b24ab47a07e1))\n\n# [1.2.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.1.1...@sapphire/plugin-api@1.2.0) (2020-12-28)\n\n### Bug Fixes\n\n-   **api:** correct the registered paths ([986dc5d](https://github.com/sapphiredev/plugins/commit/986dc5d6d6c37b071b09f655853998c2596efd10))\n-   **api:** resolved a few critical bugs ([#30](https://github.com/sapphiredev/plugins/issues/30)) ([fc479c5](https://github.com/sapphiredev/plugins/commit/fc479c5c487303a21bad1d7023a40437ec328d17))\n-   **api:** resolved all bugs with oauth2 ([#31](https://github.com/sapphiredev/plugins/issues/31)) ([d7c4ad4](https://github.com/sapphiredev/plugins/commit/d7c4ad47af1ff693c9fffc83a078eab4ffb6c33c))\n-   **api,logger:** add type augments to index.ts ([ae1f4da](https://github.com/sapphiredev/plugins/commit/ae1f4da9671a531edf10555242e21f39eb3b0d17))\n-   **api,logger:** properly export ESM register ([7cf7ea9](https://github.com/sapphiredev/plugins/commit/7cf7ea9a9c91f73874035b0512292cc08d93e38e))\n-   **api,logger:** third attempt at fixing register and types ([faa3ee2](https://github.com/sapphiredev/plugins/commit/faa3ee2f53d2ca1153a7eff2a64e2abf3feaae85))\n\n### Features\n\n-   **api:** handle route errors ([#33](https://github.com/sapphiredev/plugins/issues/33)) ([bc3c6f6](https://github.com/sapphiredev/plugins/commit/bc3c6f619a8f27fcf5b505c441fb95f9ef439d72))\n\n## [1.1.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.1.0...@sapphire/plugin-api@1.1.1) (2020-12-24)\n\n**Note:** Version bump only for package @sapphire/plugin-api\n\n# [1.1.0](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.0.1...@sapphire/plugin-api@1.1.0) (2020-12-24)\n\n### Features\n\n-   added plugin-logger ([#25](https://github.com/sapphiredev/plugins/issues/25)) ([192a8ca](https://github.com/sapphiredev/plugins/commit/192a8cac6c34c4dd1cc8e12dd5ba3307926c467d))\n\n## [1.0.1](https://github.com/sapphiredev/plugins/compare/@sapphire/plugin-api@1.0.0...@sapphire/plugin-api@1.0.1) (2020-12-22)\n\n### Bug Fixes\n\n-   exclude tsbuildinfo ([3e37278](https://github.com/sapphiredev/plugins/commit/3e37278009e6842fe783e4ce31ab359fca6aef44))\n\n# 1.0.0 (2020-12-22)\n\n### Features\n\n-   finished API ([#22](https://github.com/sapphiredev/plugins/issues/22)) ([a647112](https://github.com/sapphiredev/plugins/commit/a6471129ddab96146987a1dafa90f0576de8e2f2))\n-   make API framework agnostic ([#24](https://github.com/sapphiredev/plugins/issues/24)) ([4067d70](https://github.com/sapphiredev/plugins/commit/4067d70dc9a6f0f4f7cf414eff8c1c785f7f0e86))\n-   **api:** add api plugin ([d87c7ad](https://github.com/sapphiredev/plugins/commit/d87c7adf8555f948fde31381969d3ebe2f0102f4))\n",
  "classes": [
    {
      "id": 1,
      "name": "ApiRequest",
      "source": {
        "line": 4,
        "file": "ApiRequest.ts",
        "path": "packages/api/src/lib/structures/api",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiRequest.ts#L4"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "\"http\".IncomingMessage",
        "packageName": "@types/node",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 56,
        "name": "constructor",
        "source": {
          "line": 1043,
          "file": "http.d.ts",
          "path": "node_modules/@types/node",
          "url": null
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1,
        "accessibility": "public",
        "parameters": [
          {
            "id": 58,
            "name": "socket",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "\"net\".Socket",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 63,
          "name": "aborted",
          "source": {
            "line": 1050,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The `message.aborted` property will be `true` if the request has\nbeen aborted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v10.1.0"
              },
              {
                "name": "deprecated",
                "text": "Since v17.0.0,v16.12.0 - Check `message.destroyed` from <a href=\"stream.html#class-streamreadable\" class=\"type\">stream.Readable</a>."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 62,
          "name": "auth",
          "source": {
            "line": 27,
            "file": "ApiRequest.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiRequest.ts#L27"
          },
          "comment": {
            "description": "The authorization information. This field indicates three possible values:\n\n- `undefined`: The authorization middleware has not been executed yet.\n- `null`: The user is not authorized.\n- `AuthData`: The user is authorized.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": 1119,
                "name": "AuthData",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 61,
          "name": "body",
          "source": {
            "line": 18,
            "file": "ApiRequest.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiRequest.ts#L18"
          },
          "comment": {
            "description": "The body that was sent by the user.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 99,
          "name": "closed",
          "source": {
            "line": 134,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is true after 'close' has been emitted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 67,
          "name": "complete",
          "source": {
            "line": 1085,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The `message.complete` property will be `true` if a complete HTTP message has\nbeen received and successfully parsed.\n\nThis property is particularly useful as a means of determining if a client or\nserver fully transmitted a message before a connection was terminated:\n\n```js\nconst req = http.request({\n  host: '127.0.0.1',\n  port: 8080,\n  method: 'POST'\n}, (res) => {\n  res.resume();\n  res.on('end', () => {\n    if (!res.complete)\n      console.error(\n        'The connection was terminated while the message was still being sent');\n  });\n});\n```",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 68,
          "name": "connection",
          "source": {
            "line": 1091,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Alias for `message.socket`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.90"
              },
              {
                "name": "deprecated",
                "text": "Since v16.0.0 - Use `socket`."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"net\".Socket",
            "packageName": "@types/node",
            "typeArguments": []
          }
        },
        {
          "id": 98,
          "name": "destroyed",
          "source": {
            "line": 129,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` after `readable.destroy()` has been called.",
            "blockTags": [
              {
                "name": "since",
                "text": "v8.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 100,
          "name": "errored",
          "source": {
            "line": 139,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Returns error if the stream has been destroyed with an error.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Error",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 70,
          "name": "headers",
          "source": {
            "line": 1128,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The request/response headers object.\n\nKey-value pairs of header names and values. Header names are lower-cased.\n\n```js\n// Prints something like:\n//\n// { 'user-agent': 'curl/7.22.0',\n//   host: '127.0.0.1:8000',\n//   accept: '*' }\nconsole.log(request.getHeaders());\n```\n\nDuplicates in raw headers are handled in the following ways, depending on the\nheader name:\n\n* Duplicates of `age`, `authorization`, `content-length`, `content-type`,`etag`, `expires`, `from`, `host`, `if-modified-since`, `if-unmodified-since`,`last-modified`, `location`,\n`max-forwards`, `proxy-authorization`, `referer`,`retry-after`, `server`, or `user-agent` are discarded.\n* `set-cookie` is always an array. Duplicates are added to the array.\n* For duplicate `cookie` headers, the values are joined together with '; '.\n* For all other headers, the values are joined together with ', '.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.5"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"http\".IncomingHttpHeaders",
            "packageName": "@types/node",
            "typeArguments": []
          }
        },
        {
          "id": 71,
          "name": "headersDistinct",
          "source": {
            "line": 1142,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Similar to `message.headers`, but there is no join logic and the values are always arrays of strings, even for headers received just once.\n\n```js\n// Prints something like:\n//\n// { 'user-agent': ['curl/7.22.0'],\n//   host: ['127.0.0.1:8000'],\n//   accept: ['*'] }\nconsole.log(request.headersDistinct);\n```",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.3.0, v16.17.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "NodeJS.Dict",
            "packageName": "@types/node",
            "typeArguments": [
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "id": 64,
          "name": "httpVersion",
          "source": {
            "line": 1059,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "In case of server request, the HTTP version sent by the client. In the case of\nclient response, the HTTP version of the connected-to server.\nProbably either `'1.1'` or `'1.0'`.\n\nAlso `message.httpVersionMajor` is the first integer and`message.httpVersionMinor` is the second.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.1"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 65,
          "name": "httpVersionMajor",
          "source": {
            "line": 1060,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 66,
          "name": "httpVersionMinor",
          "source": {
            "line": 1061,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 82,
          "name": "method",
          "source": {
            "line": 1196,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "**Only valid for request obtained from {@link Server}.**\n\nThe request method as a string. Read only. Examples: `'GET'`, `'DELETE'`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.1"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 60,
          "name": "params",
          "source": {
            "line": 13,
            "file": "ApiRequest.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiRequest.ts#L13"
          },
          "comment": {
            "description": "The URI parameters.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Record",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 59,
          "name": "query",
          "source": {
            "line": 8,
            "file": "ApiRequest.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiRequest.ts#L8"
          },
          "comment": {
            "description": "The query parameters.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Record",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 72,
          "name": "rawHeaders",
          "source": {
            "line": 1167,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The raw request/response headers list exactly as they were received.\n\nThe keys and values are in the same list. It is _not_ a\nlist of tuples. So, the even-numbered offsets are key values, and the\nodd-numbered offsets are the associated values.\n\nHeader names are not lowercased, and duplicates are not merged.\n\n```js\n// Prints something like:\n//\n// [ 'user-agent',\n//   'this is invalid because there can be only one',\n//   'User-Agent',\n//   'curl/7.22.0',\n//   'Host',\n//   '127.0.0.1:8000',\n//   'ACCEPT',\n//   '*' ]\nconsole.log(request.rawHeaders);\n```",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.11.6"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 75,
          "name": "rawTrailers",
          "source": {
            "line": 1184,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The raw request/response trailer keys and values exactly as they were\nreceived. Only populated at the `'end'` event.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.11.6"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 90,
          "name": "readable",
          "source": {
            "line": 85,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` if it is safe to call `readable.read()`, which means\nthe stream has not been destroyed or emitted `'error'` or `'end'`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v11.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 89,
          "name": "readableAborted",
          "source": {
            "line": 79,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Returns whether the stream was destroyed or errored before emitting `'end'`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v16.8.0"
              }
            ],
            "modifierTags": [
              "@experimental"
            ]
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 91,
          "name": "readableDidRead",
          "source": {
            "line": 91,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Returns whether `'data'` has been emitted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v16.7.0, v14.18.0"
              }
            ],
            "modifierTags": [
              "@experimental"
            ]
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 92,
          "name": "readableEncoding",
          "source": {
            "line": 96,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Getter for the property `encoding` of a given `Readable` stream. The `encoding`property can be set using the `readable.setEncoding()` method.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.7.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "__global.BufferEncoding",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 93,
          "name": "readableEnded",
          "source": {
            "line": 101,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Becomes `true` when `'end'` event is emitted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.9.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 94,
          "name": "readableFlowing",
          "source": {
            "line": 107,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This property reflects the current state of a `Readable` stream as described\nin the `Three states` section.",
            "blockTags": [
              {
                "name": "since",
                "text": "v9.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "boolean"
              }
            ]
          }
        },
        {
          "id": 95,
          "name": "readableHighWaterMark",
          "source": {
            "line": 112,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Returns the value of `highWaterMark` passed when creating this `Readable`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v9.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 96,
          "name": "readableLength",
          "source": {
            "line": 119,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the `highWaterMark`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v9.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 97,
          "name": "readableObjectMode",
          "source": {
            "line": 124,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Getter for the property `objectMode` of a given `Readable` stream.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 69,
          "name": "socket",
          "source": {
            "line": 1103,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The `net.Socket` object associated with the connection.\n\nWith HTTPS support, use `request.socket.getPeerCertificate()` to obtain the\nclient's authentication details.\n\nThis property is guaranteed to be an instance of the `net.Socket` class,\na subclass of `stream.Duplex`, unless the user specified a socket\ntype other than `net.Socket` or internally nulled.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"net\".Socket",
            "packageName": "@types/node",
            "typeArguments": []
          }
        },
        {
          "id": 84,
          "name": "statusCode",
          "source": {
            "line": 1243,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "**Only valid for response obtained from {@link ClientRequest}.**\n\nThe 3-digit HTTP response status code. E.G. `404`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.1"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 85,
          "name": "statusMessage",
          "source": {
            "line": 1250,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "**Only valid for response obtained from {@link ClientRequest}.**\n\nThe HTTP response status message (reason phrase). E.G. `OK` or `Internal Server Error`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.11.10"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 73,
          "name": "trailers",
          "source": {
            "line": 1172,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The request/response trailers object. Only populated at the `'end'` event.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "NodeJS.Dict",
            "packageName": "@types/node",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 74,
          "name": "trailersDistinct",
          "source": {
            "line": 1178,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Similar to `message.trailers`, but there is no join logic and the values are always arrays of strings, even for headers received just once.\nOnly populated at the `'end'` event.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.3.0, v16.17.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "NodeJS.Dict",
            "packageName": "@types/node",
            "typeArguments": [
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "id": 83,
          "name": "url",
          "source": {
            "line": 1236,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "**Only valid for request obtained from {@link Server}.**\n\nRequest URL string. This contains only the URL that is present in the actual\nHTTP request. Take the following request:\n\n```http\nGET /status?name=ryan HTTP/1.1\nAccept: text/plain\n```\n\nTo parse the URL into its parts:\n\n```js\nnew URL(request.url, `http://${request.getHeaders().host}`);\n```\n\nWhen `request.url` is `'/status?name=ryan'` and`request.getHeaders().host` is `'localhost:3000'`:\n\n```console\n$ node\n> new URL(request.url, `http://${request.getHeaders().host}`)\nURL {\n  href: 'http://localhost:3000/status?name=ryan',\n  origin: 'http://localhost:3000',\n  protocol: 'http:',\n  username: '',\n  password: '',\n  host: 'localhost:3000',\n  hostname: 'localhost',\n  port: '3000',\n  pathname: '/status',\n  search: '?name=ryan',\n  searchParams: URLSearchParams { 'name' => 'ryan' },\n  hash: ''\n}\n```",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.1.90"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 53,
          "name": "captureRejectionSymbol",
          "source": {
            "line": 328,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 53,
              "name": "EventEmitter.captureRejectionSymbol",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        },
        {
          "id": 54,
          "name": "captureRejections",
          "source": {
            "line": 333,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Sets or gets the default captureRejection value for all emitters.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 55,
          "name": "defaultMaxListeners",
          "source": {
            "line": 334,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 52,
          "name": "errorMonitor",
          "source": {
            "line": 327,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 52,
              "name": "EventEmitter.errorMonitor",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        }
      ],
      "methods": [
        {
          "id": 427,
          "name": "[asyncIterator]",
          "source": {
            "line": 503,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 428,
              "name": "[asyncIterator]",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 101,
          "name": "_construct",
          "source": {
            "line": 141,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 102,
              "name": "_construct",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 103,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 104,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 141,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 105,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 141,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 106,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 136,
          "name": "_destroy",
          "source": {
            "line": 423,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 137,
              "name": "_destroy",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 138,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Error",
                        "packageName": "typescript",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 139,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 140,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 423,
                          "character": 52
                        }
                      ],
                      "signatures": [
                        {
                          "id": 141,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 423,
                              "character": 52
                            }
                          ],
                          "parameters": [
                            {
                              "id": 142,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 107,
          "name": "_read",
          "source": {
            "line": 142,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 108,
              "name": "_read",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 109,
                  "name": "size",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 143,
          "name": "addListener",
          "source": {
            "line": 447,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 144,
              "name": "addListener",
              "comment": {
                "description": "Event emitter\nThe defined events on documents including:\n1. close\n2. data\n3. end\n4. error\n5. pause\n6. readable\n7. resume",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 145,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 146,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 147,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 447,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 148,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 447,
                              "character": 50
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 149,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 150,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 151,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 152,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 448,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 153,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 448,
                              "character": 49
                            }
                          ],
                          "parameters": [
                            {
                              "id": 154,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 155,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 156,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 157,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 158,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 449,
                          "character": 48
                        }
                      ],
                      "signatures": [
                        {
                          "id": 159,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 449,
                              "character": 48
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 160,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 161,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 162,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 163,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 450,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 164,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 450,
                              "character": 50
                            }
                          ],
                          "parameters": [
                            {
                              "id": 165,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 166,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 167,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 168,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 169,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 451,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 170,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 451,
                              "character": 50
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 171,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 172,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 173,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 174,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 452,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 175,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 452,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 176,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 177,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 178,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 179,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 453,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 180,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 453,
                              "character": 51
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 181,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 182,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 183,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 184,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 454,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 185,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 454,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 186,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 86,
          "name": "destroy",
          "source": {
            "line": 1256,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 87,
              "name": "destroy",
              "comment": {
                "description": "Calls `destroy()` on the socket that received the `IncomingMessage`. If `error`is provided, an `'error'` event is emitted on the socket and `error` is passed\nas an argument to any listeners on the event.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 88,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 187,
          "name": "emit",
          "source": {
            "line": 455,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 188,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 189,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 190,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 191,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 192,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 193,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 194,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 195,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 196,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 197,
                  "name": "err",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 198,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 199,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 200,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 201,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 202,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 203,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 204,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 205,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 206,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 461,
          "name": "eventNames",
          "source": {
            "line": 673,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 462,
              "name": "eventNames",
              "comment": {
                "description": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v6.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "intrinsic",
                      "type": "symbol"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 449,
          "name": "getMaxListeners",
          "source": {
            "line": 526,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 450,
              "name": "getMaxListeners",
              "comment": {
                "description": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 120,
          "name": "isPaused",
          "source": {
            "line": 302,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 121,
              "name": "isPaused",
              "comment": {
                "description": "The `readable.isPaused()` method returns the current operating state of the`Readable`. This is used primarily by the mechanism that underlies the`readable.pipe()` method. In most\ntypical cases, there will be no reason to\nuse this method directly.\n\n```js\nconst readable = new stream.Readable();\n\nreadable.isPaused(); // === false\nreadable.pause();\nreadable.isPaused(); // === true\nreadable.resume();\nreadable.isPaused(); // === false\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.11.14"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 457,
          "name": "listenerCount",
          "source": {
            "line": 620,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 458,
              "name": "listenerCount",
              "comment": {
                "description": "Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v3.2.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 459,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 460,
                  "name": "listener",
                  "comment": {
                    "description": "The event handler function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 451,
          "name": "listeners",
          "source": {
            "line": 539,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 452,
              "name": "listeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 453,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 436,
          "name": "off",
          "source": {
            "line": 499,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 437,
              "name": "off",
              "comment": {
                "description": "Alias for `emitter.removeListener()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v10.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 438,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 439,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 440,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 499,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 441,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 499,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 442,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 207,
          "name": "on",
          "source": {
            "line": 463,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 208,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 209,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 210,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 211,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 463,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 212,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 463,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 213,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 214,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 215,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 216,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 464,
                          "character": 40
                        }
                      ],
                      "signatures": [
                        {
                          "id": 217,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 464,
                              "character": 40
                            }
                          ],
                          "parameters": [
                            {
                              "id": 218,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 219,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 220,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 221,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 222,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 465,
                          "character": 39
                        }
                      ],
                      "signatures": [
                        {
                          "id": 223,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 465,
                              "character": 39
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 224,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 225,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 226,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 227,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 466,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 228,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 466,
                              "character": 41
                            }
                          ],
                          "parameters": [
                            {
                              "id": 229,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 230,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 231,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 232,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 233,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 467,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 234,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 467,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 235,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 236,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 237,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 238,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 468,
                          "character": 44
                        }
                      ],
                      "signatures": [
                        {
                          "id": 239,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 468,
                              "character": 44
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 240,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 241,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 242,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 243,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 469,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 244,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 469,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 245,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 246,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 247,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 248,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 470,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 249,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 470,
                              "character": 49
                            }
                          ],
                          "parameters": [
                            {
                              "id": 250,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 251,
          "name": "once",
          "source": {
            "line": 471,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 252,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 253,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 254,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 255,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 471,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 256,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 471,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 257,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 258,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 259,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 260,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 472,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 261,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 472,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 262,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 263,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 264,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 265,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 266,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 473,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 267,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 473,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 268,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 269,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 270,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 271,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 474,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 272,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 474,
                              "character": 43
                            }
                          ],
                          "parameters": [
                            {
                              "id": 273,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 274,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 275,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 276,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 277,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 475,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 278,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 475,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 279,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 280,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 281,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 282,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 476,
                          "character": 46
                        }
                      ],
                      "signatures": [
                        {
                          "id": 283,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 476,
                              "character": 46
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 284,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 285,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 286,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 287,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 477,
                          "character": 44
                        }
                      ],
                      "signatures": [
                        {
                          "id": 288,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 477,
                              "character": 44
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 289,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 290,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 291,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 292,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 478,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 293,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 478,
                              "character": 51
                            }
                          ],
                          "parameters": [
                            {
                              "id": 294,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 116,
          "name": "pause",
          "source": {
            "line": 266,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 117,
              "name": "pause",
              "comment": {
                "description": "The `readable.pause()` method will cause a stream in flowing mode to stop\nemitting `'data'` events, switching out of flowing mode. Any data that\nbecomes available will remain in the internal buffer.\n\n```js\nconst readable = getReadableStreamSomehow();\nreadable.on('data', (chunk) => {\n  console.log(`Received ${chunk.length} bytes of data.`);\n  readable.pause();\n  console.log('There will be no additional data for 1 second.');\n  setTimeout(() => {\n    console.log('Now data will start flowing again.');\n    readable.resume();\n  }, 1000);\n});\n```\n\nThe `readable.pause()` method has no effect if there is a `'readable'`event listener.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 429,
          "name": "pipe",
          "source": {
            "line": 26,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 430,
              "name": "pipe",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 431,
                  "name": "T",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "NodeJS.WritableStream",
                    "packageName": "@types/node",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 432,
                  "name": "destination",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 433,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 434,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "children": [
                        {
                          "id": 435,
                          "name": "end",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 29,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            435
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 28,
                          "character": 22
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": -1,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 295,
          "name": "prependListener",
          "source": {
            "line": 479,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 296,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 297,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 298,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 299,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 479,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 300,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 479,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 301,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 302,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 303,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 304,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 480,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 305,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 480,
                              "character": 53
                            }
                          ],
                          "parameters": [
                            {
                              "id": 306,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 307,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 308,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 309,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 310,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 481,
                          "character": 52
                        }
                      ],
                      "signatures": [
                        {
                          "id": 311,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 481,
                              "character": 52
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 312,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 313,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 314,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 315,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 482,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 316,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 482,
                              "character": 54
                            }
                          ],
                          "parameters": [
                            {
                              "id": 317,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 318,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 319,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 320,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 321,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 483,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 322,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 483,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 323,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 324,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 325,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 326,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 484,
                          "character": 57
                        }
                      ],
                      "signatures": [
                        {
                          "id": 327,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 484,
                              "character": 57
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 328,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 329,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 330,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 331,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 485,
                          "character": 55
                        }
                      ],
                      "signatures": [
                        {
                          "id": 332,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 485,
                              "character": 55
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 333,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 334,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 335,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 336,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 486,
                          "character": 62
                        }
                      ],
                      "signatures": [
                        {
                          "id": 337,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 486,
                              "character": 62
                            }
                          ],
                          "parameters": [
                            {
                              "id": 338,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 339,
          "name": "prependOnceListener",
          "source": {
            "line": 487,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 340,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 341,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 342,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 343,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 487,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 344,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 487,
                              "character": 58
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 345,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 346,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 347,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 348,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 488,
                          "character": 57
                        }
                      ],
                      "signatures": [
                        {
                          "id": 349,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 488,
                              "character": 57
                            }
                          ],
                          "parameters": [
                            {
                              "id": 350,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 351,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 352,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 353,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 354,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 489,
                          "character": 56
                        }
                      ],
                      "signatures": [
                        {
                          "id": 355,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 489,
                              "character": 56
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 356,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 357,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 358,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 359,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 490,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 360,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 490,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 361,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 362,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 363,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 364,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 365,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 491,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 366,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 491,
                              "character": 58
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 367,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 368,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 369,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 370,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 492,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 371,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 492,
                              "character": 61
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 372,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 373,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 374,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 375,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 493,
                          "character": 59
                        }
                      ],
                      "signatures": [
                        {
                          "id": 376,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 493,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 377,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 378,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 379,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 380,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 494,
                          "character": 66
                        }
                      ],
                      "signatures": [
                        {
                          "id": 381,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 494,
                              "character": 66
                            }
                          ],
                          "parameters": [
                            {
                              "id": 382,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 132,
          "name": "push",
          "source": {
            "line": 422,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 133,
              "name": "push",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 134,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 135,
                  "name": "encoding",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 454,
          "name": "rawListeners",
          "source": {
            "line": 569,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 455,
              "name": "rawListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v9.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 456,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 110,
          "name": "read",
          "source": {
            "line": 219,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 111,
              "name": "read",
              "comment": {
                "description": "The `readable.read()` method reads data out of the internal buffer and\nreturns it. If no data is available to be read, `null` is returned. By default,\nthe data is returned as a `Buffer` object unless an encoding has been\nspecified using the `readable.setEncoding()` method or the stream is operating\nin object mode.\n\nThe optional `size` argument specifies a specific number of bytes to read. If`size` bytes are not available to be read, `null` will be returned _unless_the stream has ended, in which\ncase all of the data remaining in the internal\nbuffer will be returned.\n\nIf the `size` argument is not specified, all of the data contained in the\ninternal buffer will be returned.\n\nThe `size` argument must be less than or equal to 1 GiB.\n\nThe `readable.read()` method should only be called on `Readable` streams\noperating in paused mode. In flowing mode, `readable.read()` is called\nautomatically until the internal buffer is fully drained.\n\n```js\nconst readable = getReadableStreamSomehow();\n\n// 'readable' may be triggered multiple times as data is buffered in\nreadable.on('readable', () => {\n  let chunk;\n  console.log('Stream is readable (new data received in buffer)');\n  // Use a loop to make sure we read all currently available data\n  while (null !== (chunk = readable.read())) {\n    console.log(`Read ${chunk.length} bytes of data...`);\n  }\n});\n\n// 'end' will be triggered once when there is no more data available\nreadable.on('end', () => {\n  console.log('Reached end of stream.');\n});\n```\n\nEach call to `readable.read()` returns a chunk of data, or `null`. The chunks\nare not concatenated. A `while` loop is necessary to consume all data\ncurrently in the buffer. When reading a large file `.read()` may return `null`,\nhaving consumed all buffered content so far, but there is still more data to\ncome not yet buffered. In this case a new `'readable'` event will be emitted\nwhen there is more data in the buffer. Finally the `'end'` event will be\nemitted when there is no more data to come.\n\nTherefore to read a file's whole contents from a `readable`, it is necessary\nto collect chunks across multiple `'readable'` events:\n\n```js\nconst chunks = [];\n\nreadable.on('readable', () => {\n  let chunk;\n  while (null !== (chunk = readable.read())) {\n    chunks.push(chunk);\n  }\n});\n\nreadable.on('end', () => {\n  const content = chunks.join('');\n});\n```\n\nA `Readable` stream in object mode will always return a single item from\na call to `readable.read(size)`, regardless of the value of the`size` argument.\n\nIf the `readable.read()` method returns a chunk of data, a `'data'` event will\nalso be emitted.\n\nCalling {@link read} after the `'end'` event has\nbeen emitted will return `null`. No runtime error will be raised.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 112,
                  "name": "size",
                  "comment": {
                    "description": "Optional argument to specify how much data to read.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ]
        },
        {
          "id": 443,
          "name": "removeAllListeners",
          "source": {
            "line": 510,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 444,
              "name": "removeAllListeners",
              "comment": {
                "description": "Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 445,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 383,
          "name": "removeListener",
          "source": {
            "line": 495,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 384,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 385,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 386,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 387,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 495,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 388,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 495,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 389,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 390,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "data"
                  }
                },
                {
                  "id": 391,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 392,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 496,
                          "character": 52
                        }
                      ],
                      "signatures": [
                        {
                          "id": 393,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 496,
                              "character": 52
                            }
                          ],
                          "parameters": [
                            {
                              "id": 394,
                              "name": "chunk",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 395,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 396,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "end"
                  }
                },
                {
                  "id": 397,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 398,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 497,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 399,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 497,
                              "character": 51
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 400,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 401,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 402,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 403,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 498,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 404,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 498,
                              "character": 53
                            }
                          ],
                          "parameters": [
                            {
                              "id": 405,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 406,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 407,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pause"
                  }
                },
                {
                  "id": 408,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 409,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 499,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 410,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 499,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 411,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 412,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "readable"
                  }
                },
                {
                  "id": 413,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 414,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 500,
                          "character": 56
                        }
                      ],
                      "signatures": [
                        {
                          "id": 415,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 500,
                              "character": 56
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 416,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 417,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "resume"
                  }
                },
                {
                  "id": 418,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 419,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 501,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 420,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 501,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 421,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 422,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 423,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 424,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 502,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 425,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 502,
                              "character": 61
                            }
                          ],
                          "parameters": [
                            {
                              "id": 426,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 118,
          "name": "resume",
          "source": {
            "line": 285,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 119,
              "name": "resume",
              "comment": {
                "description": "The `readable.resume()` method causes an explicitly paused `Readable` stream to\nresume emitting `'data'` events, switching the stream into flowing mode.\n\nThe `readable.resume()` method can be used to fully consume the data from a\nstream without actually processing any of that data:\n\n```js\ngetReadableStreamSomehow()\n  .resume()\n  .on('end', () => {\n    console.log('Reached the end, but did not read anything.');\n  });\n```\n\nThe `readable.resume()` method has no effect if there is a `'readable'`event listener.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 113,
          "name": "setEncoding",
          "source": {
            "line": 244,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 114,
              "name": "setEncoding",
              "comment": {
                "description": "The `readable.setEncoding()` method sets the character encoding for\ndata read from the `Readable` stream.\n\nBy default, no encoding is assigned and stream data will be returned as`Buffer` objects. Setting an encoding causes the stream data\nto be returned as strings of the specified encoding rather than as `Buffer`objects. For instance, calling `readable.setEncoding('utf8')` will cause the\noutput data to be interpreted as UTF-8 data, and passed as strings. Calling`readable.setEncoding('hex')` will cause the data to be encoded in hexadecimal\nstring format.\n\nThe `Readable` stream will properly handle multi-byte characters delivered\nthrough the stream that would otherwise become improperly decoded if simply\npulled from the stream as `Buffer` objects.\n\n```js\nconst readable = getReadableStreamSomehow();\nreadable.setEncoding('utf8');\nreadable.on('data', (chunk) => {\n  assert.equal(typeof chunk, 'string');\n  console.log('Got %d characters of string data:', chunk.length);\n});\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 115,
                  "name": "encoding",
                  "comment": {
                    "description": "The encoding to use.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 446,
          "name": "setMaxListeners",
          "source": {
            "line": 520,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 447,
              "name": "setMaxListeners",
              "comment": {
                "description": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.5"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 448,
                  "name": "n",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 76,
          "name": "setTimeout",
          "source": {
            "line": 1189,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 77,
              "name": "setTimeout",
              "comment": {
                "description": "Calls `message.socket.setTimeout(msecs, callback)`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.5.9"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 78,
                  "name": "msecs",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 79,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 80,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/http.d.ts",
                          "line": 1189,
                          "character": 45
                        }
                      ],
                      "signatures": [
                        {
                          "id": 81,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/http.d.ts",
                              "line": 1189,
                              "character": 45
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 122,
          "name": "unpipe",
          "source": {
            "line": 329,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 123,
              "name": "unpipe",
              "comment": {
                "description": "The `readable.unpipe()` method detaches a `Writable` stream previously attached\nusing the {@link pipe} method.\n\nIf the `destination` is not specified, then _all_ pipes are detached.\n\nIf the `destination` is specified, but no pipe is set up for it, then\nthe method does nothing.\n\n```js\nconst fs = require('fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// All the data from readable goes into 'file.txt',\n// but only for the first second.\nreadable.pipe(writable);\nsetTimeout(() => {\n  console.log('Stop writing to file.txt.');\n  readable.unpipe(writable);\n  console.log('Manually close the file stream.');\n  writable.end();\n}, 1000);\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 124,
                  "name": "destination",
                  "comment": {
                    "description": "Optional specific stream to unpipe",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "NodeJS.WritableStream",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 125,
          "name": "unshift",
          "source": {
            "line": 395,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 126,
              "name": "unshift",
              "comment": {
                "description": "Passing `chunk` as `null` signals the end of the stream (EOF) and behaves the\nsame as `readable.push(null)`, after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.\n\nThe `readable.unshift()` method pushes a chunk of data back into the internal\nbuffer. This is useful in certain situations where a stream is being consumed by\ncode that needs to \"un-consume\" some amount of data that it has optimistically\npulled out of the source, so that the data can be passed on to some other party.\n\nThe `stream.unshift(chunk)` method cannot be called after the `'end'` event\nhas been emitted or a runtime error will be thrown.\n\nDevelopers using `stream.unshift()` often should consider switching to\nuse of a `Transform` stream instead. See the `API for stream implementers` section for more information.\n\n```js\n// Pull off a header delimited by \\n\\n.\n// Use unshift() if we get too much.\n// Call the callback with (error, header, stream).\nconst { StringDecoder } = require('string_decoder');\nfunction parseHeader(stream, callback) {\n  stream.on('error', callback);\n  stream.on('readable', onReadable);\n  const decoder = new StringDecoder('utf8');\n  let header = '';\n  function onReadable() {\n    let chunk;\n    while (null !== (chunk = stream.read())) {\n      const str = decoder.write(chunk);\n      if (str.includes('\\n\\n')) {\n        // Found the header boundary.\n        const split = str.split(/\\n\\n/);\n        header += split.shift();\n        const remaining = split.join('\\n\\n');\n        const buf = Buffer.from(remaining, 'utf8');\n        stream.removeListener('error', callback);\n        // Remove the 'readable' listener before unshifting.\n        stream.removeListener('readable', onReadable);\n        if (buf.length)\n          stream.unshift(buf);\n        // Now the body of the message can be read from the stream.\n        callback(null, header, stream);\n        return;\n      }\n      // Still reading the header.\n      header += str;\n    }\n  }\n}\n```\n\nUnlike {@link push}, `stream.unshift(chunk)` will not\nend the reading process by resetting the internal reading state of the stream.\nThis can cause unexpected results if `readable.unshift()` is called during a\nread (i.e. from within a {@link _read} implementation on a\ncustom stream). Following the call to `readable.unshift()` with an immediate {@link push} will reset the reading state appropriately,\nhowever it is best to simply avoid calling `readable.unshift()` while in the\nprocess of performing a read.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.11"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 127,
                  "name": "chunk",
                  "comment": {
                    "description": "Chunk of data to unshift onto the read queue. For streams not operating in object mode, `chunk` must be a string, `Buffer`, `Uint8Array` or `null`. For object mode\nstreams, `chunk` may be any JavaScript value.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 128,
                  "name": "encoding",
                  "comment": {
                    "description": "Encoding of string chunks. Must be a valid `Buffer` encoding, such as `'utf8'` or `'ascii'`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 129,
          "name": "wrap",
          "source": {
            "line": 421,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 130,
              "name": "wrap",
              "comment": {
                "description": "Prior to Node.js 0.10, streams did not implement the entire `stream` module API\nas it is currently defined. (See `Compatibility` for more information.)\n\nWhen using an older Node.js library that emits `'data'` events and has a {@link pause} method that is advisory only, the`readable.wrap()` method can be used to create a `Readable`\nstream that uses\nthe old stream as its data source.\n\nIt will rarely be necessary to use `readable.wrap()` but the method has been\nprovided as a convenience for interacting with older Node.js applications and\nlibraries.\n\n```js\nconst { OldReader } = require('./old-api-module.js');\nconst { Readable } = require('stream');\nconst oreader = new OldReader();\nconst myReader = new Readable().wrap(oreader);\n\nmyReader.on('readable', () => {\n  myReader.read(); // etc.\n});\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 131,
                  "name": "stream",
                  "comment": {
                    "description": "An \"old style\" readable stream",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "NodeJS.ReadableStream",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "ApiRequest",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2,
          "name": "from",
          "source": {
            "line": 56,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 3,
              "name": "from",
              "comment": {
                "description": "A utility method for creating Readable Streams out of iterators.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 4,
                  "name": "iterable",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Iterable",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "AsyncIterable",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 5,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "internal.ReadableOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "internal.Readable",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 6,
          "name": "fromWeb",
          "source": {
            "line": 62,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 7,
              "name": "fromWeb",
              "comment": {
                "description": "A utility method for creating a `Readable` from a web `ReadableStream`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v17.0.0"
                  }
                ],
                "modifierTags": [
                  "@experimental"
                ]
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 8,
                  "name": "readableStream",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "\"stream/web\".ReadableStream",
                    "packageName": "@types/node",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 9,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Pick",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "internal.ReadableOptions",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "literal",
                            "value": "signal"
                          },
                          {
                            "kind": "literal",
                            "value": "encoding"
                          },
                          {
                            "kind": "literal",
                            "value": "highWaterMark"
                          },
                          {
                            "kind": "literal",
                            "value": "objectMode"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "internal.Readable",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 44,
          "name": "getEventListeners",
          "source": {
            "line": 299,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 45,
              "name": "getEventListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.2.0, v14.17.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 46,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "__global.NodeJS.EventEmitter",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "_DOMEventTarget",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 47,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 10,
          "name": "isDisturbed",
          "source": {
            "line": 67,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 11,
              "name": "isDisturbed",
              "comment": {
                "description": "Returns whether the stream has been read from or cancelled.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v16.8.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 12,
                  "name": "stream",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "NodeJS.ReadableStream",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "internal.Readable",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 40,
          "name": "listenerCount",
          "source": {
            "line": 271,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 41,
              "name": "listenerCount",
              "comment": {
                "description": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.12"
                  },
                  {
                    "name": "deprecated",
                    "text": "Since v3.2.0 - Use `listenerCount` instead."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 42,
                  "name": "emitter",
                  "comment": {
                    "description": "The emitter to query",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 43,
                  "name": "eventName",
                  "comment": {
                    "description": "The event name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 30,
          "name": "on",
          "source": {
            "line": 254,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 31,
              "name": "on",
              "comment": {
                "description": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v13.6.0, v12.16.0"
                  },
                  {
                    "name": "returns",
                    "text": "that iterates `eventName` events emitted by the `emitter`"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 32,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 33,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 34,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            },
            {
              "id": 35,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 36,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 37,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 38,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 39,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "once",
          "source": {
            "line": 194,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 17,
              "name": "once",
              "comment": {
                "description": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v11.13.0, v10.16.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 18,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_NodeEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 19,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 20,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 21,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 22,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_DOMEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 23,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 24,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 25,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 26,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 27,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 28,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 29,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 48,
          "name": "setMaxListeners",
          "source": {
            "line": 317,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 49,
              "name": "setMaxListeners",
              "comment": {
                "description": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 50,
                  "name": "n",
                  "comment": {
                    "description": "A non-negative number. The maximum number of listeners per `EventTarget` event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 51,
                  "name": "eventTargets",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "__global.NodeJS.EventEmitter",
                          "packageName": "@types/node",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "_DOMEventTarget",
                          "packageName": "@types/node",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 13,
          "name": "toWeb",
          "source": {
            "line": 73,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 14,
              "name": "toWeb",
              "comment": {
                "description": "A utility method for creating a web `ReadableStream` from a `Readable`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v17.0.0"
                  }
                ],
                "modifierTags": [
                  "@experimental"
                ]
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 15,
                  "name": "streamReadable",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "internal.Readable",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "\"stream/web\".ReadableStream",
                "packageName": "@types/node",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 463,
      "name": "ApiResponse",
      "source": {
        "line": 9,
        "file": "ApiResponse.ts",
        "path": "packages/api/src/lib/structures/api",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L9"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "\"http\".ServerResponse",
        "packageName": "@types/node",
        "typeArguments": [
          {
            "kind": "reference",
            "id": -1,
            "name": "Request",
            "packageName": null,
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [
        {
          "id": 1011,
          "name": "Request",
          "constraint": {
            "kind": "reference",
            "id": null,
            "name": "\"http\".IncomingMessage",
            "packageName": "@types/node",
            "typeArguments": []
          },
          "default": {
            "kind": "reference",
            "id": null,
            "name": "\"http\".IncomingMessage",
            "packageName": "@types/node",
            "typeArguments": []
          }
        }
      ],
      "construct": {
        "id": 511,
        "name": "constructor",
        "source": {
          "line": 649,
          "file": "http.d.ts",
          "path": "node_modules/@types/node",
          "url": null
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 463,
        "accessibility": "public",
        "parameters": [
          {
            "id": 514,
            "name": "req",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": -1,
              "name": "Request",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 590,
          "name": "chunkedEncoding",
          "source": {
            "line": 459,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 638,
          "name": "closed",
          "source": {
            "line": 584,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is true after 'close' has been emitted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 596,
          "name": "connection",
          "source": {
            "line": 477,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Aliases of `outgoingMessage.socket`",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.3.0"
              },
              {
                "name": "deprecated",
                "text": "Since v15.12.0,v14.17.1 - Use `socket` instead."
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "\"net\".Socket",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 515,
          "name": "cookies",
          "source": {
            "line": 13,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L13"
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1012,
            "name": "CookieStore",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 637,
          "name": "destroyed",
          "source": {
            "line": 579,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` after `writable.destroy()` has been called.",
            "blockTags": [
              {
                "name": "since",
                "text": "v8.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 639,
          "name": "errored",
          "source": {
            "line": 589,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Returns error if the stream has been destroyed with an error.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Error",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 594,
          "name": "finished",
          "source": {
            "line": 466,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "deprecated",
                "text": "Use `writableEnded` instead."
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 595,
          "name": "headersSent",
          "source": {
            "line": 471,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Read-only. `true` if the headers were sent, otherwise `false`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.9.3"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 589,
          "name": "req",
          "source": {
            "line": 458,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": -1,
            "name": "Request",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 593,
          "name": "sendDate",
          "source": {
            "line": 462,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 591,
          "name": "shouldKeepAlive",
          "source": {
            "line": 460,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 597,
          "name": "socket",
          "source": {
            "line": 485,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Reference to the underlying socket. Usually, users will not want to access\nthis property.\n\nAfter calling `outgoingMessage.end()`, this property will be nulled.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "\"net\".Socket",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 559,
          "name": "statusCode",
          "source": {
            "line": 625,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status code that will be sent to the client when\nthe headers get flushed.\n\n```js\nresponse.statusCode = 404;\n```\n\nAfter response header was sent to the client, this property indicates the\nstatus code which was sent out.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 560,
          "name": "statusMessage",
          "source": {
            "line": 640,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status message that will be sent to the client when\nthe headers get flushed. If this is left as `undefined` then the standard\nmessage for the status code will be used.\n\n```js\nresponse.statusMessage = 'Not found';\n```\n\nAfter response header was sent to the client, this property indicates the\nstatus message which was sent out.",
            "blockTags": [
              {
                "name": "since",
                "text": "v0.11.8"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 561,
          "name": "strictContentLength",
          "source": {
            "line": 648,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "If set to `true`, Node.js will check whether the `Content-Length` header value\nand the size of the body, in bytes, are equal. Mismatching the\n`Content-Length` header value will result in an `Error` being thrown,\nidentified by `code: 'ERR_HTTP_CONTENT_LENGTH_MISMATCH'`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v18.10.0, v16.18.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 592,
          "name": "useChunkedEncodingByDefault",
          "source": {
            "line": 461,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 630,
          "name": "writable",
          "source": {
            "line": 540,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` if it is safe to call `writable.write()`, which means\nthe stream has not been destroyed, errored or ended.",
            "blockTags": [
              {
                "name": "since",
                "text": "v11.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 636,
          "name": "writableCorked",
          "source": {
            "line": 574,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Number of times `writable.uncork()` needs to be\ncalled in order to fully uncork the stream.",
            "blockTags": [
              {
                "name": "since",
                "text": "v13.2.0, v12.16.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 631,
          "name": "writableEnded",
          "source": {
            "line": 546,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` after `writable.end()` has been called. This property\ndoes not indicate whether the data has been flushed, for this use `writable.writableFinished` instead.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.9.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 632,
          "name": "writableFinished",
          "source": {
            "line": 551,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is set to `true` immediately before the `'finish'` event is emitted.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.6.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 633,
          "name": "writableHighWaterMark",
          "source": {
            "line": 556,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Return the value of `highWaterMark` passed when creating this `Writable`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v9.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 634,
          "name": "writableLength",
          "source": {
            "line": 563,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This property contains the number of bytes (or objects) in the queue\nready to be written. The value provides introspection data regarding\nthe status of the `highWaterMark`.",
            "blockTags": [
              {
                "name": "since",
                "text": "v9.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 640,
          "name": "writableNeedDrain",
          "source": {
            "line": 594,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Is `true` if the stream's buffer has been full and stream will emit 'drain'.",
            "blockTags": [
              {
                "name": "since",
                "text": "v15.2.0, v14.17.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 635,
          "name": "writableObjectMode",
          "source": {
            "line": 568,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Getter for the property `objectMode` of a given `Writable` stream.",
            "blockTags": [
              {
                "name": "since",
                "text": "v12.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 508,
          "name": "captureRejectionSymbol",
          "source": {
            "line": 328,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 53,
              "name": "EventEmitter.captureRejectionSymbol",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        },
        {
          "id": 509,
          "name": "captureRejections",
          "source": {
            "line": 333,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Sets or gets the default captureRejection value for all emitters.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 510,
          "name": "defaultMaxListeners",
          "source": {
            "line": 334,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 507,
          "name": "errorMonitor",
          "source": {
            "line": 327,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 52,
              "name": "EventEmitter.errorMonitor",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        }
      ],
      "methods": [
        {
          "id": 659,
          "name": "_construct",
          "source": {
            "line": 604,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 660,
              "name": "_construct",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 661,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 662,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 604,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 663,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 604,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 664,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 665,
          "name": "_destroy",
          "source": {
            "line": 605,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 666,
              "name": "_destroy",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 667,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Error",
                        "packageName": "typescript",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 668,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 669,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 605,
                          "character": 52
                        }
                      ],
                      "signatures": [
                        {
                          "id": 670,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 605,
                              "character": 52
                            }
                          ],
                          "parameters": [
                            {
                              "id": 671,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 672,
          "name": "_final",
          "source": {
            "line": 606,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 673,
              "name": "_final",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 674,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 675,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 606,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 676,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 606,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 677,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 641,
          "name": "_write",
          "source": {
            "line": 596,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 642,
              "name": "_write",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 643,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 644,
                  "name": "encoding",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 645,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 646,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 596,
                          "character": 67
                        }
                      ],
                      "signatures": [
                        {
                          "id": 647,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 596,
                              "character": 67
                            }
                          ],
                          "parameters": [
                            {
                              "id": 648,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 649,
          "name": "_writev",
          "source": {
            "line": 597,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 650,
              "name": "_writev",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 651,
                  "name": "chunks",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reflection",
                      "reflection": {
                        "id": 652,
                        "name": "__type",
                        "variant": "declaration",
                        "kind": 65536,
                        "flags": {
                          "isExternal": true
                        },
                        "children": [
                          {
                            "id": 653,
                            "name": "chunk",
                            "variant": "declaration",
                            "kind": 1024,
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/node/stream.d.ts",
                                "line": 599,
                                "character": 20
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          {
                            "id": 654,
                            "name": "encoding",
                            "variant": "declaration",
                            "kind": 1024,
                            "flags": {
                              "isExternal": true
                            },
                            "sources": [
                              {
                                "fileName": "node_modules/@types/node/stream.d.ts",
                                "line": 600,
                                "character": 20
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
                                "qualifiedName": "__global.BufferEncoding"
                              },
                              "name": "BufferEncoding",
                              "package": "@types/node",
                              "qualifiedName": "__global.BufferEncoding"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [
                              653,
                              654
                            ]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "node_modules/@types/node/stream.d.ts",
                            "line": 598,
                            "character": 30
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 655,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 656,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 602,
                          "character": 26
                        }
                      ],
                      "signatures": [
                        {
                          "id": 657,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 602,
                              "character": 26
                            }
                          ],
                          "parameters": [
                            {
                              "id": 658,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 718,
          "name": "addListener",
          "source": {
            "line": 772,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 719,
              "name": "addListener",
              "comment": {
                "description": "Event emitter\nThe defined events on documents including:\n1. close\n2. drain\n3. error\n4. finish\n5. pipe\n6. unpipe",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 720,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 721,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 722,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 772,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 723,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 772,
                              "character": 50
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 724,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 725,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 726,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 727,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 773,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 728,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 773,
                              "character": 50
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 729,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 730,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 731,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 732,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 774,
                          "character": 50
                        }
                      ],
                      "signatures": [
                        {
                          "id": 733,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 774,
                              "character": 50
                            }
                          ],
                          "parameters": [
                            {
                              "id": 734,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 735,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 736,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 737,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 738,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 775,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 739,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 775,
                              "character": 51
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 740,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 741,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 742,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 743,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 776,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 744,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 776,
                              "character": 49
                            }
                          ],
                          "parameters": [
                            {
                              "id": 745,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 746,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 747,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 748,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 749,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 777,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 750,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 777,
                              "character": 51
                            }
                          ],
                          "parameters": [
                            {
                              "id": 751,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 752,
              "name": "addListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 753,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 754,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 755,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 778,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 756,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 778,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 757,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 625,
          "name": "addTrailers",
          "source": {
            "line": 591,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 626,
              "name": "addTrailers",
              "comment": {
                "description": "Adds HTTP trailers (headers but at the end of the message) to the message.\n\nTrailers are **only** be emitted if the message is chunked encoded. If not,\nthe trailer will be silently discarded.\n\nHTTP requires the `Trailer` header to be sent to emit trailers,\nwith a list of header fields in its value, e.g.\n\n```js\nmessage.writeHead(200, { 'Content-Type': 'text/plain',\n                         'Trailer': 'Content-MD5' });\nmessage.write(fileData);\nmessage.addTrailers({ 'Content-MD5': '7895bf4b8828b55ceaf47747b4bca667' });\nmessage.end();\n```\n\nAttempting to set a header field name or value that contains invalid characters\nwill result in a `TypeError` being thrown.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 627,
                  "name": "headers",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "\"http\".OutgoingHttpHeaders",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "typeOperator",
                        "operator": "readonly",
                        "type": {
                          "kind": "array",
                          "type": {
                            "kind": "tuple",
                            "types": [
                              {
                                "kind": "intrinsic",
                                "type": "string"
                              },
                              {
                                "kind": "intrinsic",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 608,
          "name": "appendHeader",
          "source": {
            "line": 514,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 609,
              "name": "appendHeader",
              "comment": {
                "description": "Append a single header value for the header object.\n\nIf the value is an array, this is equivalent of calling this method multiple times.\n\nIf there were no previous value for the header, this is equivalent of calling `outgoingMessage.setHeader(name, value)`.\n\nDepending of the value of `options.uniqueHeaders` when the client request or the server were created,\nthis will end up in the header being sent multiple times or a single time with values joined using `; `.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v18.3.0, v16.17.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 610,
                  "name": "name",
                  "comment": {
                    "description": "Header name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 611,
                  "name": "value",
                  "comment": {
                    "description": "Header value",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "typeOperator",
                        "operator": "readonly",
                        "type": {
                          "kind": "array",
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 562,
          "name": "assignSocket",
          "source": {
            "line": 650,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 563,
              "name": "assignSocket",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 564,
                  "name": "socket",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "\"net\".Socket",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 525,
          "name": "badRequest",
          "source": {
            "line": 42,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L42"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 526,
              "name": "badRequest",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 527,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 537,
          "name": "conflict",
          "source": {
            "line": 70,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L70"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 538,
              "name": "conflict",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 539,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 711,
          "name": "cork",
          "source": {
            "line": 710,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 712,
              "name": "cork",
              "comment": {
                "description": "The `writable.cork()` method forces all written data to be buffered in memory.\nThe buffered data will be flushed when either the {@link uncork} or {@link end} methods are called.\n\nThe primary intent of `writable.cork()` is to accommodate a situation in which\nseveral small chunks are written to the stream in rapid succession. Instead of\nimmediately forwarding them to the underlying destination, `writable.cork()`buffers all the chunks until `writable.uncork()` is called, which will pass them\nall to `writable._writev()`, if present. This prevents a head-of-line blocking\nsituation where data is being buffered while waiting for the first small chunk\nto be processed. However, use of `writable.cork()` without implementing`writable._writev()` may have an adverse effect on throughput.\n\nSee also: `writable.uncork()`, `writable._writev()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.11.2"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 519,
          "name": "created",
          "source": {
            "line": 26,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L26"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 520,
              "name": "created",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 521,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 715,
          "name": "destroy",
          "source": {
            "line": 761,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 716,
              "name": "destroy",
              "comment": {
                "description": "Destroy the stream. Optionally emit an `'error'` event, and emit a `'close'`event (unless `emitClose` is set to `false`). After this call, the writable\nstream has ended and subsequent calls to `write()` or `end()` will result in\nan `ERR_STREAM_DESTROYED` error.\nThis is a destructive and immediate way to destroy a stream. Previous calls to`write()` may not have drained, and may trigger an `ERR_STREAM_DESTROYED` error.\nUse `end()` instead of destroy if data should flush before close, or wait for\nthe `'drain'` event before destroying the stream.\n\nOnce `destroy()` has been called any further calls will be a no-op and no\nfurther errors except from `_destroy()` may be emitted as `'error'`.\n\nImplementors should not override this method,\nbut instead implement `writable._destroy()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v8.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 717,
                  "name": "error",
                  "comment": {
                    "description": "Optional, an error to emit with `'error'` event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 565,
          "name": "detachSocket",
          "source": {
            "line": 651,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 566,
              "name": "detachSocket",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 567,
                  "name": "socket",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "\"net\".Socket",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 758,
          "name": "emit",
          "source": {
            "line": 779,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 759,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 760,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 761,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 762,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 763,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 764,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 765,
                  "name": "err",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 766,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 767,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 768,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 769,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 770,
                  "name": "src",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "internal.Readable",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 771,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 772,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 773,
                  "name": "src",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "internal.Readable",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 774,
              "name": "emit",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 775,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 776,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 695,
          "name": "end",
          "source": {
            "line": 693,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 696,
              "name": "end",
              "comment": {
                "description": "Calling the `writable.end()` method signals that no more data will be written\nto the `Writable`. The optional `chunk` and `encoding` arguments allow one\nfinal additional chunk of data to be written immediately before closing the\nstream.\n\nCalling the {@link write} method after calling {@link end} will raise an error.\n\n```js\n// Write 'hello, ' and then end with 'world!'.\nconst fs = require('fs');\nconst file = fs.createWriteStream('example.txt');\nfile.write('hello, ');\nfile.end('world!');\n// Writing more now is not allowed!\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 697,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 698,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 693,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 699,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 693,
                              "character": 21
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 700,
              "name": "end",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 701,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 702,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 703,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 694,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 704,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 694,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 705,
              "name": "end",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 706,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 707,
                  "name": "encoding",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 708,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 709,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 695,
                          "character": 59
                        }
                      ],
                      "signatures": [
                        {
                          "id": 710,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 695,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 540,
          "name": "error",
          "source": {
            "line": 77,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L77"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 541,
              "name": "error",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 542,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "number"
                      }
                    ]
                  }
                },
                {
                  "id": 543,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1009,
          "name": "eventNames",
          "source": {
            "line": 673,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1010,
              "name": "eventNames",
              "comment": {
                "description": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v6.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "intrinsic",
                      "type": "symbol"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 628,
          "name": "flushHeaders",
          "source": {
            "line": 604,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 629,
              "name": "flushHeaders",
              "comment": {
                "description": "Compulsorily flushes the message headers\n\nFor efficiency reason, Node.js normally buffers the message headers\nuntil `outgoingMessage.end()` is called or the first chunk of message data\nis written. It then tries to pack the headers and data into a single TCP\npacket.\n\nIt is usually desired (it saves a TCP round-trip), but not when the first\ndata is not sent until possibly much later. `outgoingMessage.flushHeaders()`bypasses the optimization and kickstarts the request.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v1.6.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 531,
          "name": "forbidden",
          "source": {
            "line": 56,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L56"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 532,
              "name": "forbidden",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 533,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 612,
          "name": "getHeader",
          "source": {
            "line": 521,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 613,
              "name": "getHeader",
              "comment": {
                "description": "Gets the value of HTTP header with the given name. If such a name doesn't\nexist in message, it will be `undefined`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 614,
                  "name": "name",
                  "comment": {
                    "description": "Name of header",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "number"
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 617,
          "name": "getHeaderNames",
          "source": {
            "line": 549,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 618,
              "name": "getHeaderNames",
              "comment": {
                "description": "Returns an array of names of headers of the outgoing outgoingMessage. All\nnames are lowercase.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v7.7.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 615,
          "name": "getHeaders",
          "source": {
            "line": 543,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 616,
              "name": "getHeaders",
              "comment": {
                "description": "Returns a shallow copy of the current outgoing headers. Since a shallow\ncopy is used, array values may be mutated without additional calls to\nvarious header-related HTTP module methods. The keys of the returned\nobject are the header names and the values are the respective header\nvalues. All header names are lowercase.\n\nThe object returned by the `outgoingMessage.getHeaders()` method does\nnot prototypically inherit from the JavaScript Object. This means that\ntypical Object methods such as `obj.toString()`, `obj.hasOwnProperty()`,\nand others are not defined and will not work.\n\n```js\noutgoingMessage.setHeader('Foo', 'bar');\noutgoingMessage.setHeader('Set-Cookie', ['foo=bar', 'bar=baz']);\n\nconst headers = outgoingMessage.getHeaders();\n// headers === { foo: 'bar', 'set-cookie': ['foo=bar', 'bar=baz'] }\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v7.7.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "\"http\".OutgoingHttpHeaders",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 997,
          "name": "getMaxListeners",
          "source": {
            "line": 526,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 998,
              "name": "getMaxListeners",
              "comment": {
                "description": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 619,
          "name": "hasHeader",
          "source": {
            "line": 559,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 620,
              "name": "hasHeader",
              "comment": {
                "description": "Returns `true` if the header identified by `name` is currently set in the\noutgoing headers. The header name is case-insensitive.\n\n```js\nconst hasContentType = outgoingMessage.hasHeader('content-type');\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v7.7.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 621,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 550,
          "name": "json",
          "source": {
            "line": 103,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L103"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 551,
              "name": "json",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 552,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1005,
          "name": "listenerCount",
          "source": {
            "line": 620,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1006,
              "name": "listenerCount",
              "comment": {
                "description": "Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v3.2.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1007,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1008,
                  "name": "listener",
                  "comment": {
                    "description": "The event handler function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 999,
          "name": "listeners",
          "source": {
            "line": 539,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1000,
              "name": "listeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1001,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 522,
          "name": "noContent",
          "source": {
            "line": 34,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L34"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 523,
              "name": "noContent",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 524,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 534,
          "name": "notFound",
          "source": {
            "line": 63,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L63"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 535,
              "name": "notFound",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 536,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 984,
          "name": "off",
          "source": {
            "line": 499,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 985,
              "name": "off",
              "comment": {
                "description": "Alias for `emitter.removeListener()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v10.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 986,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 987,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 988,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 499,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 989,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 499,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 990,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 516,
          "name": "ok",
          "source": {
            "line": 18,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L18"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 517,
              "name": "ok",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 518,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 777,
          "name": "on",
          "source": {
            "line": 786,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 778,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 779,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 780,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 781,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 786,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 782,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 786,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 783,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 784,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 785,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 786,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 787,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 787,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 787,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 788,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 789,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 790,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 791,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 788,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 792,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 788,
                              "character": 41
                            }
                          ],
                          "parameters": [
                            {
                              "id": 793,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 794,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 795,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 796,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 797,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 789,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 798,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 789,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 799,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 800,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 801,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 802,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 790,
                          "character": 40
                        }
                      ],
                      "signatures": [
                        {
                          "id": 803,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 790,
                              "character": 40
                            }
                          ],
                          "parameters": [
                            {
                              "id": 804,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 805,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 806,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 807,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 808,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 791,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 809,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 791,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 810,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 811,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 812,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 813,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 814,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 792,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 815,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 792,
                              "character": 49
                            }
                          ],
                          "parameters": [
                            {
                              "id": 816,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 817,
          "name": "once",
          "source": {
            "line": 793,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 818,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 819,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 820,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 821,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 793,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 822,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 793,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 823,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 824,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 825,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 826,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 794,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 827,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 794,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 828,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 829,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 830,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 831,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 795,
                          "character": 43
                        }
                      ],
                      "signatures": [
                        {
                          "id": 832,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 795,
                              "character": 43
                            }
                          ],
                          "parameters": [
                            {
                              "id": 833,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 834,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 835,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 836,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 837,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 796,
                          "character": 44
                        }
                      ],
                      "signatures": [
                        {
                          "id": 838,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 796,
                              "character": 44
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 839,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 840,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 841,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 842,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 797,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 843,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 797,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 844,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 845,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 846,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 847,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 848,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 798,
                          "character": 44
                        }
                      ],
                      "signatures": [
                        {
                          "id": 849,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 798,
                              "character": 44
                            }
                          ],
                          "parameters": [
                            {
                              "id": 850,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 851,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 852,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 853,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 854,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 799,
                          "character": 51
                        }
                      ],
                      "signatures": [
                        {
                          "id": 855,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 799,
                              "character": 51
                            }
                          ],
                          "parameters": [
                            {
                              "id": 856,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 977,
          "name": "pipe",
          "source": {
            "line": 26,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 978,
              "name": "pipe",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 979,
                  "name": "T",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "NodeJS.WritableStream",
                    "packageName": "@types/node",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 980,
                  "name": "destination",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 981,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 982,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "children": [
                        {
                          "id": 983,
                          "name": "end",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isExternal": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 29,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            983
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 28,
                          "character": 22
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": -1,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 857,
          "name": "prependListener",
          "source": {
            "line": 800,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 858,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 859,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 860,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 861,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 800,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 862,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 800,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 863,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 864,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 865,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 866,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 801,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 867,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 801,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 868,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 869,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 870,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 871,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 802,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 872,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 802,
                              "character": 54
                            }
                          ],
                          "parameters": [
                            {
                              "id": 873,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 874,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 875,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 876,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 877,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 803,
                          "character": 55
                        }
                      ],
                      "signatures": [
                        {
                          "id": 878,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 803,
                              "character": 55
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 879,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 880,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 881,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 882,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 804,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 883,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 804,
                              "character": 53
                            }
                          ],
                          "parameters": [
                            {
                              "id": 884,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 885,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 886,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 887,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 888,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 805,
                          "character": 55
                        }
                      ],
                      "signatures": [
                        {
                          "id": 889,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 805,
                              "character": 55
                            }
                          ],
                          "parameters": [
                            {
                              "id": 890,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 891,
              "name": "prependListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 892,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 893,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 894,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 806,
                          "character": 62
                        }
                      ],
                      "signatures": [
                        {
                          "id": 895,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 806,
                              "character": 62
                            }
                          ],
                          "parameters": [
                            {
                              "id": 896,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 897,
          "name": "prependOnceListener",
          "source": {
            "line": 807,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 898,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 899,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 900,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 901,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 807,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 902,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 807,
                              "character": 58
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 903,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 904,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 905,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 906,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 808,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 907,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 808,
                              "character": 58
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 908,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 909,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 910,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 911,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 809,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 912,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 809,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 913,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 914,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 915,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 916,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 917,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 810,
                          "character": 59
                        }
                      ],
                      "signatures": [
                        {
                          "id": 918,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 810,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 919,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 920,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 921,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 922,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 811,
                          "character": 57
                        }
                      ],
                      "signatures": [
                        {
                          "id": 923,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 811,
                              "character": 57
                            }
                          ],
                          "parameters": [
                            {
                              "id": 924,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 925,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 926,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 927,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 928,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 812,
                          "character": 59
                        }
                      ],
                      "signatures": [
                        {
                          "id": 929,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 812,
                              "character": 59
                            }
                          ],
                          "parameters": [
                            {
                              "id": 930,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 931,
              "name": "prependOnceListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 932,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 933,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 934,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 813,
                          "character": 66
                        }
                      ],
                      "signatures": [
                        {
                          "id": 935,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 813,
                              "character": 66
                            }
                          ],
                          "parameters": [
                            {
                              "id": 936,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1002,
          "name": "rawListeners",
          "source": {
            "line": 569,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1003,
              "name": "rawListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v9.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1004,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 991,
          "name": "removeAllListeners",
          "source": {
            "line": 510,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 992,
              "name": "removeAllListeners",
              "comment": {
                "description": "Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 993,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 622,
          "name": "removeHeader",
          "source": {
            "line": 569,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 623,
              "name": "removeHeader",
              "comment": {
                "description": "Removes a header that is queued for implicit sending.\n\n```js\noutgoingMessage.removeHeader('Content-Encoding');\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 624,
                  "name": "name",
                  "comment": {
                    "description": "Header name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 937,
          "name": "removeListener",
          "source": {
            "line": 814,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 938,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 939,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "close"
                  }
                },
                {
                  "id": 940,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 941,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 814,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 942,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 814,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 943,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 944,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "drain"
                  }
                },
                {
                  "id": 945,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 946,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 815,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 947,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 815,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 948,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 949,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "error"
                  }
                },
                {
                  "id": 950,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 951,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 816,
                          "character": 53
                        }
                      ],
                      "signatures": [
                        {
                          "id": 952,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 816,
                              "character": 53
                            }
                          ],
                          "parameters": [
                            {
                              "id": 953,
                              "name": "err",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Error"
                                },
                                "name": "Error",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 954,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 955,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "finish"
                  }
                },
                {
                  "id": 956,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 957,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 817,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 958,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 817,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 959,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 960,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "pipe"
                  }
                },
                {
                  "id": 961,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 962,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 818,
                          "character": 52
                        }
                      ],
                      "signatures": [
                        {
                          "id": 963,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 818,
                              "character": 52
                            }
                          ],
                          "parameters": [
                            {
                              "id": 964,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 965,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 966,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "literal",
                    "value": "unpipe"
                  }
                },
                {
                  "id": 967,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 968,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 819,
                          "character": 54
                        }
                      ],
                      "signatures": [
                        {
                          "id": 969,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 819,
                              "character": 54
                            }
                          ],
                          "parameters": [
                            {
                              "id": 970,
                              "name": "src",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/@types/node/stream.d.ts",
                                  "qualifiedName": "internal.Readable"
                                },
                                "name": "Readable",
                                "package": "@types/node",
                                "qualifiedName": "internal.Readable"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 971,
              "name": "removeListener",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 972,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 973,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 974,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 820,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 975,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 820,
                              "character": 61
                            }
                          ],
                          "parameters": [
                            {
                              "id": 976,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 544,
          "name": "respond",
          "source": {
            "line": 88,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L88"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 545,
              "name": "respond",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 546,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 556,
          "name": "setContentType",
          "source": {
            "line": 117,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L117"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 557,
              "name": "setContentType",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 558,
                  "name": "contentType",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 3167,
                    "name": "MimeTypes",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 692,
          "name": "setDefaultEncoding",
          "source": {
            "line": 670,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 693,
              "name": "setDefaultEncoding",
              "comment": {
                "description": "The `writable.setDefaultEncoding()` method sets the default `encoding` for a `Writable` stream.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.11.15"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 694,
                  "name": "encoding",
                  "comment": {
                    "description": "The new default encoding",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 604,
          "name": "setHeader",
          "source": {
            "line": 500,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 605,
              "name": "setHeader",
              "comment": {
                "description": "Sets a single header value for the header object.\nIf the header already exists in the to-be-sent headers, its value will be replaced. Use an array of strings to send multiple headers with the same name.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 606,
                  "name": "name",
                  "comment": {
                    "description": "Header name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 607,
                  "name": "value",
                  "comment": {
                    "description": "Header value",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "number"
                      },
                      {
                        "kind": "typeOperator",
                        "operator": "readonly",
                        "type": {
                          "kind": "array",
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 994,
          "name": "setMaxListeners",
          "source": {
            "line": 520,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 995,
              "name": "setMaxListeners",
              "comment": {
                "description": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.5"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 996,
                  "name": "n",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 598,
          "name": "setTimeout",
          "source": {
            "line": 492,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 599,
              "name": "setTimeout",
              "comment": {
                "description": "Once a socket is associated with the message and is connected,`socket.setTimeout()` will be called with `msecs` as the first parameter.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.12"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 600,
                  "name": "msecs",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 601,
                  "name": "callback",
                  "comment": {
                    "description": "Optional function to be called when a timeout occurs. Same as binding to the `timeout` event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 602,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/http.d.ts",
                          "line": 492,
                          "character": 45
                        }
                      ],
                      "signatures": [
                        {
                          "id": 603,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/http.d.ts",
                              "line": 492,
                              "character": 45
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 547,
          "name": "status",
          "source": {
            "line": 95,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L95"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 548,
              "name": "status",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 549,
                  "name": "code",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 553,
          "name": "text",
          "source": {
            "line": 110,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L110"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 554,
              "name": "text",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 555,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 528,
          "name": "unauthorized",
          "source": {
            "line": 49,
            "file": "ApiResponse.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/ApiResponse.ts#L49"
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 529,
              "name": "unauthorized",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 530,
                  "name": "data",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 713,
          "name": "uncork",
          "source": {
            "line": 744,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 714,
              "name": "uncork",
              "comment": {
                "description": "The `writable.uncork()` method flushes all data buffered since {@link cork} was called.\n\nWhen using `writable.cork()` and `writable.uncork()` to manage the buffering\nof writes to a stream, defer calls to `writable.uncork()` using`process.nextTick()`. Doing so allows batching of all`writable.write()` calls that occur within a given Node.js event\nloop phase.\n\n```js\nstream.cork();\nstream.write('some ');\nstream.write('data ');\nprocess.nextTick(() => stream.uncork());\n```\n\nIf the `writable.cork()` method is called multiple times on a stream, the\nsame number of calls to `writable.uncork()` must be called to flush the buffered\ndata.\n\n```js\nstream.cork();\nstream.write('some ');\nstream.cork();\nstream.write('data ');\nprocess.nextTick(() => {\n  stream.uncork();\n  // The data will not be flushed until uncork() is called a second time.\n  stream.uncork();\n});\n```\n\nSee also: `writable.cork()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.11.2"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 678,
          "name": "write",
          "source": {
            "line": 663,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 679,
              "name": "write",
              "comment": {
                "description": "The `writable.write()` method writes some data to the stream, and calls the\nsupplied `callback` once the data has been fully handled. If an error\noccurs, the `callback` will be called with the error as its\nfirst argument. The `callback` is called asynchronously and before `'error'` is\nemitted.\n\nThe return value is `true` if the internal buffer is less than the`highWaterMark` configured when the stream was created after admitting `chunk`.\nIf `false` is returned, further attempts to write data to the stream should\nstop until the `'drain'` event is emitted.\n\nWhile a stream is not draining, calls to `write()` will buffer `chunk`, and\nreturn false. Once all currently buffered chunks are drained (accepted for\ndelivery by the operating system), the `'drain'` event will be emitted.\nOnce `write()` returns false, do not write more chunks\nuntil the `'drain'` event is emitted. While calling `write()` on a stream that\nis not draining is allowed, Node.js will buffer all written chunks until\nmaximum memory usage occurs, at which point it will abort unconditionally.\nEven before it aborts, high memory usage will cause poor garbage collector\nperformance and high RSS (which is not typically released back to the system,\neven after the memory is no longer required). Since TCP sockets may never\ndrain if the remote peer does not read the data, writing a socket that is\nnot draining may lead to a remotely exploitable vulnerability.\n\nWriting data while the stream is not draining is particularly\nproblematic for a `Transform`, because the `Transform` streams are paused\nby default until they are piped or a `'data'` or `'readable'` event handler\nis added.\n\nIf the data to be written can be generated or fetched on demand, it is\nrecommended to encapsulate the logic into a `Readable` and use {@link pipe}. However, if calling `write()` is preferred, it is\npossible to respect backpressure and avoid memory issues using the `'drain'` event:\n\n```js\nfunction write(data, cb) {\n  if (!stream.write(data)) {\n    stream.once('drain', cb);\n  } else {\n    process.nextTick(cb);\n  }\n}\n\n// Wait for cb to be called before doing any other write.\nwrite('hello', () => {\n  console.log('Write completed, do more writes now.');\n});\n```\n\nA `Writable` stream in object mode will always ignore the `encoding` argument.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.4"
                  },
                  {
                    "name": "returns",
                    "text": "`false` if the stream wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 680,
                  "name": "chunk",
                  "comment": {
                    "description": "Optional data to write. For streams not operating in object mode, `chunk` must be a string, `Buffer` or `Uint8Array`. For object mode streams, `chunk` may be any\nJavaScript value other than `null`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 681,
                  "name": "callback",
                  "comment": {
                    "description": "Callback for when this chunk of data is flushed.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 682,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 663,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 683,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 663,
                              "character": 41
                            }
                          ],
                          "parameters": [
                            {
                              "id": 684,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 685,
              "name": "write",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 686,
                  "name": "chunk",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                },
                {
                  "id": 687,
                  "name": "encoding",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.BufferEncoding",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 688,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 689,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/stream.d.ts",
                          "line": 664,
                          "character": 67
                        }
                      ],
                      "signatures": [
                        {
                          "id": 690,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/stream.d.ts",
                              "line": 664,
                              "character": 67
                            }
                          ],
                          "parameters": [
                            {
                              "id": 691,
                              "name": "error",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 568,
          "name": "writeContinue",
          "source": {
            "line": 657,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 569,
              "name": "writeContinue",
              "comment": {
                "description": "Sends an HTTP/1.1 100 Continue message to the client, indicating that\nthe request body should be sent. See the `'checkContinue'` event on`Server`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 570,
                  "name": "callback",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 571,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/http.d.ts",
                          "line": 657,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 572,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/http.d.ts",
                              "line": 657,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 573,
          "name": "writeEarlyHints",
          "source": {
            "line": 692,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 574,
              "name": "writeEarlyHints",
              "comment": {
                "description": "Sends an HTTP/1.1 103 Early Hints message to the client with a Link header,\nindicating that the user agent can preload/preconnect the linked resources.\nThe `hints` is an object containing the values of headers to be sent with\nearly hints message. The optional `callback` argument will be called when\nthe response message has been written.\n\nExample:\n\n```js\nconst earlyHintsLink = '</styles.css>; rel=preload; as=style';\nresponse.writeEarlyHints({\n  'link': earlyHintsLink,\n});\n\nconst earlyHintsLinks = [\n  '</styles.css>; rel=preload; as=style',\n  '</scripts.js>; rel=preload; as=script',\n];\nresponse.writeEarlyHints({\n  'link': earlyHintsLinks,\n  'x-trace-id': 'id for diagnostics'\n});\n\nconst earlyHintsCallback = () => console.log('early hints message sent');\nresponse.writeEarlyHints({\n  'link': earlyHintsLinks\n}, earlyHintsCallback);\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v18.11.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 575,
                  "name": "hints",
                  "comment": {
                    "description": "An object containing the values of headers",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Record",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "array",
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 576,
                  "name": "callback",
                  "comment": {
                    "description": "Will be called when the response message has been written",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 577,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/http.d.ts",
                          "line": 692,
                          "character": 77
                        }
                      ],
                      "signatures": [
                        {
                          "id": 578,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/http.d.ts",
                              "line": 692,
                              "character": 77
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 579,
          "name": "writeHead",
          "source": {
            "line": 750,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 580,
              "name": "writeHead",
              "comment": {
                "description": "Sends a response header to the request. The status code is a 3-digit HTTP\nstatus code, like `404`. The last argument, `headers`, are the response headers.\nOptionally one can give a human-readable `statusMessage` as the second\nargument.\n\n`headers` may be an `Array` where the keys and values are in the same list.\nIt is _not_ a list of tuples. So, the even-numbered offsets are key values,\nand the odd-numbered offsets are the associated values. The array is in the same\nformat as `request.rawHeaders`.\n\nReturns a reference to the `ServerResponse`, so that calls can be chained.\n\n```js\nconst body = 'hello world';\nresponse\n  .writeHead(200, {\n    'Content-Length': Buffer.byteLength(body),\n    'Content-Type': 'text/plain'\n  })\n  .end(body);\n```\n\nThis method must only be called once on a message and it must\nbe called before `response.end()` is called.\n\nIf `response.write()` or `response.end()` are called before calling\nthis, the implicit/mutable headers will be calculated and call this function.\n\nWhen headers have been set with `response.setHeader()`, they will be merged\nwith any headers passed to `response.writeHead()`, with the headers passed\nto `response.writeHead()` given precedence.\n\nIf this method is called and `response.setHeader()` has not been called,\nit will directly write the supplied header values onto the network channel\nwithout caching internally, and the `response.getHeader()` on the header\nwill not yield the expected result. If progressive population of headers is\ndesired with potential future retrieval and modification, use `response.setHeader()` instead.\n\n```js\n// Returns content-type = text/plain\nconst server = http.createServer((req, res) => {\n  res.setHeader('Content-Type', 'text/html');\n  res.setHeader('X-Foo', 'bar');\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('ok');\n});\n```\n\n`Content-Length` is given in bytes, not characters. Use `Buffer.byteLength()` to determine the length of the body in bytes. Node.js\ndoes not check whether `Content-Length` and the length of the body which has\nbeen transmitted are equal or not.\n\nAttempting to set a header field name or value that contains invalid characters\nwill result in a `TypeError` being thrown.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.30"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 581,
                  "name": "statusCode",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 582,
                  "name": "statusMessage",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 583,
                  "name": "headers",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "\"http\".OutgoingHttpHeaders",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "\"http\".OutgoingHttpHeader",
                          "packageName": "@types/node",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 584,
              "name": "writeHead",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 585,
                  "name": "statusCode",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 586,
                  "name": "headers",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "\"http\".OutgoingHttpHeaders",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": null,
                          "name": "\"http\".OutgoingHttpHeader",
                          "packageName": "@types/node",
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 463,
                "name": "ApiResponse",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "Request",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 587,
          "name": "writeProcessing",
          "source": {
            "line": 761,
            "file": "http.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 588,
              "name": "writeProcessing",
              "comment": {
                "description": "Sends an HTTP/1.1 102 Processing message to the client, indicating that\nthe request body should be sent.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v10.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 464,
          "name": "fromWeb",
          "source": {
            "line": 528,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 465,
              "name": "fromWeb",
              "comment": {
                "description": "A utility method for creating a `Writable` from a web `WritableStream`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v17.0.0"
                  }
                ],
                "modifierTags": [
                  "@experimental"
                ]
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 466,
                  "name": "writableStream",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "\"stream/web\".WritableStream",
                    "packageName": "@types/node",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 467,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Pick",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "internal.WritableOptions",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "literal",
                            "value": "signal"
                          },
                          {
                            "kind": "literal",
                            "value": "highWaterMark"
                          },
                          {
                            "kind": "literal",
                            "value": "objectMode"
                          },
                          {
                            "kind": "literal",
                            "value": "decodeStrings"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "internal.Writable",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 499,
          "name": "getEventListeners",
          "source": {
            "line": 299,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 500,
              "name": "getEventListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.2.0, v14.17.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 501,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "__global.NodeJS.EventEmitter",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "_DOMEventTarget",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 502,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 495,
          "name": "listenerCount",
          "source": {
            "line": 271,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 496,
              "name": "listenerCount",
              "comment": {
                "description": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.12"
                  },
                  {
                    "name": "deprecated",
                    "text": "Since v3.2.0 - Use `listenerCount` instead."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 497,
                  "name": "emitter",
                  "comment": {
                    "description": "The emitter to query",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 498,
                  "name": "eventName",
                  "comment": {
                    "description": "The event name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 485,
          "name": "on",
          "source": {
            "line": 254,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 486,
              "name": "on",
              "comment": {
                "description": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v13.6.0, v12.16.0"
                  },
                  {
                    "name": "returns",
                    "text": "that iterates `eventName` events emitted by the `emitter`"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 487,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 488,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 489,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            },
            {
              "id": 490,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 491,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 492,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 493,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 494,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 471,
          "name": "once",
          "source": {
            "line": 194,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 472,
              "name": "once",
              "comment": {
                "description": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v11.13.0, v10.16.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 473,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_NodeEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 474,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 475,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 476,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 477,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_DOMEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 478,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 479,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 480,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 481,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 482,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 483,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 484,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 503,
          "name": "setMaxListeners",
          "source": {
            "line": 317,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 504,
              "name": "setMaxListeners",
              "comment": {
                "description": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 505,
                  "name": "n",
                  "comment": {
                    "description": "A non-negative number. The maximum number of listeners per `EventTarget` event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 506,
                  "name": "eventTargets",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "__global.NodeJS.EventEmitter",
                          "packageName": "@types/node",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "_DOMEventTarget",
                          "packageName": "@types/node",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 468,
          "name": "toWeb",
          "source": {
            "line": 534,
            "file": "stream.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 463,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 469,
              "name": "toWeb",
              "comment": {
                "description": "A utility method for creating a web `WritableStream` from a `Writable`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v17.0.0"
                  }
                ],
                "modifierTags": [
                  "@experimental"
                ]
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 470,
                  "name": "streamWritable",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "internal.Writable",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "\"stream/web\".WritableStream",
                "packageName": "@types/node",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1088,
      "name": "Auth",
      "source": {
        "line": 14,
        "file": "Auth.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L14"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1092,
        "name": "constructor",
        "source": {
          "line": 49,
          "file": "Auth.ts",
          "path": "packages/api/src/lib/structures/http",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L49"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1088,
        "accessibility": "private",
        "parameters": [
          {
            "id": 1094,
            "name": "options",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 1124,
              "name": "ServerOptionsAuth",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1101,
          "name": "#secret",
          "source": {
            "line": 47,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L47"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1096,
          "name": "cookie",
          "source": {
            "line": 25,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L25"
          },
          "comment": {
            "description": "The name for the cookie, this will be used to identify a Secure HttpOnly cookie.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1100,
          "name": "domainOverwrite",
          "source": {
            "line": 45,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L45"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 1095,
          "name": "id",
          "source": {
            "line": 19,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L19"
          },
          "comment": {
            "description": "The client's application id, this can be retrieved in Discord Developer Portal at https://discord.com/developers/applications.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1098,
          "name": "redirect",
          "source": {
            "line": 37,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L37"
          },
          "comment": {
            "description": "The redirect uri.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 1097,
          "name": "scopes",
          "source": {
            "line": 31,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L31"
          },
          "comment": {
            "description": "The scopes defined at https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "OAuth2Scopes",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            }
          }
        },
        {
          "id": 1099,
          "name": "transformers",
          "source": {
            "line": 43,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L43"
          },
          "comment": {
            "description": "The transformers used for {@link fetchData}.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1136,
              "name": "LoginDataTransformer",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 1132,
                  "name": "LoginData",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              ]
            }
          }
        },
        {
          "id": 1103,
          "name": "secret",
          "source": {
            "line": 63,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L63"
          },
          "comment": {
            "description": "The client secret, this can be retrieved in Discord Developer Portal at https://discord.com/developers/applications.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": [
        {
          "id": 1107,
          "name": "decrypt",
          "source": {
            "line": 85,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L85"
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1108,
              "name": "decrypt",
              "comment": {
                "description": "Decrypts an object with aes-256-cbc to use as a token.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1109,
                  "name": "token",
                  "comment": {
                    "description": "An data to decrypt",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": 1119,
                    "name": "AuthData",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1104,
          "name": "encrypt",
          "source": {
            "line": 73,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L73"
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1105,
              "name": "encrypt",
              "comment": {
                "description": "Encrypts an object with aes-256-cbc to use as a token.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1106,
                  "name": "data",
                  "comment": {
                    "description": "An object to encrypt",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1119,
                    "name": "AuthData",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ]
        },
        {
          "id": 1110,
          "name": "fetchData",
          "source": {
            "line": 103,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L103"
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1111,
              "name": "fetchData",
              "comment": {
                "description": "Retrieves the data for a specific user.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1112,
                  "name": "token",
                  "comment": {
                    "description": "The access token from the user.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1132,
                    "name": "LoginData",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1113,
          "name": "fetchInformation",
          "source": {
            "line": 126,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L126"
          },
          "parentId": 1088,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1114,
              "name": "fetchInformation",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1115,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1116,
                  "name": "scope",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "OAuth2Scopes",
                    "packageName": "discord-api-types",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1117,
                  "name": "token",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1118,
                  "name": "url",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "undefined"
                      },
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1089,
          "name": "create",
          "source": {
            "line": 138,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L138"
          },
          "parentId": 1088,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1090,
              "name": "create",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1091,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": 1124,
                    "name": "ServerOptionsAuth",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": 1088,
                    "name": "Auth",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1012,
      "name": "CookieStore",
      "source": {
        "line": 8,
        "file": "CookieStore.ts",
        "path": "packages/api/src/lib/structures/api",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L8"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Map",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "intrinsic",
            "type": "string"
          },
          {
            "kind": "intrinsic",
            "type": "string"
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1018,
        "name": "constructor",
        "source": {
          "line": 14,
          "file": "CookieStore.ts",
          "path": "packages/api/src/lib/structures/api",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L14"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1012,
        "accessibility": "public",
        "parameters": [
          {
            "id": 1020,
            "name": "request",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 1,
              "name": "ApiRequest",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          },
          {
            "id": 1021,
            "name": "response",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 463,
              "name": "ApiResponse",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "\"http\".IncomingMessage",
                  "packageName": "@types/node",
                  "typeArguments": []
                }
              ]
            }
          },
          {
            "id": 1022,
            "name": "secure",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "boolean"
            }
          },
          {
            "id": 1023,
            "name": "domainOverwrite",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": true,
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "null"
                },
                {
                  "kind": "intrinsic",
                  "type": "string"
                }
              ]
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1081,
          "name": "[toStringTag]",
          "source": {
            "line": 137,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1026,
          "name": "domain",
          "source": {
            "line": 11,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L11"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1024,
          "name": "request",
          "source": {
            "line": 9,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L9"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "ApiRequest",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1025,
          "name": "response",
          "source": {
            "line": 10,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L10"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 463,
            "name": "ApiResponse",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "\"http\".IncomingMessage",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1027,
          "name": "secure",
          "source": {
            "line": 12,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L12"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1072,
          "name": "size",
          "source": {
            "line": 46,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "returns",
                "text": "the number of elements in the Map."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1017,
          "name": "[species]",
          "source": {
            "line": 319,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MapConstructor",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 1013,
          "name": "octetRegExp",
          "source": {
            "line": 125,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L125"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1012,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RegExp",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 1079,
          "name": "[iterator]",
          "source": {
            "line": 119,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1080,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterable of entries in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1028,
          "name": "add",
          "source": {
            "line": 45,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L45"
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1029,
              "name": "add",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1030,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1031,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1032,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": 1082,
                    "name": "SecureCookieStoreSetOptions",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1048,
          "name": "clear",
          "source": {
            "line": 21,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1049,
              "name": "clear",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1050,
          "name": "delete",
          "source": {
            "line": 25,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1051,
              "name": "delete",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "true if an element in the Map existed and has been removed, or false if the element does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1052,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1073,
          "name": "entries",
          "source": {
            "line": 124,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1074,
              "name": "entries",
              "comment": {
                "description": "Returns an iterable of key, value pairs for every entry in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1053,
          "name": "forEach",
          "source": {
            "line": 29,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1054,
              "name": "forEach",
              "comment": {
                "description": "Executes a provided function once per each key/value pair in the Map, in insertion order.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1055,
                  "name": "callbackfn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1056,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                          "line": 29,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1057,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                              "line": 29,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1058,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1059,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1060,
                              "name": "map",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
                                  "qualifiedName": "Map"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "name": "Map",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1061,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1062,
          "name": "get",
          "source": {
            "line": 34,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1063,
              "name": "get",
              "comment": {
                "description": "Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1064,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1045,
          "name": "getHostDomain",
          "source": {
            "line": 110,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L110"
          },
          "parentId": 1012,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1046,
              "name": "getHostDomain",
              "comment": {
                "description": "Parses a host using the {@linkplain tldts} library to extract the domain.\nThis is used for the domain of the cookie",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Either the host in all lower case or the parsed domain, ready for use on cookies"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1047,
                  "name": "host",
                  "comment": {
                    "description": "The hot to parse",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ]
        },
        {
          "id": 1065,
          "name": "has",
          "source": {
            "line": 38,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1066,
              "name": "has",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "boolean indicating whether an element with the specified key exists or not."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1067,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1036,
          "name": "insert",
          "source": {
            "line": 53,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L53"
          },
          "parentId": 1012,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1037,
              "name": "insert",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1038,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1039,
                  "name": "entry",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1075,
          "name": "keys",
          "source": {
            "line": 129,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1076,
              "name": "keys",
              "comment": {
                "description": "Returns an iterable of keys in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1040,
          "name": "prepare",
          "source": {
            "line": 68,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L68"
          },
          "parentId": 1012,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1041,
              "name": "prepare",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1042,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1043,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1044,
                  "name": "__namedParameters",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1082,
                    "name": "SecureCookieStoreSetOptions",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ]
        },
        {
          "id": 1033,
          "name": "remove",
          "source": {
            "line": 49,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L49"
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1034,
              "name": "remove",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1035,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1068,
          "name": "set",
          "source": {
            "line": 42,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1069,
              "name": "set",
              "comment": {
                "description": "Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1070,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1071,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1012,
                "name": "CookieStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1077,
          "name": "values",
          "source": {
            "line": 134,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1012,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1078,
              "name": "values",
              "comment": {
                "description": "Returns an iterable of values in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1014,
          "name": "encodeCookieOctet",
          "source": {
            "line": 127,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L127"
          },
          "parentId": 1012,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1015,
              "name": "encodeCookieOctet",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1016,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1358,
      "name": "MediaParser",
      "source": {
        "line": 12,
        "file": "MediaParser.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L12"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "A media parser",
        "blockTags": [
          {
            "name": "since",
            "text": "1.3.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": true,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Piece",
        "packageName": "@sapphire/pieces",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1359,
        "name": "constructor",
        "source": {
          "line": 455,
          "file": "index.d.ts",
          "path": "node_modules/@sapphire/pieces/dist",
          "url": null
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1358,
        "accessibility": "public",
        "parameters": [
          {
            "id": 1361,
            "name": "context",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceContext",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          },
          {
            "id": 1362,
            "name": "options",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": true,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceOptions",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1381,
          "name": "enabled",
          "source": {
            "line": 450,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece is enabled.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1379,
          "name": "location",
          "source": {
            "line": 442,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The location metadata for the piece's file.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceLocation",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 1380,
          "name": "name",
          "source": {
            "line": 446,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name of the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1382,
          "name": "options",
          "source": {
            "line": 454,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The raw options passed to this {@link Piece}",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceOptions",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 1378,
          "name": "store",
          "source": {
            "line": 438,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The store that contains the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Store",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Piece",
                "packageName": "@sapphire/pieces",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "PieceOptions",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 1384,
          "name": "container",
          "source": {
            "line": 460,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 1366,
          "name": "accepts",
          "source": {
            "line": 24,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L24"
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1367,
              "name": "accepts",
              "comment": {
                "description": "Checks if a route accepts the media type from this parser.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1368,
                  "name": "route",
                  "comment": {
                    "description": "The route to be checked.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1375,
          "name": "contentStream",
          "source": {
            "line": 63,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L63"
          },
          "parentId": 1358,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1376,
              "name": "contentStream",
              "comment": {
                "description": "Reads the content stream from a request, piping the data through a transformer stream.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1377,
                  "name": "request",
                  "comment": {
                    "description": "The request to read the body from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "\"zlib\".BrotliDecompress",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1385,
          "name": "onLoad",
          "source": {
            "line": 465,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1386,
              "name": "onLoad",
              "comment": {
                "description": "Per-piece listener that is called when the piece is loaded into the store.\nUseful to set-up asynchronous initialization tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1387,
          "name": "onUnload",
          "source": {
            "line": 470,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1388,
              "name": "onUnload",
              "comment": {
                "description": "Per-piece listener that is called when the piece is unloaded from the store.\nUseful to set-up clean-up tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1372,
          "name": "readBuffer",
          "source": {
            "line": 48,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L48"
          },
          "parentId": 1358,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1373,
              "name": "readBuffer",
              "comment": {
                "description": "Reads the content body as a buffer, this is useful for parsing/reading binary data.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1374,
                  "name": "request",
                  "comment": {
                    "description": "The request to read the body from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.Buffer",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1369,
          "name": "readString",
          "source": {
            "line": 33,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L33"
          },
          "parentId": 1358,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1370,
              "name": "readString",
              "comment": {
                "description": "Reads the content body as a string, this is useful for parsing/reading plain-text data.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1371,
                  "name": "request",
                  "comment": {
                    "description": "The request to read the body from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1391,
          "name": "reload",
          "source": {
            "line": 478,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1392,
              "name": "reload",
              "comment": {
                "description": "Reloads the piece by loading the same path in the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1363,
          "name": "run",
          "source": {
            "line": 17,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L17"
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": true,
          "static": false,
          "signatures": [
            {
              "id": 1364,
              "name": "run",
              "comment": {
                "description": "Parses the body data from an API request.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1365,
                  "name": "request",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1393,
          "name": "toJSON",
          "source": {
            "line": 482,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1394,
              "name": "toJSON",
              "comment": {
                "description": "Defines the `JSON.stringify` behavior of this piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "PieceJSON",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1389,
          "name": "unload",
          "source": {
            "line": 474,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1358,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1390,
              "name": "unload",
              "comment": {
                "description": "Unloads and disables the piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1397,
      "name": "MediaParserStore",
      "source": {
        "line": 7,
        "file": "MediaParserStore.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParserStore.ts#L7"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.3.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Store",
        "packageName": "@sapphire/pieces",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1358,
            "name": "MediaParser",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1412,
        "name": "constructor",
        "source": {
          "line": 8,
          "file": "MediaParserStore.ts",
          "path": "packages/api/src/lib/structures",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParserStore.ts#L8"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1397,
        "accessibility": "public",
        "parameters": []
      },
      "properties": [
        {
          "id": 1417,
          "name": "Constructor",
          "source": {
            "line": 284,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "AbstractConstructor",
            "packageName": "@sapphire/utilities",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1358,
                "name": "MediaParser",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1957,
          "name": "[toStringTag]",
          "source": {
            "line": 137,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1447,
          "name": "constructor",
          "source": {
            "line": 21,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "CollectionConstructor",
            "packageName": "@discordjs/collection",
            "typeArguments": []
          }
        },
        {
          "id": 1418,
          "name": "name",
          "source": {
            "line": 285,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1419,
          "name": "paths",
          "source": {
            "line": 286,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 1948,
          "name": "size",
          "source": {
            "line": 46,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "returns",
                "text": "the number of elements in the Map."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1420,
          "name": "strategy",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1358,
                "name": "MediaParser",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1411,
          "name": "[species]",
          "source": {
            "line": 319,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MapConstructor",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 1398,
          "name": "defaultStrategy",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default strategy, defaults to {@link LoaderStrategy}, which is constructed on demand when a store is constructed,\nwhen none was set beforehand.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              }
            ]
          }
        },
        {
          "id": 1399,
          "name": "logger",
          "source": {
            "line": 376,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default logger, defaults to `null`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StoreLogger",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1422,
          "name": "container",
          "source": {
            "line": 297,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 1955,
          "name": "[iterator]",
          "source": {
            "line": 119,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1956,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterable of entries in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1478,
          "name": "at",
          "source": {
            "line": 98,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1479,
              "name": "at",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1480,
                  "name": "index",
                  "comment": {
                    "description": "The index of the element to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1924,
          "name": "clear",
          "source": {
            "line": 21,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1925,
              "name": "clear",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1875,
          "name": "clone",
          "source": {
            "line": 328,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1876,
              "name": "clone",
              "comment": {
                "description": "Creates an identical shallow copy of this collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.clone();\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1877,
          "name": "concat",
          "source": {
            "line": 338,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1878,
              "name": "concat",
              "comment": {
                "description": "Combines this collection with others into a new collection. None of the source collections are modified.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1879,
                  "name": "collections",
                  "comment": {
                    "description": "Collections to merge",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ReadonlyCollection",
                      "packageName": "@discordjs/collection",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "reference",
                          "id": 1358,
                          "name": "MediaParser",
                          "packageName": "@sapphire/plugin-api",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1443,
          "name": "construct",
          "source": {
            "line": 348,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1444,
              "name": "construct",
              "comment": {
                "description": "Constructs a {@link Piece} instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "An instance of the constructed piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1445,
                  "name": "Ctor",
                  "comment": {
                    "description": "The {@link Piece}'s constructor used to build the instance.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ILoaderResultEntry",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1446,
                  "name": "data",
                  "comment": {
                    "description": "The module's information",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "HydratedModuleData",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1358,
                "name": "MediaParser",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1926,
          "name": "delete",
          "source": {
            "line": 25,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1927,
              "name": "delete",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "true if an element in the Map existed and has been removed, or false if the element does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1928,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1894,
          "name": "difference",
          "source": {
            "line": 378,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1895,
              "name": "difference",
              "comment": {
                "description": "The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1896,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1897,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1843,
          "name": "each",
          "source": {
            "line": 303,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1844,
              "name": "each",
              "comment": {
                "description": "Identical to\n{@link Map.forEach()},\nbut returns the collection instead of undefined.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1845,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute for each element",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1846,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 303,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1847,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 303,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1848,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1849,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1850,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 1851,
              "name": "each",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1852,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1853,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1854,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 304,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1855,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 304,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1856,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1857,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1858,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1859,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1860,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1448,
          "name": "ensure",
          "source": {
            "line": 41,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1449,
              "name": "ensure",
              "comment": {
                "description": "Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.ensure(guildId, () => defaultGuildConfig);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1450,
                  "name": "key",
                  "comment": {
                    "description": "The key to get if it exists, or set otherwise",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1451,
                  "name": "defaultValueGenerator",
                  "comment": {
                    "description": "A function that generates the default value",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1452,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 41,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1453,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 41,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1454,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1455,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1358,
                            "name": "MediaParser",
                            "package": "@sapphire/plugin-api"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1358,
                "name": "MediaParser",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1949,
          "name": "entries",
          "source": {
            "line": 124,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1950,
              "name": "entries",
              "comment": {
                "description": "Returns an iterable of key, value pairs for every entry in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1880,
          "name": "equals",
          "source": {
            "line": 347,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1881,
              "name": "equals",
              "comment": {
                "description": "Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Whether the collections have identical contents"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1882,
                  "name": "collection",
                  "comment": {
                    "description": "Collection to compare with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1776,
          "name": "every",
          "source": {
            "line": 269,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1777,
              "name": "every",
              "comment": {
                "description": "Checks if all items passes a test. Identical in behavior to\n{@link Array.every()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.every(user => !user.bot);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1778,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1779,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1780,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 269,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1781,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 269,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1782,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1783,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1784,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 1358,
                      "name": "MediaParser",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 1785,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1786,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1787,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1788,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 270,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1789,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 270,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1790,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1791,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1792,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 1793,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1794,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1795,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 271,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1796,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 271,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1797,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1798,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1799,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 1800,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1801,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1802,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1803,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1804,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 272,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1805,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 272,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1806,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1807,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1808,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1809,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1810,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 1358,
                      "name": "MediaParser",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 1811,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1812,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1813,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1814,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1815,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 273,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1816,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 273,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1817,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1818,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1819,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1820,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1821,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 1822,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1823,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1824,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1825,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 274,
                          "character": 20
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1826,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 274,
                              "character": 20
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1827,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1828,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1829,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1830,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1831,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1586,
          "name": "filter",
          "source": {
            "line": 183,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1587,
              "name": "filter",
              "comment": {
                "description": "Identical to\n{@link Array.filter()},\nbut returns a Collection instead of an Array.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.filter(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1588,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1589,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1590,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 183,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1591,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 183,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1592,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1593,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1595,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1596,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1597,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1598,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 184,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1599,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 184,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1600,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1601,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1602,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1603,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1604,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1605,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 185,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1606,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 185,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1607,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1608,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1609,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1610,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1611,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1612,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1613,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1614,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 186,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1615,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 186,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1616,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1617,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1618,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1619,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1620,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1621,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1622,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1623,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1624,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1625,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 187,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1626,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 187,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1627,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1628,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1629,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1630,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1631,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1632,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1633,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1634,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1635,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 188,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1636,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 188,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1637,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1638,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1639,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1640,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1641,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1494,
          "name": "find",
          "source": {
            "line": 142,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1495,
              "name": "find",
              "comment": {
                "description": "Searches for a single item where the given function returns a truthy value. This behaves like\n{@link Array.find()}.\nAll collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n{@link MDN} for details.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.find(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1496,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1497,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1498,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 142,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1499,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 142,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1500,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1501,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1502,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1503,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1504,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1505,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 143,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1506,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 143,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1507,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1508,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1509,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1510,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1511,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1512,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1513,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1514,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 144,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1515,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 144,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1516,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1517,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1518,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1519,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1520,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1521,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1522,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1523,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1524,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 145,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1525,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 145,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1526,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1527,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1528,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1529,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1530,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1531,
          "name": "findKey",
          "source": {
            "line": 158,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1532,
              "name": "findKey",
              "comment": {
                "description": "Searches for the key of a single item where the given function returns a truthy value. This behaves like\n{@link Array.findIndex()},\nbut returns the key rather than the positional index.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.findKey(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1533,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1534,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1535,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 158,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1536,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 158,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1537,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1538,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1539,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1540,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1541,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1542,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 159,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1543,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 159,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1544,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1545,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1546,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 1547,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1548,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1549,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1550,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1551,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 160,
                          "character": 36
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1552,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 160,
                              "character": 36
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1553,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1554,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1555,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1556,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1557,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1558,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1559,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1560,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1561,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 161,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1562,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 161,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1563,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1564,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1565,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1566,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1567,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1462,
          "name": "first",
          "source": {
            "line": 62,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1463,
              "name": "first",
              "comment": {
                "description": "Obtains the first value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the end if amount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1464,
              "name": "first",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1465,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1358,
                  "name": "MediaParser",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1466,
          "name": "firstKey",
          "source": {
            "line": 71,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1467,
              "name": "firstKey",
              "comment": {
                "description": "Obtains the first key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 1468,
              "name": "firstKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1469,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 1698,
          "name": "flatMap",
          "source": {
            "line": 217,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1699,
              "name": "flatMap",
              "comment": {
                "description": "Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n{@link Array.flatMap()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.flatMap(guild => guild.members.cache);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1700,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1701,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces a new Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1702,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 217,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1703,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 217,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1704,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1705,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1706,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1707,
              "name": "flatMap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1708,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1709,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1710,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1711,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 218,
                          "character": 25
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1712,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 218,
                              "character": 25
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1713,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1714,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1715,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1716,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1717,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1929,
          "name": "forEach",
          "source": {
            "line": 29,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1930,
              "name": "forEach",
              "comment": {
                "description": "Executes a provided function once per each key/value pair in the Map, in insertion order.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1931,
                  "name": "callbackfn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1932,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                          "line": 29,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1933,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                              "line": 29,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1934,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1935,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1936,
                              "name": "map",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
                                  "qualifiedName": "Map"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "target": 1358,
                                    "name": "MediaParser",
                                    "package": "@sapphire/plugin-api"
                                  }
                                ],
                                "name": "Map",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1937,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 1938,
          "name": "get",
          "source": {
            "line": 34,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1939,
              "name": "get",
              "comment": {
                "description": "Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1940,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1941,
          "name": "has",
          "source": {
            "line": 38,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1942,
              "name": "has",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "boolean indicating whether an element with the specified key exists or not."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1943,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1456,
          "name": "hasAll",
          "source": {
            "line": 48,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1457,
              "name": "hasAll",
              "comment": {
                "description": "Checks if all of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if all of the elements exist, `false` if at least one does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1458,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1459,
          "name": "hasAny",
          "source": {
            "line": 55,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1460,
              "name": "hasAny",
              "comment": {
                "description": "Checks if any of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if any of the elements exist, `false` if none exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1461,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1440,
          "name": "insert",
          "source": {
            "line": 341,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1441,
              "name": "insert",
              "comment": {
                "description": "Inserts a piece into the store.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The inserted piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1442,
                  "name": "piece",
                  "comment": {
                    "description": "The piece to be inserted into the store.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1886,
          "name": "intersect",
          "source": {
            "line": 366,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1887,
              "name": "intersect",
              "comment": {
                "description": "The intersect method returns a new structure containing items where the keys and values are present in both original structures.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1888,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1889,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1481,
          "name": "keyAt",
          "source": {
            "line": 106,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1482,
              "name": "keyAt",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1483,
                  "name": "index",
                  "comment": {
                    "description": "The index of the key to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1951,
          "name": "keys",
          "source": {
            "line": 129,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1952,
              "name": "keys",
              "comment": {
                "description": "Returns an iterable of keys in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1470,
          "name": "last",
          "source": {
            "line": 80,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1471,
              "name": "last",
              "comment": {
                "description": "Obtains the last value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1472,
              "name": "last",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1473,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1358,
                  "name": "MediaParser",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1474,
          "name": "lastKey",
          "source": {
            "line": 89,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1475,
              "name": "lastKey",
              "comment": {
                "description": "Obtains the last key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 1476,
              "name": "lastKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1477,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 1426,
          "name": "load",
          "source": {
            "line": 315,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1427,
              "name": "load",
              "comment": {
                "description": "Loads one or more pieces from a path.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "All the loaded pieces."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1428,
                  "name": "root",
                  "comment": {
                    "description": "The root directory the file is from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1429,
                  "name": "path",
                  "comment": {
                    "description": "The path of the file to load, relative to the `root`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1358,
                      "name": "MediaParser",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1435,
          "name": "loadAll",
          "source": {
            "line": 329,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1436,
              "name": "loadAll",
              "comment": {
                "description": "Loads all pieces from all directories specified by {@link paths}.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1718,
          "name": "map",
          "source": {
            "line": 230,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1719,
              "name": "map",
              "comment": {
                "description": "Maps each item to another value into an array. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.map(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1720,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1721,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new array, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1722,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 230,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1723,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 230,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1724,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1725,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1726,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            },
            {
              "id": 1727,
              "name": "map",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1728,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1729,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1730,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1731,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 231,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1732,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 231,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1733,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1734,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1735,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1736,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1737,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1738,
          "name": "mapValues",
          "source": {
            "line": 243,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1739,
              "name": "mapValues",
              "comment": {
                "description": "Maps each item to another value into a collection. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.mapValues(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1740,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1741,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new collection, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1742,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 243,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1743,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 243,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1744,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1745,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1746,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1747,
              "name": "mapValues",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1748,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1749,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1750,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1751,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 244,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1752,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 244,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1753,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1754,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1755,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1756,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1757,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1898,
          "name": "merge",
          "source": {
            "line": 407,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1899,
              "name": "merge",
              "comment": {
                "description": "Merges two Collections together into a new Collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\n// Sums up the entries in two collections.\ncoll.merge(\n other,\n x => ({ keep: true, value: x }),\n y => ({ keep: true, value: y }),\n (x, y) => ({ keep: true, value: x + y }),\n);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```ts\n// Intersects two collections in a left-biased manner.\ncoll.merge(\n other,\n x => ({ keep: false }),\n y => ({ keep: false }),\n (x, _) => ({ keep: true, value: x }),\n);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1900,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1901,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1902,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to merge with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1903,
                  "name": "whenInSelf",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in this Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1904,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1905,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 61
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1906,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1907,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1908,
                  "name": "whenInOther",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in the other Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1909,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 105
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1910,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 105
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1911,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1912,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1913,
                  "name": "whenInBoth",
                  "comment": {
                    "description": "Function getting the result if the entry exists in both Collections",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1914,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 153
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1915,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 153
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1916,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1917,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1918,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "R",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1414,
          "name": "parseContentType",
          "source": {
            "line": 17,
            "file": "MediaParserStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParserStore.ts#L17"
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1415,
              "name": "parseContentType",
              "comment": {
                "description": "Parses a content type by getting the relevant information inside.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1416,
                  "name": "contentType",
                  "comment": {
                    "description": "The content type to parse.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ]
        },
        {
          "id": 1642,
          "name": "partition",
          "source": {
            "line": 200,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1643,
              "name": "partition",
              "comment": {
                "description": "Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst [big, small] = collection.partition(guild => guild.memberCount > 250);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1644,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1645,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1646,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 200,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1647,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 200,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1648,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1649,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1650,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1651,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1652,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1653,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1654,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 201,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1655,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 201,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1656,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1657,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1658,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 1358,
                            "name": "MediaParser",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1659,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1660,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1661,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 202,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1662,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 202,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1663,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1664,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1665,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1666,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1667,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1668,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1669,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1670,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 203,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1671,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 203,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1672,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1673,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1674,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1675,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1676,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1677,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1678,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1679,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1680,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1681,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 204,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1682,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 204,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1683,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1684,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1685,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1686,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1687,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 1358,
                            "name": "MediaParser",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1688,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1689,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1690,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1691,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 205,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1692,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 205,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1693,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1694,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1695,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1696,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1697,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1484,
          "name": "random",
          "source": {
            "line": 113,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1485,
              "name": "random",
              "comment": {
                "description": "Obtains unique random value(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 1486,
              "name": "random",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1487,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1358,
                  "name": "MediaParser",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1488,
          "name": "randomKey",
          "source": {
            "line": 121,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1489,
              "name": "randomKey",
              "comment": {
                "description": "Obtains unique random key(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 1490,
              "name": "randomKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1491,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 1832,
          "name": "reduce",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1833,
              "name": "reduce",
              "comment": {
                "description": "Applies a function to produce a single value. Identical in behavior to\n{@link Array.reduce()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.reduce((acc, guild) => acc + guild.memberCount, 0);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1834,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1835,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1836,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 287,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1837,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 287,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1838,
                              "name": "accumulator",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1839,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1840,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1841,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1842,
                  "name": "initialValue",
                  "comment": {
                    "description": "Starting value for the accumulator",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": -1,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1423,
          "name": "registerPath",
          "source": {
            "line": 308,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1424,
              "name": "registerPath",
              "comment": {
                "description": "Registers a directory into the store.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nstore\n  .registerPath(resolve('commands'))\n  .registerPath(resolve('third-party', 'commands'));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1425,
                  "name": "path",
                  "comment": {
                    "description": "The path to be added.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Path",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1437,
          "name": "resolve",
          "source": {
            "line": 335,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1438,
              "name": "resolve",
              "comment": {
                "description": "Resolves a piece by its name or its instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The resolved piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1439,
                  "name": "name",
                  "comment": {
                    "description": "The name of the piece or the instance itself.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1358,
                "name": "MediaParser",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1492,
          "name": "reverse",
          "source": {
            "line": 127,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1493,
              "name": "reverse",
              "comment": {
                "description": "Identical to {@link Array.reverse()}\nbut returns a Collection instead of an Array.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1944,
          "name": "set",
          "source": {
            "line": 42,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1945,
              "name": "set",
              "comment": {
                "description": "Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1946,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1947,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1758,
          "name": "some",
          "source": {
            "line": 256,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1759,
              "name": "some",
              "comment": {
                "description": "Checks if there exists an item that passes a test. Identical in behavior to\n{@link Array.some()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.some(user => user.discriminator === '0000');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1760,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1761,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 256,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1762,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 256,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1763,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1764,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1765,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 1766,
              "name": "some",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1767,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1768,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1769,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 257,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1770,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 257,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1771,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1772,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1773,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1774,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1775,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1883,
          "name": "sort",
          "source": {
            "line": 360,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1884,
              "name": "sort",
              "comment": {
                "description": "The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1885,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1919,
          "name": "sorted",
          "source": {
            "line": 421,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1920,
              "name": "sorted",
              "comment": {
                "description": "The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1921,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1890,
          "name": "subtract",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1891,
              "name": "subtract",
              "comment": {
                "description": "The subtract method returns a new structure containing items where the keys and values of the original structure are not present in the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1892,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1893,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1568,
          "name": "sweep",
          "source": {
            "line": 169,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1569,
              "name": "sweep",
              "comment": {
                "description": "Removes items that satisfy the provided filter function.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The number of removed entries"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1570,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1571,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 169,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1572,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 169,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1573,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1574,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1575,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 1576,
              "name": "sweep",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1577,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1578,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1579,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 170,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1580,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 170,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1581,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1582,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1358,
                                "name": "MediaParser",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 1583,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1584,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1585,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 1861,
          "name": "tap",
          "source": {
            "line": 318,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1862,
              "name": "tap",
              "comment": {
                "description": "Runs a function on the collection and returns the collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1863,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1864,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 318,
                          "character": 12
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1865,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 318,
                              "character": 12
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1866,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 1867,
              "name": "tap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1868,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1869,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1870,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 319,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1871,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 319,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1872,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1873,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1397,
                                "name": "MediaParserStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1874,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1397,
                "name": "MediaParserStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1922,
          "name": "toJSON",
          "source": {
            "line": 422,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1923,
              "name": "toJSON",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1358,
                  "name": "MediaParser",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1430,
          "name": "unload",
          "source": {
            "line": 321,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1431,
              "name": "unload",
              "comment": {
                "description": "Unloads a piece given its instance or its name.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the piece that was unloaded."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1432,
                  "name": "name",
                  "comment": {
                    "description": "The name of the file to load.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1358,
                        "name": "MediaParser",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1433,
          "name": "unloadAll",
          "source": {
            "line": 325,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1434,
              "name": "unloadAll",
              "comment": {
                "description": "Unloads all pieces from the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1358,
                      "name": "MediaParser",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1953,
          "name": "values",
          "source": {
            "line": 134,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1954,
              "name": "values",
              "comment": {
                "description": "Returns an iterable of values in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1358,
                    "name": "MediaParser",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1400,
          "name": "combineEntries",
          "source": {
            "line": 435,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1397,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1401,
              "name": "combineEntries",
              "comment": {
                "description": "Creates a Collection from a list of entries.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nCollection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n// returns Collection { \"a\" => 3, \"b\" => 2 }\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1402,
                  "name": "K",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1403,
                  "name": "V",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1404,
                  "name": "entries",
                  "comment": {
                    "description": "The list of entries",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Iterable",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K",
                            "packageName": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 1405,
                  "name": "combine",
                  "comment": {
                    "description": "Function to combine an existing entry with a new one",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1406,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 435,
                          "character": 68
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1407,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 435,
                              "character": 68
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1408,
                              "name": "firstValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1409,
                              "name": "secondValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 1410,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "K",
                                "refersToTypeParameter": true
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "V",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1958,
      "name": "Middleware",
      "source": {
        "line": 10,
        "file": "Middleware.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L10"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": true,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Piece",
        "packageName": "@sapphire/pieces",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1959,
        "name": "constructor",
        "source": {
          "line": 23,
          "file": "Middleware.ts",
          "path": "packages/api/src/lib/structures",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L23"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1958,
        "accessibility": "public",
        "parameters": [
          {
            "id": 1961,
            "name": "context",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceContext",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          },
          {
            "id": 1962,
            "name": "options",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 1989,
              "name": "MiddlewareOptions",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1972,
          "name": "enabled",
          "source": {
            "line": 450,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece is enabled.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1970,
          "name": "location",
          "source": {
            "line": 442,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The location metadata for the piece's file.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceLocation",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 1971,
          "name": "name",
          "source": {
            "line": 446,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name of the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1973,
          "name": "options",
          "source": {
            "line": 454,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The raw options passed to this {@link Piece}",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceOptions",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 1963,
          "name": "position",
          "source": {
            "line": 21,
            "file": "Middleware.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L21"
          },
          "comment": {
            "description": "The position the middleware has. The {@link MiddlewareStore} will run all middlewares with lower position than\nthis one.\n\nThe built-in middlewares follow the following positions:\n- headers: 10\n- body: 20\n- cookies: 30\n- auth: 40",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1969,
          "name": "store",
          "source": {
            "line": 438,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The store that contains the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Store",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Piece",
                "packageName": "@sapphire/pieces",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "PieceOptions",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 1975,
          "name": "container",
          "source": {
            "line": 460,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 1976,
          "name": "onLoad",
          "source": {
            "line": 465,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1977,
              "name": "onLoad",
              "comment": {
                "description": "Per-piece listener that is called when the piece is loaded into the store.\nUseful to set-up asynchronous initialization tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1978,
          "name": "onUnload",
          "source": {
            "line": 470,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1979,
              "name": "onUnload",
              "comment": {
                "description": "Per-piece listener that is called when the piece is unloaded from the store.\nUseful to set-up clean-up tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1982,
          "name": "reload",
          "source": {
            "line": 478,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1983,
              "name": "reload",
              "comment": {
                "description": "Reloads the piece by loading the same path in the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1964,
          "name": "run",
          "source": {
            "line": 34,
            "file": "Middleware.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L34"
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": true,
          "static": false,
          "signatures": [
            {
              "id": 1965,
              "name": "run",
              "comment": {
                "description": "The method to be overridden by other middlewares.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1966,
                  "name": "request",
                  "comment": {
                    "description": "The client's request.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1967,
                  "name": "response",
                  "comment": {
                    "description": "The server's response.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 463,
                    "name": "ApiResponse",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "\"http\".IncomingMessage",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1968,
                  "name": "route",
                  "comment": {
                    "description": "The route that matched this request, will be `null` if none matched.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 1984,
          "name": "toJSON",
          "source": {
            "line": 482,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1985,
              "name": "toJSON",
              "comment": {
                "description": "Defines the `JSON.stringify` behavior of this piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "PieceJSON",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1980,
          "name": "unload",
          "source": {
            "line": 474,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1958,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1981,
              "name": "unload",
              "comment": {
                "description": "Unloads and disables the piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1993,
      "name": "MiddlewareStore",
      "source": {
        "line": 10,
        "file": "MiddlewareStore.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L10"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Store",
        "packageName": "@sapphire/pieces",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1958,
            "name": "Middleware",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 2008,
        "name": "constructor",
        "source": {
          "line": 16,
          "file": "MiddlewareStore.ts",
          "path": "packages/api/src/lib/structures",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L16"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1993,
        "accessibility": "public",
        "parameters": []
      },
      "properties": [
        {
          "id": 2025,
          "name": "Constructor",
          "source": {
            "line": 284,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "AbstractConstructor",
            "packageName": "@sapphire/utilities",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1958,
                "name": "Middleware",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2556,
          "name": "[toStringTag]",
          "source": {
            "line": 137,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2055,
          "name": "constructor",
          "source": {
            "line": 21,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "CollectionConstructor",
            "packageName": "@discordjs/collection",
            "typeArguments": []
          }
        },
        {
          "id": 2026,
          "name": "name",
          "source": {
            "line": 285,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2027,
          "name": "paths",
          "source": {
            "line": 286,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 2547,
          "name": "size",
          "source": {
            "line": 46,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "returns",
                "text": "the number of elements in the Map."
              }
            ],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 2010,
          "name": "sortedMiddlewares",
          "source": {
            "line": 14,
            "file": "MiddlewareStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L14"
          },
          "comment": {
            "description": "The sorted middlewares, in ascending order of see {@link position}.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1958,
              "name": "Middleware",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          }
        },
        {
          "id": 2028,
          "name": "strategy",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1958,
                "name": "Middleware",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2007,
          "name": "[species]",
          "source": {
            "line": 319,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MapConstructor",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 1994,
          "name": "defaultStrategy",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default strategy, defaults to {@link LoaderStrategy}, which is constructed on demand when a store is constructed,\nwhen none was set beforehand.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              }
            ]
          }
        },
        {
          "id": 1995,
          "name": "logger",
          "source": {
            "line": 376,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default logger, defaults to `null`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StoreLogger",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2030,
          "name": "container",
          "source": {
            "line": 297,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 2554,
          "name": "[iterator]",
          "source": {
            "line": 119,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2555,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterable of entries in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2086,
          "name": "at",
          "source": {
            "line": 98,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2087,
              "name": "at",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2088,
                  "name": "index",
                  "comment": {
                    "description": "The index of the element to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2023,
          "name": "clear",
          "source": {
            "line": 46,
            "file": "MiddlewareStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L46"
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2024,
              "name": "clear",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 2483,
          "name": "clone",
          "source": {
            "line": 328,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2484,
              "name": "clone",
              "comment": {
                "description": "Creates an identical shallow copy of this collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.clone();\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2485,
          "name": "concat",
          "source": {
            "line": 338,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2486,
              "name": "concat",
              "comment": {
                "description": "Combines this collection with others into a new collection. None of the source collections are modified.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2487,
                  "name": "collections",
                  "comment": {
                    "description": "Collections to merge",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ReadonlyCollection",
                      "packageName": "@discordjs/collection",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "reference",
                          "id": 1958,
                          "name": "Middleware",
                          "packageName": "@sapphire/plugin-api",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2051,
          "name": "construct",
          "source": {
            "line": 348,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2052,
              "name": "construct",
              "comment": {
                "description": "Constructs a {@link Piece} instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "An instance of the constructed piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2053,
                  "name": "Ctor",
                  "comment": {
                    "description": "The {@link Piece}'s constructor used to build the instance.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ILoaderResultEntry",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 2054,
                  "name": "data",
                  "comment": {
                    "description": "The module's information",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "HydratedModuleData",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1958,
                "name": "Middleware",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2020,
          "name": "delete",
          "source": {
            "line": 37,
            "file": "MiddlewareStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L37"
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2021,
              "name": "delete",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2022,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2502,
          "name": "difference",
          "source": {
            "line": 378,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2503,
              "name": "difference",
              "comment": {
                "description": "The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2504,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2505,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2451,
          "name": "each",
          "source": {
            "line": 303,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2452,
              "name": "each",
              "comment": {
                "description": "Identical to\n{@link Map.forEach()},\nbut returns the collection instead of undefined.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2453,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute for each element",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2454,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 303,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2455,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 303,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2456,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2457,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2458,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 2459,
              "name": "each",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2460,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2461,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2462,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 304,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2463,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 304,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2464,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2465,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2466,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2467,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2468,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2056,
          "name": "ensure",
          "source": {
            "line": 41,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2057,
              "name": "ensure",
              "comment": {
                "description": "Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.ensure(guildId, () => defaultGuildConfig);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2058,
                  "name": "key",
                  "comment": {
                    "description": "The key to get if it exists, or set otherwise",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 2059,
                  "name": "defaultValueGenerator",
                  "comment": {
                    "description": "A function that generates the default value",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2060,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 41,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2061,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 41,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2062,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2063,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1958,
                            "name": "Middleware",
                            "package": "@sapphire/plugin-api"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1958,
                "name": "Middleware",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2548,
          "name": "entries",
          "source": {
            "line": 124,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2549,
              "name": "entries",
              "comment": {
                "description": "Returns an iterable of key, value pairs for every entry in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2488,
          "name": "equals",
          "source": {
            "line": 347,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2489,
              "name": "equals",
              "comment": {
                "description": "Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Whether the collections have identical contents"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2490,
                  "name": "collection",
                  "comment": {
                    "description": "Collection to compare with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2384,
          "name": "every",
          "source": {
            "line": 269,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2385,
              "name": "every",
              "comment": {
                "description": "Checks if all items passes a test. Identical in behavior to\n{@link Array.every()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.every(user => !user.bot);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2386,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2387,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2388,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 269,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2389,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 269,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2390,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2391,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2392,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 1958,
                      "name": "Middleware",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 2393,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2394,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2395,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2396,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 270,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2397,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 270,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2398,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2399,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2400,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 2401,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2402,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2403,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 271,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2404,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 271,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2405,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2406,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2407,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 2408,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2409,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2410,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2411,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2412,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 272,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2413,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 272,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2414,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2415,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2416,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2417,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2418,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 1958,
                      "name": "Middleware",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 2419,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2420,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2421,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2422,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2423,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 273,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2424,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 273,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2425,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2426,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2427,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2428,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2429,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 2430,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2431,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2432,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2433,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 274,
                          "character": 20
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2434,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 274,
                              "character": 20
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2435,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2436,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2437,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2438,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2439,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2194,
          "name": "filter",
          "source": {
            "line": 183,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2195,
              "name": "filter",
              "comment": {
                "description": "Identical to\n{@link Array.filter()},\nbut returns a Collection instead of an Array.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.filter(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2196,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2197,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2198,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 183,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2199,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 183,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2200,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2201,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2202,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2203,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2204,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2205,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2206,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 184,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2207,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 184,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2208,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2209,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2210,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2211,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2212,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2213,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 185,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2214,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 185,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2215,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2216,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2217,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2218,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2219,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2220,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2221,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2222,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 186,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2223,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 186,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2224,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2225,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2226,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2227,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2228,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2229,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2230,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2231,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2232,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2233,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 187,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2234,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 187,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2235,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2236,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2237,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2238,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2239,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2240,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2241,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2242,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2243,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 188,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2244,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 188,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2245,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2246,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2247,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2248,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2249,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2102,
          "name": "find",
          "source": {
            "line": 142,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2103,
              "name": "find",
              "comment": {
                "description": "Searches for a single item where the given function returns a truthy value. This behaves like\n{@link Array.find()}.\nAll collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n{@link MDN} for details.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.find(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2104,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2105,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2106,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 142,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2107,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 142,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2108,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2109,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2110,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2111,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2112,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2113,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 143,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2114,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 143,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2115,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2116,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2117,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2118,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2119,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2120,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2121,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2122,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 144,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2123,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 144,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2124,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2125,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2126,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2127,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2128,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2129,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2130,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2131,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2132,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 145,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2133,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 145,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2134,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2135,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2136,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2137,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2138,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2139,
          "name": "findKey",
          "source": {
            "line": 158,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2140,
              "name": "findKey",
              "comment": {
                "description": "Searches for the key of a single item where the given function returns a truthy value. This behaves like\n{@link Array.findIndex()},\nbut returns the key rather than the positional index.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.findKey(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2141,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2142,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2143,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 158,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2144,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 158,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2145,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2146,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2147,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2148,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2149,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2150,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 159,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2151,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 159,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2152,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2153,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2154,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2155,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2156,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2157,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2158,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2159,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 160,
                          "character": 36
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2160,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 160,
                              "character": 36
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2161,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2162,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2163,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2164,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2165,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2166,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2167,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2168,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2169,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 161,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2170,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 161,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2171,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2172,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2173,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2174,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2175,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2070,
          "name": "first",
          "source": {
            "line": 62,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2071,
              "name": "first",
              "comment": {
                "description": "Obtains the first value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the end if amount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2072,
              "name": "first",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2073,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1958,
                  "name": "Middleware",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2074,
          "name": "firstKey",
          "source": {
            "line": 71,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2075,
              "name": "firstKey",
              "comment": {
                "description": "Obtains the first key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2076,
              "name": "firstKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2077,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2306,
          "name": "flatMap",
          "source": {
            "line": 217,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2307,
              "name": "flatMap",
              "comment": {
                "description": "Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n{@link Array.flatMap()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.flatMap(guild => guild.members.cache);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2308,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2309,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces a new Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2310,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 217,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2311,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 217,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2312,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2313,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2314,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2315,
              "name": "flatMap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2316,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2317,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2318,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2319,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 218,
                          "character": 25
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2320,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 218,
                              "character": 25
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2321,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2322,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2323,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2324,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2325,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2532,
          "name": "forEach",
          "source": {
            "line": 29,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2533,
              "name": "forEach",
              "comment": {
                "description": "Executes a provided function once per each key/value pair in the Map, in insertion order.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2534,
                  "name": "callbackfn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2535,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                          "line": 29,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2536,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                              "line": 29,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2537,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2538,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2539,
                              "name": "map",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
                                  "qualifiedName": "Map"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "target": 1958,
                                    "name": "Middleware",
                                    "package": "@sapphire/plugin-api"
                                  }
                                ],
                                "name": "Map",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2540,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 2541,
          "name": "get",
          "source": {
            "line": 34,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2542,
              "name": "get",
              "comment": {
                "description": "Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2543,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2544,
          "name": "has",
          "source": {
            "line": 38,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2545,
              "name": "has",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "boolean indicating whether an element with the specified key exists or not."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2546,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2064,
          "name": "hasAll",
          "source": {
            "line": 48,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2065,
              "name": "hasAll",
              "comment": {
                "description": "Checks if all of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if all of the elements exist, `false` if at least one does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2066,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2067,
          "name": "hasAny",
          "source": {
            "line": 55,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2068,
              "name": "hasAny",
              "comment": {
                "description": "Checks if any of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if any of the elements exist, `false` if none exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2069,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2048,
          "name": "insert",
          "source": {
            "line": 341,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2049,
              "name": "insert",
              "comment": {
                "description": "Inserts a piece into the store.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The inserted piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2050,
                  "name": "piece",
                  "comment": {
                    "description": "The piece to be inserted into the store.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2494,
          "name": "intersect",
          "source": {
            "line": 366,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2495,
              "name": "intersect",
              "comment": {
                "description": "The intersect method returns a new structure containing items where the keys and values are present in both original structures.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2496,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2497,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2089,
          "name": "keyAt",
          "source": {
            "line": 106,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2090,
              "name": "keyAt",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2091,
                  "name": "index",
                  "comment": {
                    "description": "The index of the key to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2550,
          "name": "keys",
          "source": {
            "line": 129,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2551,
              "name": "keys",
              "comment": {
                "description": "Returns an iterable of keys in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2078,
          "name": "last",
          "source": {
            "line": 80,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2079,
              "name": "last",
              "comment": {
                "description": "Obtains the last value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2080,
              "name": "last",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2081,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1958,
                  "name": "Middleware",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2082,
          "name": "lastKey",
          "source": {
            "line": 89,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2083,
              "name": "lastKey",
              "comment": {
                "description": "Obtains the last key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2084,
              "name": "lastKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2085,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2034,
          "name": "load",
          "source": {
            "line": 315,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2035,
              "name": "load",
              "comment": {
                "description": "Loads one or more pieces from a path.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "All the loaded pieces."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2036,
                  "name": "root",
                  "comment": {
                    "description": "The root directory the file is from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 2037,
                  "name": "path",
                  "comment": {
                    "description": "The path of the file to load, relative to the `root`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1958,
                      "name": "Middleware",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2043,
          "name": "loadAll",
          "source": {
            "line": 329,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2044,
              "name": "loadAll",
              "comment": {
                "description": "Loads all pieces from all directories specified by {@link paths}.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2326,
          "name": "map",
          "source": {
            "line": 230,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2327,
              "name": "map",
              "comment": {
                "description": "Maps each item to another value into an array. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.map(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2328,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2329,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new array, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2330,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 230,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2331,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 230,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2332,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2333,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2334,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            },
            {
              "id": 2335,
              "name": "map",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2336,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2337,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2338,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2339,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 231,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2340,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 231,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2341,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2342,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2343,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2344,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2345,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2346,
          "name": "mapValues",
          "source": {
            "line": 243,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2347,
              "name": "mapValues",
              "comment": {
                "description": "Maps each item to another value into a collection. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.mapValues(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2348,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2349,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new collection, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2350,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 243,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2351,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 243,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2352,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2353,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2354,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2355,
              "name": "mapValues",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2356,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2357,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2358,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2359,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 244,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2360,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 244,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2361,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2362,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2363,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2364,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2365,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2506,
          "name": "merge",
          "source": {
            "line": 407,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2507,
              "name": "merge",
              "comment": {
                "description": "Merges two Collections together into a new Collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\n// Sums up the entries in two collections.\ncoll.merge(\n other,\n x => ({ keep: true, value: x }),\n y => ({ keep: true, value: y }),\n (x, y) => ({ keep: true, value: x + y }),\n);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```ts\n// Intersects two collections in a left-biased manner.\ncoll.merge(\n other,\n x => ({ keep: false }),\n y => ({ keep: false }),\n (x, _) => ({ keep: true, value: x }),\n);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2508,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2509,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2510,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to merge with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 2511,
                  "name": "whenInSelf",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in this Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2512,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2513,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 61
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2514,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2515,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2516,
                  "name": "whenInOther",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in the other Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2517,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 105
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2518,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 105
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2519,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2520,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2521,
                  "name": "whenInBoth",
                  "comment": {
                    "description": "Function getting the result if the entry exists in both Collections",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2522,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 153
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2523,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 153
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2524,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2525,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2526,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "R",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2250,
          "name": "partition",
          "source": {
            "line": 200,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2251,
              "name": "partition",
              "comment": {
                "description": "Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst [big, small] = collection.partition(guild => guild.memberCount > 250);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2252,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2253,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2254,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 200,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2255,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 200,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2256,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2257,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2258,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2259,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2260,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2261,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2262,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 201,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2263,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 201,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2264,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2265,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2266,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 1958,
                            "name": "Middleware",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2267,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2268,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2269,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 202,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2270,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 202,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2271,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2272,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2273,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2274,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2275,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2276,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2277,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2278,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 203,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2279,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 203,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2280,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2281,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2282,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2283,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2284,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2285,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2286,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2287,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2288,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2289,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 204,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2290,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 204,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2291,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2292,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2293,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2294,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2295,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 1958,
                            "name": "Middleware",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2296,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2297,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2298,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2299,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 205,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2300,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 205,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2301,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2302,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2303,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2304,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2305,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2092,
          "name": "random",
          "source": {
            "line": 113,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2093,
              "name": "random",
              "comment": {
                "description": "Obtains unique random value(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2094,
              "name": "random",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2095,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1958,
                  "name": "Middleware",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2096,
          "name": "randomKey",
          "source": {
            "line": 121,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2097,
              "name": "randomKey",
              "comment": {
                "description": "Obtains unique random key(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2098,
              "name": "randomKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2099,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2440,
          "name": "reduce",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2441,
              "name": "reduce",
              "comment": {
                "description": "Applies a function to produce a single value. Identical in behavior to\n{@link Array.reduce()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.reduce((acc, guild) => acc + guild.memberCount, 0);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2442,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2443,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2444,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 287,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2445,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 287,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2446,
                              "name": "accumulator",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2447,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2448,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2449,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2450,
                  "name": "initialValue",
                  "comment": {
                    "description": "Starting value for the accumulator",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": -1,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2031,
          "name": "registerPath",
          "source": {
            "line": 308,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2032,
              "name": "registerPath",
              "comment": {
                "description": "Registers a directory into the store.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nstore\n  .registerPath(resolve('commands'))\n  .registerPath(resolve('third-party', 'commands'));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2033,
                  "name": "path",
                  "comment": {
                    "description": "The path to be added.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Path",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2045,
          "name": "resolve",
          "source": {
            "line": 335,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2046,
              "name": "resolve",
              "comment": {
                "description": "Resolves a piece by its name or its instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The resolved piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2047,
                  "name": "name",
                  "comment": {
                    "description": "The name of the piece or the instance itself.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1958,
                "name": "Middleware",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2100,
          "name": "reverse",
          "source": {
            "line": 127,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2101,
              "name": "reverse",
              "comment": {
                "description": "Identical to {@link Array.reverse()}\nbut returns a Collection instead of an Array.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2011,
          "name": "run",
          "source": {
            "line": 20,
            "file": "MiddlewareStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L20"
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2012,
              "name": "run",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2013,
                  "name": "request",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                },
                {
                  "id": 2014,
                  "name": "response",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 463,
                    "name": "ApiResponse",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "\"http\".IncomingMessage",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 2015,
                  "name": "route",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2016,
          "name": "set",
          "source": {
            "line": 27,
            "file": "MiddlewareStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MiddlewareStore.ts#L27"
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2017,
              "name": "set",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2018,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 2019,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2366,
          "name": "some",
          "source": {
            "line": 256,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2367,
              "name": "some",
              "comment": {
                "description": "Checks if there exists an item that passes a test. Identical in behavior to\n{@link Array.some()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.some(user => user.discriminator === '0000');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2368,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2369,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 256,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2370,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 256,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2371,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2372,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2373,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 2374,
              "name": "some",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2375,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2376,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2377,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 257,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2378,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 257,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2379,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2380,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2381,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2382,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2383,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2491,
          "name": "sort",
          "source": {
            "line": 360,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2492,
              "name": "sort",
              "comment": {
                "description": "The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2493,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2527,
          "name": "sorted",
          "source": {
            "line": 421,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2528,
              "name": "sorted",
              "comment": {
                "description": "The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2529,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2498,
          "name": "subtract",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2499,
              "name": "subtract",
              "comment": {
                "description": "The subtract method returns a new structure containing items where the keys and values of the original structure are not present in the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2500,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2501,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2176,
          "name": "sweep",
          "source": {
            "line": 169,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2177,
              "name": "sweep",
              "comment": {
                "description": "Removes items that satisfy the provided filter function.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The number of removed entries"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2178,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2179,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 169,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2180,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 169,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2181,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2182,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2183,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 2184,
              "name": "sweep",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2185,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2186,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2187,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 170,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2188,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 170,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2189,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2190,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1958,
                                "name": "Middleware",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2191,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2192,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2193,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 2469,
          "name": "tap",
          "source": {
            "line": 318,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2470,
              "name": "tap",
              "comment": {
                "description": "Runs a function on the collection and returns the collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2471,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2472,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 318,
                          "character": 12
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2473,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 318,
                              "character": 12
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2474,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 2475,
              "name": "tap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2476,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2477,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2478,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 319,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2479,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 319,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2480,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2481,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 1993,
                                "name": "MiddlewareStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2482,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1993,
                "name": "MiddlewareStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2530,
          "name": "toJSON",
          "source": {
            "line": 422,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2531,
              "name": "toJSON",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 1958,
                  "name": "Middleware",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2038,
          "name": "unload",
          "source": {
            "line": 321,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2039,
              "name": "unload",
              "comment": {
                "description": "Unloads a piece given its instance or its name.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the piece that was unloaded."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2040,
                  "name": "name",
                  "comment": {
                    "description": "The name of the file to load.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 1958,
                        "name": "Middleware",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2041,
          "name": "unloadAll",
          "source": {
            "line": 325,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2042,
              "name": "unloadAll",
              "comment": {
                "description": "Unloads all pieces from the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 1958,
                      "name": "Middleware",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2552,
          "name": "values",
          "source": {
            "line": 134,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2553,
              "name": "values",
              "comment": {
                "description": "Returns an iterable of values in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1958,
                    "name": "Middleware",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1996,
          "name": "combineEntries",
          "source": {
            "line": 435,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 1993,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1997,
              "name": "combineEntries",
              "comment": {
                "description": "Creates a Collection from a list of entries.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nCollection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n// returns Collection { \"a\" => 3, \"b\" => 2 }\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1998,
                  "name": "K",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 1999,
                  "name": "V",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2000,
                  "name": "entries",
                  "comment": {
                    "description": "The list of entries",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Iterable",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K",
                            "packageName": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 2001,
                  "name": "combine",
                  "comment": {
                    "description": "Function to combine an existing entry with a new one",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2002,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 435,
                          "character": 68
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2003,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 435,
                              "character": 68
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2004,
                              "name": "firstValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2005,
                              "name": "secondValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2006,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "K",
                                "refersToTypeParameter": true
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "V",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 2557,
      "name": "Route",
      "source": {
        "line": 12,
        "file": "Route.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L12"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": true,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Piece",
        "packageName": "@sapphire/pieces",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 2558,
        "name": "constructor",
        "source": {
          "line": 33,
          "file": "Route.ts",
          "path": "packages/api/src/lib/structures",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L33"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 2557,
        "accessibility": "public",
        "parameters": [
          {
            "id": 2560,
            "name": "context",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "PieceContext",
              "packageName": "@sapphire/pieces",
              "typeArguments": []
            }
          },
          {
            "id": 2561,
            "name": "options",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 2586,
              "name": "RouteOptions",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 2563,
          "name": "acceptedContentMimeTypes",
          "source": {
            "line": 21,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L21"
          },
          "comment": {
            "description": "The accepted content types.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "templateLiteral",
                        "head": "message/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "audio/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "video/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "image/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "text/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "application/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "multipart/",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      },
                      {
                        "kind": "templateLiteral",
                        "head": "X-",
                        "tail": [
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": "/"
                          },
                          {
                            "type": {
                              "kind": "intrinsic",
                              "type": "string"
                            },
                            "text": ""
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 2573,
          "name": "enabled",
          "source": {
            "line": 450,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece is enabled.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 2571,
          "name": "location",
          "source": {
            "line": 442,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The location metadata for the piece's file.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceLocation",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 2562,
          "name": "maximumBodyLength",
          "source": {
            "line": 16,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L16"
          },
          "comment": {
            "description": "(RFC 7230 3.3.2) The maximum decimal number of octets.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 2565,
          "name": "methods",
          "source": {
            "line": 31,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L31"
          },
          "comment": {
            "description": "The methods this route accepts.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Collection",
            "packageName": "@discordjs/collection",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1201,
                "name": "Methods",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 2592,
                "name": "MethodCallback",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2572,
          "name": "name",
          "source": {
            "line": 446,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name of the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2574,
          "name": "options",
          "source": {
            "line": 454,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The raw options passed to this {@link Piece}",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceOptions",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 2564,
          "name": "router",
          "source": {
            "line": 26,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L26"
          },
          "comment": {
            "description": "The route information.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 3186,
            "name": "RouteData",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 2570,
          "name": "store",
          "source": {
            "line": 438,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The store that contains the piece.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Store",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Piece",
                "packageName": "@sapphire/pieces",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "PieceOptions",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 2576,
          "name": "container",
          "source": {
            "line": 460,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 2566,
          "name": "onLoad",
          "source": {
            "line": 52,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L52"
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2567,
              "name": "onLoad",
              "comment": {
                "description": "Per-piece listener that is called when the piece is loaded into the store.\nUseful to set-up asynchronous initialization tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 2568,
          "name": "onUnload",
          "source": {
            "line": 66,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L66"
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2569,
              "name": "onUnload",
              "comment": {
                "description": "Per-piece listener that is called when the piece is unloaded from the store.\nUseful to set-up clean-up tasks.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ]
        },
        {
          "id": 2579,
          "name": "reload",
          "source": {
            "line": 478,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2580,
              "name": "reload",
              "comment": {
                "description": "Reloads the piece by loading the same path in the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2581,
          "name": "toJSON",
          "source": {
            "line": 482,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2582,
              "name": "toJSON",
              "comment": {
                "description": "Defines the `JSON.stringify` behavior of this piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "PieceJSON",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2577,
          "name": "unload",
          "source": {
            "line": 474,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2557,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2578,
              "name": "unload",
              "comment": {
                "description": "Unloads and disables the piece.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 3186,
      "name": "RouteData",
      "source": {
        "line": 20,
        "file": "RouteData.ts",
        "path": "packages/api/src/lib/utils",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L20"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 3193,
        "name": "constructor",
        "source": {
          "line": 25,
          "file": "RouteData.ts",
          "path": "packages/api/src/lib/utils",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L25"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 3186,
        "accessibility": "public",
        "parameters": [
          {
            "id": 3195,
            "name": "path",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        ]
      },
      "properties": [
        {
          "id": 3198,
          "name": "parts",
          "source": {
            "line": 23,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L23"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3186,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": 3202,
                "name": "ParsedPart",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          }
        },
        {
          "id": 3196,
          "name": "path",
          "source": {
            "line": 21,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L21"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3186,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 3197,
          "name": "static",
          "source": {
            "line": 22,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L22"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3186,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "methods": [
        {
          "id": 3199,
          "name": "match",
          "source": {
            "line": 31,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L31"
          },
          "parentId": 3186,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3200,
              "name": "match",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3201,
                  "name": "split",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 3185,
                "name": "MatchData",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3187,
          "name": "parsePart",
          "source": {
            "line": 54,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L54"
          },
          "parentId": 3186,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 3188,
              "name": "parsePart",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3189,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 3202,
                "name": "ParsedPart",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3190,
          "name": "split",
          "source": {
            "line": 63,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L63"
          },
          "parentId": 3186,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 3191,
              "name": "split",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "since",
                    "text": "1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3192,
                  "name": "url",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": 2599,
      "name": "RouteStore",
      "source": {
        "line": 23,
        "file": "RouteStore.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L23"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Store",
        "packageName": "@sapphire/pieces",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 2557,
            "name": "Route",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        ]
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 2614,
        "name": "constructor",
        "source": {
          "line": 26,
          "file": "RouteStore.ts",
          "path": "packages/api/src/lib/structures",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L26"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 2599,
        "accessibility": "public",
        "parameters": []
      },
      "properties": [
        {
          "id": 2626,
          "name": "Constructor",
          "source": {
            "line": 284,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "AbstractConstructor",
            "packageName": "@sapphire/utilities",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 2557,
                "name": "Route",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 3166,
          "name": "[toStringTag]",
          "source": {
            "line": 137,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2656,
          "name": "constructor",
          "source": {
            "line": 21,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "CollectionConstructor",
            "packageName": "@discordjs/collection",
            "typeArguments": []
          }
        },
        {
          "id": 2627,
          "name": "name",
          "source": {
            "line": 285,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2628,
          "name": "paths",
          "source": {
            "line": 286,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 3157,
          "name": "size",
          "source": {
            "line": 46,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "returns",
                "text": "the number of elements in the Map."
              }
            ],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 2629,
          "name": "strategy",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 2557,
                "name": "Route",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2616,
          "name": "table",
          "source": {
            "line": 24,
            "file": "RouteStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L24"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Collection",
            "packageName": "@discordjs/collection",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 1201,
                "name": "Methods",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 2592,
                    "name": "MethodCallback",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 2613,
          "name": "[species]",
          "source": {
            "line": 319,
            "file": "lib.es2015.symbol.wellknown.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "MapConstructor",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 2600,
          "name": "defaultStrategy",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default strategy, defaults to {@link LoaderStrategy}, which is constructed on demand when a store is constructed,\nwhen none was set beforehand.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ILoaderStrategy",
            "packageName": "@sapphire/pieces",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              }
            ]
          }
        },
        {
          "id": 2601,
          "name": "logger",
          "source": {
            "line": 376,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The default logger, defaults to `null`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "StoreLogger",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2631,
          "name": "container",
          "source": {
            "line": 297,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "A reference to the {@link Container} object for ease of use.",
            "blockTags": [
              {
                "name": "see",
                "text": "container"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 3164,
          "name": "[iterator]",
          "source": {
            "line": 119,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3165,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterable of entries in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2687,
          "name": "at",
          "source": {
            "line": 98,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2688,
              "name": "at",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2689,
                  "name": "index",
                  "comment": {
                    "description": "The index of the element to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3133,
          "name": "clear",
          "source": {
            "line": 21,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3134,
              "name": "clear",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 3084,
          "name": "clone",
          "source": {
            "line": 328,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3085,
              "name": "clone",
              "comment": {
                "description": "Creates an identical shallow copy of this collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.clone();\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3086,
          "name": "concat",
          "source": {
            "line": 338,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3087,
              "name": "concat",
              "comment": {
                "description": "Combines this collection with others into a new collection. None of the source collections are modified.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3088,
                  "name": "collections",
                  "comment": {
                    "description": "Collections to merge",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ReadonlyCollection",
                      "packageName": "@discordjs/collection",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "reference",
                          "id": 2557,
                          "name": "Route",
                          "packageName": "@sapphire/plugin-api",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2652,
          "name": "construct",
          "source": {
            "line": 348,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2653,
              "name": "construct",
              "comment": {
                "description": "Constructs a {@link Piece} instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "An instance of the constructed piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2654,
                  "name": "Ctor",
                  "comment": {
                    "description": "The {@link Piece}'s constructor used to build the instance.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ILoaderResultEntry",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 2655,
                  "name": "data",
                  "comment": {
                    "description": "The module's information",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "HydratedModuleData",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2557,
                "name": "Route",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3135,
          "name": "delete",
          "source": {
            "line": 25,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3136,
              "name": "delete",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "true if an element in the Map existed and has been removed, or false if the element does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3137,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 3103,
          "name": "difference",
          "source": {
            "line": 378,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3104,
              "name": "difference",
              "comment": {
                "description": "The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3105,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3106,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3052,
          "name": "each",
          "source": {
            "line": 303,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3053,
              "name": "each",
              "comment": {
                "description": "Identical to\n{@link Map.forEach()},\nbut returns the collection instead of undefined.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3054,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute for each element",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3055,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 303,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3056,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 303,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3057,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3058,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3059,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 3060,
              "name": "each",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3061,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3062,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3063,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 304,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3064,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 304,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3065,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3066,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3067,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3068,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3069,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2657,
          "name": "ensure",
          "source": {
            "line": 41,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2658,
              "name": "ensure",
              "comment": {
                "description": "Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.ensure(guildId, () => defaultGuildConfig);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2659,
                  "name": "key",
                  "comment": {
                    "description": "The key to get if it exists, or set otherwise",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 2660,
                  "name": "defaultValueGenerator",
                  "comment": {
                    "description": "A function that generates the default value",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2661,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 41,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2662,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 41,
                              "character": 42
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2663,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2664,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2557,
                            "name": "Route",
                            "package": "@sapphire/plugin-api"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2557,
                "name": "Route",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3158,
          "name": "entries",
          "source": {
            "line": 124,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3159,
              "name": "entries",
              "comment": {
                "description": "Returns an iterable of key, value pairs for every entry in the map.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3089,
          "name": "equals",
          "source": {
            "line": 347,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3090,
              "name": "equals",
              "comment": {
                "description": "Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Whether the collections have identical contents"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3091,
                  "name": "collection",
                  "comment": {
                    "description": "Collection to compare with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2985,
          "name": "every",
          "source": {
            "line": 269,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2986,
              "name": "every",
              "comment": {
                "description": "Checks if all items passes a test. Identical in behavior to\n{@link Array.every()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.every(user => !user.bot);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2987,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2988,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2989,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 269,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2990,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 269,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2991,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2992,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2993,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 2557,
                      "name": "Route",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 2994,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2995,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2996,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2997,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 270,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2998,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 270,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2999,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3000,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3001,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 3002,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3003,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3004,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 271,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3005,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 271,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3006,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3007,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3008,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 3009,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3010,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 3011,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3012,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3013,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 272,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3014,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 272,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3015,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3016,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3017,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3018,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3019,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "K2",
                      "packageName": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 2557,
                      "name": "Route",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 3020,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3021,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 3022,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3023,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3024,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 273,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3025,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 273,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3026,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3027,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3028,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3029,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3030,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Collection",
                  "packageName": "@discordjs/collection",
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "reference",
                      "id": -1,
                      "name": "V2",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 3031,
              "name": "every",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3032,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3033,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3034,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 274,
                          "character": 20
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3035,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 274,
                              "character": 20
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3036,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3037,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3038,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3039,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3040,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2795,
          "name": "filter",
          "source": {
            "line": 183,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2796,
              "name": "filter",
              "comment": {
                "description": "Identical to\n{@link Array.filter()},\nbut returns a Collection instead of an Array.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.filter(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2797,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2798,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2799,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 183,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2800,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 183,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2801,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2802,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2803,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2804,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2805,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2806,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2807,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 184,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2808,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 184,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2809,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2810,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2811,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2812,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2813,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2814,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 185,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2815,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 185,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2816,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2817,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2818,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2819,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2820,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2821,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2822,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2823,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 186,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2824,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 186,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2825,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2826,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2827,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2828,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2829,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2830,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2831,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2832,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2833,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2834,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 187,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2835,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 187,
                              "character": 35
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2836,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2837,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2838,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2839,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2840,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2841,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2842,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2843,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2844,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 188,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2845,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 188,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2846,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2847,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2848,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2849,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2850,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2703,
          "name": "find",
          "source": {
            "line": 142,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2704,
              "name": "find",
              "comment": {
                "description": "Searches for a single item where the given function returns a truthy value. This behaves like\n{@link Array.find()}.\nAll collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n{@link MDN} for details.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.find(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2705,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2706,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2707,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 142,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2708,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 142,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2709,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2710,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2711,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2712,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2713,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2714,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 143,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2715,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 143,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2716,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2717,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2718,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2719,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2720,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2721,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2722,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2723,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 144,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2724,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 144,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2725,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2726,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2727,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2728,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2729,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2730,
              "name": "find",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2731,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2732,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2733,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 145,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2734,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 145,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2735,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2736,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2737,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2738,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2739,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2740,
          "name": "findKey",
          "source": {
            "line": 158,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2741,
              "name": "findKey",
              "comment": {
                "description": "Searches for the key of a single item where the given function returns a truthy value. This behaves like\n{@link Array.findIndex()},\nbut returns the key rather than the positional index.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.findKey(user => user.username === 'Bob');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2742,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2743,
                  "name": "fn",
                  "comment": {
                    "description": "The function to test with (should return boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2744,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 158,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2745,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 158,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2746,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2747,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2748,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2749,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2750,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2751,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 159,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2752,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 159,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2753,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2754,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2755,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2756,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2757,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2758,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2759,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2760,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 160,
                          "character": 36
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2761,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 160,
                              "character": 36
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2762,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2763,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2764,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2765,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2766,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K2",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2767,
              "name": "findKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2768,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2769,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2770,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 161,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2771,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 161,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2772,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2773,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2774,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2775,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2776,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2671,
          "name": "first",
          "source": {
            "line": 62,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2672,
              "name": "first",
              "comment": {
                "description": "Obtains the first value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the end if amount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2673,
              "name": "first",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2674,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 2557,
                  "name": "Route",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2675,
          "name": "firstKey",
          "source": {
            "line": 71,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2676,
              "name": "firstKey",
              "comment": {
                "description": "Obtains the first key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2677,
              "name": "firstKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2678,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2907,
          "name": "flatMap",
          "source": {
            "line": 217,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2908,
              "name": "flatMap",
              "comment": {
                "description": "Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n{@link Array.flatMap()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.flatMap(guild => guild.members.cache);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2909,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2910,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces a new Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2911,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 217,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2912,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 217,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2913,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2914,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2915,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2916,
              "name": "flatMap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2917,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2918,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2919,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2920,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 218,
                          "character": 25
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2921,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 218,
                              "character": 25
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2922,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2923,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2924,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2925,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Collection"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Collection",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2926,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3138,
          "name": "forEach",
          "source": {
            "line": 29,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3139,
              "name": "forEach",
              "comment": {
                "description": "Executes a provided function once per each key/value pair in the Map, in insertion order.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3140,
                  "name": "callbackfn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3141,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                          "line": 29,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3142,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
                              "line": 29,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3143,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3144,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3145,
                              "name": "map",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
                                  "qualifiedName": "Map"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "target": 2557,
                                    "name": "Route",
                                    "package": "@sapphire/plugin-api"
                                  }
                                ],
                                "name": "Map",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3146,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 3147,
          "name": "get",
          "source": {
            "line": 34,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3148,
              "name": "get",
              "comment": {
                "description": "Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3149,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3150,
          "name": "has",
          "source": {
            "line": 38,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3151,
              "name": "has",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "boolean indicating whether an element with the specified key exists or not."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3152,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2665,
          "name": "hasAll",
          "source": {
            "line": 48,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2666,
              "name": "hasAll",
              "comment": {
                "description": "Checks if all of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if all of the elements exist, `false` if at least one does not exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2667,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2668,
          "name": "hasAny",
          "source": {
            "line": 55,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2669,
              "name": "hasAny",
              "comment": {
                "description": "Checks if any of the elements exist in the collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "`true` if any of the elements exist, `false` if none exist."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2670,
                  "name": "keys",
                  "comment": {
                    "description": "The keys of the elements to check for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 2649,
          "name": "insert",
          "source": {
            "line": 341,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2650,
              "name": "insert",
              "comment": {
                "description": "Inserts a piece into the store.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The inserted piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2651,
                  "name": "piece",
                  "comment": {
                    "description": "The piece to be inserted into the store.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3095,
          "name": "intersect",
          "source": {
            "line": 366,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3096,
              "name": "intersect",
              "comment": {
                "description": "The intersect method returns a new structure containing items where the keys and values are present in both original structures.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3097,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3098,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2690,
          "name": "keyAt",
          "source": {
            "line": 106,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2691,
              "name": "keyAt",
              "comment": {
                "description": "Identical to {@link Array.at()}.\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2692,
                  "name": "index",
                  "comment": {
                    "description": "The index of the key to obtain",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3160,
          "name": "keys",
          "source": {
            "line": 129,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3161,
              "name": "keys",
              "comment": {
                "description": "Returns an iterable of keys in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2679,
          "name": "last",
          "source": {
            "line": 80,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2680,
              "name": "last",
              "comment": {
                "description": "Obtains the last value(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2681,
              "name": "last",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2682,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 2557,
                  "name": "Route",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2683,
          "name": "lastKey",
          "source": {
            "line": 89,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2684,
              "name": "lastKey",
              "comment": {
                "description": "Obtains the last key(s) in this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array of keys, starting from the start if\namount is negative"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2685,
              "name": "lastKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2686,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2635,
          "name": "load",
          "source": {
            "line": 315,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2636,
              "name": "load",
              "comment": {
                "description": "Loads one or more pieces from a path.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "All the loaded pieces."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2637,
                  "name": "root",
                  "comment": {
                    "description": "The root directory the file is from.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 2638,
                  "name": "path",
                  "comment": {
                    "description": "The path of the file to load, relative to the `root`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 2557,
                      "name": "Route",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2644,
          "name": "loadAll",
          "source": {
            "line": 329,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2645,
              "name": "loadAll",
              "comment": {
                "description": "Loads all pieces from all directories specified by {@link paths}.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2927,
          "name": "map",
          "source": {
            "line": 230,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2928,
              "name": "map",
              "comment": {
                "description": "Maps each item to another value into an array. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.map(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2929,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2930,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new array, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2931,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 230,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2932,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 230,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2933,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2934,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2935,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            },
            {
              "id": 2936,
              "name": "map",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2937,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2938,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2939,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2940,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 231,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2941,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 231,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2942,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2943,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2944,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2945,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2946,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": -1,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2947,
          "name": "mapValues",
          "source": {
            "line": 243,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2948,
              "name": "mapValues",
              "comment": {
                "description": "Maps each item to another value into a collection. Identical in behavior to\n{@link Array.map()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.mapValues(user => user.tag);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2949,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2950,
                  "name": "fn",
                  "comment": {
                    "description": "Function that produces an element of the new collection, taking three arguments",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2951,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 243,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2952,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 243,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2953,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2954,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2955,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2956,
              "name": "mapValues",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2957,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2958,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2959,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2960,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 244,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2961,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 244,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2962,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2963,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2964,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2965,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2966,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2617,
          "name": "match",
          "source": {
            "line": 32,
            "file": "RouteStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L32"
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2618,
              "name": "match",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2619,
                  "name": "request",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "ApiRequest",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": 2596,
                    "name": "RouteMatch",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3107,
          "name": "merge",
          "source": {
            "line": 407,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3108,
              "name": "merge",
              "comment": {
                "description": "Merges two Collections together into a new Collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\n// Sums up the entries in two collections.\ncoll.merge(\n other,\n x => ({ keep: true, value: x }),\n y => ({ keep: true, value: y }),\n (x, y) => ({ keep: true, value: x + y }),\n);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```ts\n// Intersects two collections in a left-biased manner.\ncoll.merge(\n other,\n x => ({ keep: false }),\n y => ({ keep: false }),\n (x, _) => ({ keep: true, value: x }),\n);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3109,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 3110,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3111,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to merge with",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 3112,
                  "name": "whenInSelf",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in this Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3113,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 61
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3114,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 61
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3115,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3116,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3117,
                  "name": "whenInOther",
                  "comment": {
                    "description": "Function getting the result if the entry only exists in the other Collection",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3118,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 105
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3119,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 105
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3120,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3121,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3122,
                  "name": "whenInBoth",
                  "comment": {
                    "description": "Function getting the result if the entry exists in both Collections",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3123,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 407,
                          "character": 153
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3124,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 407,
                              "character": 153
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3125,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3126,
                              "name": "valueOther",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3127,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "../../node_modules/@discordjs/collection/dist/index.d.ts",
                              "qualifiedName": "Keep"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": -1,
                                "name": "R",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Keep",
                            "package": "@discordjs/collection"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "R",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2620,
          "name": "parseURL",
          "source": {
            "line": 63,
            "file": "RouteStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L63"
          },
          "parentId": 2599,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2621,
              "name": "parseURL",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2622,
                  "name": "url",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reflection",
                "reflection": {
                  "id": 2623,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2625,
                      "name": "querystring",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/api/src/lib/structures/RouteStore.ts",
                          "line": 83,
                          "character": 19,
                          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L83"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2624,
                      "name": "splits",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/api/src/lib/structures/RouteStore.ts",
                          "line": 83,
                          "character": 11,
                          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L83"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [
                        2625,
                        2624
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/api/src/lib/structures/RouteStore.ts",
                      "line": 83,
                      "character": 9,
                      "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L83"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 2851,
          "name": "partition",
          "source": {
            "line": 200,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2852,
              "name": "partition",
              "comment": {
                "description": "Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nconst [big, small] = collection.partition(guild => guild.memberCount > 250);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2853,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2854,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2855,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 200,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2856,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 200,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2857,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2858,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2859,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2860,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2861,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2862,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2863,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 201,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2864,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 201,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2865,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2866,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2867,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 2557,
                            "name": "Route",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2868,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2869,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2870,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 202,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2871,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 202,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2872,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2873,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2874,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2875,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2876,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2877,
                  "name": "K2",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2878,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2879,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 203,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2880,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 203,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2881,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2882,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2883,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2884,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "key",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "K2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2885,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "K2",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2886,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2887,
                  "name": "This",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2888,
                  "name": "V2",
                  "constraint": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2889,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2890,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 204,
                          "character": 38
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2891,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 204,
                              "character": 38
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2892,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2893,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2894,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2895,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "predicate",
                            "name": "value",
                            "asserts": false,
                            "targetType": {
                              "type": "reference",
                              "target": -1,
                              "name": "V2",
                              "refersToTypeParameter": true
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2896,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "V2",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Exclude",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 2557,
                            "name": "Route",
                            "packageName": "@sapphire/plugin-api",
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V2",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 2897,
              "name": "partition",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2898,
                  "name": "This",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2899,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2900,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 205,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2901,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 205,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2902,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "This",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2903,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2904,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2905,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2906,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "This",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Collection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2693,
          "name": "random",
          "source": {
            "line": 113,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2694,
              "name": "random",
              "comment": {
                "description": "Obtains unique random value(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single value if no amount is provided or an array of values"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 2695,
              "name": "random",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2696,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 2557,
                  "name": "Route",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2697,
          "name": "randomKey",
          "source": {
            "line": 121,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2698,
              "name": "randomKey",
              "comment": {
                "description": "Obtains unique random key(s) from this collection.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A single key if no amount is provided or an array"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            },
            {
              "id": 2699,
              "name": "randomKey",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2700,
                  "name": "amount",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ]
        },
        {
          "id": 3041,
          "name": "reduce",
          "source": {
            "line": 287,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3042,
              "name": "reduce",
              "comment": {
                "description": "Applies a function to produce a single value. Identical in behavior to\n{@link Array.reduce()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.reduce((acc, guild) => acc + guild.memberCount, 0);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3043,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3044,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3045,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 287,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3046,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 287,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3047,
                              "name": "accumulator",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3048,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 3049,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 3050,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "T",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3051,
                  "name": "initialValue",
                  "comment": {
                    "description": "Starting value for the accumulator",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": -1,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2632,
          "name": "registerPath",
          "source": {
            "line": 308,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2633,
              "name": "registerPath",
              "comment": {
                "description": "Registers a directory into the store.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nstore\n  .registerPath(resolve('commands'))\n  .registerPath(resolve('third-party', 'commands'));\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2634,
                  "name": "path",
                  "comment": {
                    "description": "The path to be added.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Path",
                    "packageName": "@sapphire/pieces",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2646,
          "name": "resolve",
          "source": {
            "line": 335,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2647,
              "name": "resolve",
              "comment": {
                "description": "Resolves a piece by its name or its instance.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The resolved piece."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2648,
                  "name": "name",
                  "comment": {
                    "description": "The name of the piece or the instance itself.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2557,
                "name": "Route",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2701,
          "name": "reverse",
          "source": {
            "line": 127,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2702,
              "name": "reverse",
              "comment": {
                "description": "Identical to {@link Array.reverse()}\nbut returns a Collection instead of an Array.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3153,
          "name": "set",
          "source": {
            "line": 42,
            "file": "lib.es2015.collection.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3154,
              "name": "set",
              "comment": {
                "description": "Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3155,
                  "name": "key",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 3156,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 2967,
          "name": "some",
          "source": {
            "line": 256,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2968,
              "name": "some",
              "comment": {
                "description": "Checks if there exists an item that passes a test. Identical in behavior to\n{@link Array.some()}.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.some(user => user.discriminator === '0000');\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2969,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2970,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 256,
                          "character": 13
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2971,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 256,
                              "character": 13
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2972,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2973,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2974,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            },
            {
              "id": 2975,
              "name": "some",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2976,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2977,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2978,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 257,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2979,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 257,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2980,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2981,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2982,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2983,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2984,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 3092,
          "name": "sort",
          "source": {
            "line": 360,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3093,
              "name": "sort",
              "comment": {
                "description": "The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3094,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3128,
          "name": "sorted",
          "source": {
            "line": 421,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3129,
              "name": "sorted",
              "comment": {
                "description": "The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3130,
                  "name": "compareFunction",
                  "comment": {
                    "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Comparator",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3099,
          "name": "subtract",
          "source": {
            "line": 372,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3100,
              "name": "subtract",
              "comment": {
                "description": "The subtract method returns a new structure containing items where the keys and values of the original structure are not present in the other.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3101,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3102,
                  "name": "other",
                  "comment": {
                    "description": "The other Collection to filter against",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlyCollection",
                    "packageName": "@discordjs/collection",
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": -1,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2777,
          "name": "sweep",
          "source": {
            "line": 169,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2778,
              "name": "sweep",
              "comment": {
                "description": "Removes items that satisfy the provided filter function.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "The number of removed entries"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2779,
                  "name": "fn",
                  "comment": {
                    "description": "Function used to test (should return a boolean)",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2780,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 169,
                          "character": 14
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2781,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 169,
                              "character": 14
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2782,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2783,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2784,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 2785,
              "name": "sweep",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2786,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2787,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2788,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 170,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2789,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 170,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2790,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2791,
                              "name": "value",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2557,
                                "name": "Route",
                                "package": "@sapphire/plugin-api"
                              }
                            },
                            {
                              "id": 2792,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 2793,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2794,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 3070,
          "name": "tap",
          "source": {
            "line": 318,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3071,
              "name": "tap",
              "comment": {
                "description": "Runs a function on the collection and returns the collection.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\ncollection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 3072,
                  "name": "fn",
                  "comment": {
                    "description": "Function to execute",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3073,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 318,
                          "character": 12
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3074,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 318,
                              "character": 12
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3075,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            },
            {
              "id": 3076,
              "name": "tap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 3077,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 3078,
                  "name": "fn",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 3079,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 319,
                          "character": 15
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3080,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 319,
                              "character": 15
                            }
                          ],
                          "parameters": [
                            {
                              "id": 3081,
                              "name": "this",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "T",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 3082,
                              "name": "collection",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": 2599,
                                "name": "RouteStore",
                                "package": "@sapphire/plugin-api"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3083,
                  "name": "thisArg",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 2599,
                "name": "RouteStore",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 3131,
          "name": "toJSON",
          "source": {
            "line": 422,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3132,
              "name": "toJSON",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 2557,
                  "name": "Route",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 2639,
          "name": "unload",
          "source": {
            "line": 321,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2640,
              "name": "unload",
              "comment": {
                "description": "Unloads a piece given its instance or its name.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Returns the piece that was unloaded."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 2641,
                  "name": "name",
                  "comment": {
                    "description": "The name of the file to load.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "reference",
                        "id": 2557,
                        "name": "Route",
                        "packageName": "@sapphire/plugin-api",
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2642,
          "name": "unloadAll",
          "source": {
            "line": 325,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 2643,
              "name": "unloadAll",
              "comment": {
                "description": "Unloads all pieces from the store.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 2557,
                      "name": "Route",
                      "packageName": "@sapphire/plugin-api",
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 3162,
          "name": "values",
          "source": {
            "line": 134,
            "file": "lib.es2015.iterable.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 3163,
              "name": "values",
              "comment": {
                "description": "Returns an iterable of values in the map",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "IterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 2557,
                    "name": "Route",
                    "packageName": "@sapphire/plugin-api",
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2602,
          "name": "combineEntries",
          "source": {
            "line": 435,
            "file": "index.d.ts",
            "path": "node_modules/@discordjs/collection/dist",
            "url": null
          },
          "parentId": 2599,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 2603,
              "name": "combineEntries",
              "comment": {
                "description": "Creates a Collection from a list of entries.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```ts\nCollection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n// returns Collection { \"a\" => 3, \"b\" => 2 }\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 2604,
                  "name": "K",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 2605,
                  "name": "V",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 2606,
                  "name": "entries",
                  "comment": {
                    "description": "The list of entries",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Iterable",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "tuple",
                        "types": [
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "K",
                            "packageName": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": -1,
                            "name": "V",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 2607,
                  "name": "combine",
                  "comment": {
                    "description": "Function to combine an existing entry with a new one",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 2608,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                          "line": 435,
                          "character": 68
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2609,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@discordjs/collection/dist/index.d.ts",
                              "line": 435,
                              "character": 68
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2610,
                              "name": "firstValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2611,
                              "name": "secondValue",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "V",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "id": 2612,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true
                              },
                              "type": {
                                "type": "reference",
                                "target": -1,
                                "name": "K",
                                "refersToTypeParameter": true
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": -1,
                            "name": "V",
                            "refersToTypeParameter": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Collection",
                "packageName": "@discordjs/collection",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": -1,
                    "name": "V",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 1213,
      "name": "Server",
      "source": {
        "line": 26,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L26"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "EventEmitter",
        "packageName": "@types/node",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 1254,
        "name": "constructor",
        "source": {
          "line": 67,
          "file": "Server.ts",
          "path": "packages/api/src/lib/structures/http",
          "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L67"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1213,
        "accessibility": "public",
        "parameters": [
          {
            "id": 1256,
            "name": "options",
            "comment": {
              "description": "The options for this server",
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 1344,
              "name": "ServerOptions",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 1260,
          "name": "auth",
          "source": {
            "line": 49,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L49"
          },
          "comment": {
            "description": "The authentication system.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": 1088,
                "name": "Auth",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1259,
          "name": "mediaParsers",
          "source": {
            "line": 43,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L43"
          },
          "comment": {
            "description": "The media parsers this server holds.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.3.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1397,
            "name": "MediaParserStore",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1258,
          "name": "middlewares",
          "source": {
            "line": 37,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L37"
          },
          "comment": {
            "description": "The middlewares this server holds.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1993,
            "name": "MiddlewareStore",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1262,
          "name": "options",
          "source": {
            "line": 61,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L61"
          },
          "comment": {
            "description": "The options for this server.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1353,
            "name": "AuthLessServerOptions",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1257,
          "name": "routes",
          "source": {
            "line": 31,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L31"
          },
          "comment": {
            "description": "The routes this server holds.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 2599,
            "name": "RouteStore",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1261,
          "name": "server",
          "source": {
            "line": 55,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L55"
          },
          "comment": {
            "description": "The http.Server instance that manages the recieved HTTP requests.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"http\".Server",
            "packageName": "@types/node",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "\"http\".IncomingMessage",
                  "packageName": "@types/node",
                  "typeArguments": []
                }
              },
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "\"http\".ServerResponse",
                  "packageName": "@types/node",
                  "typeArguments": []
                }
              }
            ]
          }
        },
        {
          "id": 1251,
          "name": "captureRejectionSymbol",
          "source": {
            "line": 328,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 53,
              "name": "EventEmitter.captureRejectionSymbol",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        },
        {
          "id": 1252,
          "name": "captureRejections",
          "source": {
            "line": 333,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Sets or gets the default captureRejection value for all emitters.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1253,
          "name": "defaultMaxListeners",
          "source": {
            "line": 334,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1250,
          "name": "errorMonitor",
          "source": {
            "line": 327,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": 52,
              "name": "EventEmitter.errorMonitor",
              "packageName": "@types/node",
              "typeArguments": []
            }
          }
        }
      ],
      "methods": [
        {
          "id": 1267,
          "name": "addListener",
          "source": {
            "line": 354,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1268,
              "name": "addListener",
              "comment": {
                "description": "Alias for `emitter.on(eventName, listener)`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1269,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1270,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1271,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 354,
                          "character": 66
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1272,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 354,
                              "character": 66
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1273,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1263,
          "name": "connect",
          "source": {
            "line": 86,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L86"
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1264,
              "name": "connect",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1265,
          "name": "disconnect",
          "source": {
            "line": 121,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L121"
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1266,
              "name": "disconnect",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1316,
          "name": "emit",
          "source": {
            "line": 610,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1317,
              "name": "emit",
              "comment": {
                "description": "Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\nto each.\n\nReturns `true` if the event had listeners, `false` otherwise.\n\n```js\nconst EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1318,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1319,
                  "name": "args",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 1338,
          "name": "eventNames",
          "source": {
            "line": 673,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1339,
              "name": "eventNames",
              "comment": {
                "description": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v6.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    {
                      "kind": "intrinsic",
                      "type": "symbol"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 1308,
          "name": "getMaxListeners",
          "source": {
            "line": 526,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1309,
              "name": "getMaxListeners",
              "comment": {
                "description": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v1.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 1320,
          "name": "listenerCount",
          "source": {
            "line": 620,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1321,
              "name": "listenerCount",
              "comment": {
                "description": "Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v3.2.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1322,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1323,
                  "name": "listener",
                  "comment": {
                    "description": "The event handler function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 1310,
          "name": "listeners",
          "source": {
            "line": 539,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1311,
              "name": "listeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1312,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1295,
          "name": "off",
          "source": {
            "line": 499,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1296,
              "name": "off",
              "comment": {
                "description": "Alias for `emitter.removeListener()`.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v10.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1297,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1298,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1299,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 499,
                          "character": 58
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1300,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 499,
                              "character": 58
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1301,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1274,
          "name": "on",
          "source": {
            "line": 385,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1275,
              "name": "on",
              "comment": {
                "description": "Adds the `listener` function to the end of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.101"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1276,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1277,
                  "name": "listener",
                  "comment": {
                    "description": "The callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1278,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 385,
                          "character": 57
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1279,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 385,
                              "character": 57
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1280,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1281,
          "name": "once",
          "source": {
            "line": 414,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1282,
              "name": "once",
              "comment": {
                "description": "Adds a **one-time**`listener` function for the event named `eventName`. The\nnext time `eventName` is triggered, this listener is removed and then invoked.\n\n```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1283,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1284,
                  "name": "listener",
                  "comment": {
                    "description": "The callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1285,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 414,
                          "character": 59
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1286,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 414,
                              "character": 59
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1287,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1324,
          "name": "prependListener",
          "source": {
            "line": 638,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1325,
              "name": "prependListener",
              "comment": {
                "description": "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v6.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1326,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1327,
                  "name": "listener",
                  "comment": {
                    "description": "The callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1328,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 638,
                          "character": 70
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1329,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 638,
                              "character": 70
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1330,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1331,
          "name": "prependOnceListener",
          "source": {
            "line": 654,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1332,
              "name": "prependOnceListener",
              "comment": {
                "description": "Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v6.0.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1333,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1334,
                  "name": "listener",
                  "comment": {
                    "description": "The callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1335,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 654,
                          "character": 74
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1336,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 654,
                              "character": 74
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1337,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1313,
          "name": "rawListeners",
          "source": {
            "line": 569,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1314,
              "name": "rawListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v9.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1315,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1302,
          "name": "removeAllListeners",
          "source": {
            "line": 510,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1303,
              "name": "removeAllListeners",
              "comment": {
                "description": "Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1304,
                  "name": "event",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1288,
          "name": "removeListener",
          "source": {
            "line": 494,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1289,
              "name": "removeListener",
              "comment": {
                "description": "Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.1.26"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1290,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1291,
                  "name": "listener",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 1292,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/events.d.ts",
                          "line": 494,
                          "character": 69
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1293,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/node/events.d.ts",
                              "line": 494,
                              "character": 69
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1294,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isExternal": true,
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1305,
          "name": "setMaxListeners",
          "source": {
            "line": 520,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 1306,
              "name": "setMaxListeners",
              "comment": {
                "description": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.3.5"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1307,
                  "name": "n",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1213,
                "name": "Server",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 1242,
          "name": "getEventListeners",
          "source": {
            "line": 299,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1243,
              "name": "getEventListeners",
              "comment": {
                "description": "Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.2.0, v14.17.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1244,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "__global.NodeJS.EventEmitter",
                        "packageName": "@types/node",
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "_DOMEventTarget",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 1245,
                  "name": "name",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "Function",
                  "packageName": "typescript",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 1238,
          "name": "listenerCount",
          "source": {
            "line": 271,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1239,
              "name": "listenerCount",
              "comment": {
                "description": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v0.9.12"
                  },
                  {
                    "name": "deprecated",
                    "text": "Since v3.2.0 - Use `listenerCount` instead."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1240,
                  "name": "emitter",
                  "comment": {
                    "description": "The emitter to query",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1241,
                  "name": "eventName",
                  "comment": {
                    "description": "The event name",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ]
        },
        {
          "id": 1228,
          "name": "on",
          "source": {
            "line": 254,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1229,
              "name": "on",
              "comment": {
                "description": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v13.6.0, v12.16.0"
                  },
                  {
                    "name": "returns",
                    "text": "that iterates `eventName` events emitted by the `emitter`"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1230,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.NodeJS.EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1231,
                  "name": "eventName",
                  "comment": {
                    "description": "The name of the event being listened for",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1232,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            },
            {
              "id": 1233,
              "name": "on",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1234,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 1235,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1236,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 1237,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "AsyncIterableIterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1214,
          "name": "once",
          "source": {
            "line": 194,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1215,
              "name": "once",
              "comment": {
                "description": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v11.13.0, v10.16.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1216,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_NodeEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1217,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      },
                      {
                        "kind": "intrinsic",
                        "type": "symbol"
                      }
                    ]
                  }
                },
                {
                  "id": 1218,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 1219,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1220,
                  "name": "emitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "_DOMEventTarget",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                },
                {
                  "id": 1221,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                },
                {
                  "id": 1222,
                  "name": "options",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "StaticEventEmitterOptions",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                ]
              }
            },
            {
              "id": 1223,
              "name": "once",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 1224,
                  "name": "E",
                  "constraint": {
                    "kind": "reference",
                    "id": null,
                    "name": "EventEmitter",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 1225,
                  "name": "K",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "ClientEvents",
                      "packageName": "discord.js",
                      "typeArguments": []
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 1226,
                  "name": "eventEmitter",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": -1,
                    "name": "E",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 1227,
                  "name": "eventName",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "falseType": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": -1,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "Client",
                      "packageName": "discord.js",
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "indexedAccess",
                      "objectType": {
                        "kind": "reference",
                        "id": null,
                        "name": "ClientEvents",
                        "packageName": "discord.js",
                        "typeArguments": []
                      },
                      "indexType": {
                        "kind": "reference",
                        "id": -1,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    },
                    "falseType": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1246,
          "name": "setMaxListeners",
          "source": {
            "line": 317,
            "file": "events.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 1213,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 1247,
              "name": "setMaxListeners",
              "comment": {
                "description": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```",
                "blockTags": [
                  {
                    "name": "since",
                    "text": "v15.4.0"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 1248,
                  "name": "n",
                  "comment": {
                    "description": "A non-negative number. The maximum number of listeners per `EventTarget` event.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 1249,
                  "name": "eventTargets",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "union",
                      "types": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "__global.NodeJS.EventEmitter",
                          "packageName": "@types/node",
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "_DOMEventTarget",
                          "packageName": "@types/node",
                          "typeArguments": []
                        }
                      ]
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        }
      ]
    }
  ],
  "enums": [
    {
      "id": 1140,
      "name": "HttpCodes",
      "source": {
        "line": 1,
        "file": "HttpCodes.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L1"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 1143,
          "name": "Accepted",
          "source": {
            "line": 22,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L22"
          },
          "comment": {
            "description": "The request has been accepted for processing, but the processing has not\nbeen completed. The request might or might not be eventually acted upon,\nand may be disallowed when processing occurs.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "202"
        },
        {
          "id": 1149,
          "name": "AlreadyReported",
          "source": {
            "line": 63,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L63"
          },
          "comment": {
            "description": "(WebDAV; RFC 5842) The members of a DAV binding have already been\nenumerated in a preceding part of the (multistatus) response, and are not\nbeing included again.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "208"
        },
        {
          "id": 1192,
          "name": "BadGateway",
          "source": {
            "line": 385,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L385"
          },
          "comment": {
            "description": "The server was acting as a gateway or proxy and received an invalid\nresponse from the upstream server.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "502"
        },
        {
          "id": 1160,
          "name": "BadRequest",
          "source": {
            "line": 150,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L150"
          },
          "comment": {
            "description": "The server cannot or will not process the request due to an apparent\nclient error (e.g., malformed request syntax, size too large, invalid\nrequest message framing, or deceptive request routing).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "400"
        },
        {
          "id": 1169,
          "name": "Conflict",
          "source": {
            "line": 225,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L225"
          },
          "comment": {
            "description": "Indicates that the request could not be processed because of conflict in\nthe current state of the resource, such as an edit conflict between\nmultiple simultaneous updates.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "409"
        },
        {
          "id": 1142,
          "name": "Created",
          "source": {
            "line": 15,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L15"
          },
          "comment": {
            "description": "The request has been fulfilled, resulting in the creation of a new\nresource.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "201"
        },
        {
          "id": 1179,
          "name": "EnhanceYourCalm",
          "source": {
            "line": 301,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L301"
          },
          "comment": {
            "description": "Returned by the Twitter Search and Trends API when the client is being rate limited.\nThe text is a quote from 'Demolition Man' and the '420' code is likely a reference\nto this number's association with marijuana. Other services may wish to implement\nthe 429 Too Many Requests response code instead.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "420"
        },
        {
          "id": 1177,
          "name": "ExpectationFailed",
          "source": {
            "line": 283,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L283"
          },
          "comment": {
            "description": "The server cannot meet the requirements of the Expect request-header\nfield.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "417"
        },
        {
          "id": 1183,
          "name": "FailedDependency",
          "source": {
            "line": 324,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L324"
          },
          "comment": {
            "description": "(WebDAV; RFC 4918) The request failed because it depended on another\nrequest and that request failed (e.g., a PROPPATCH).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "424"
        },
        {
          "id": 1163,
          "name": "Forbidden",
          "source": {
            "line": 186,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L186"
          },
          "comment": {
            "description": "The request contained valid data and was understood by the server, but\nthe server is refusing action. This may be due to the user not having the\nnecessary permissions for a resource or needing an account of some sort,\nor attempting a prohibited action (e.g. creating a duplicate record\nwhere only one is allowed). This code is also typically used if the\nrequest provided authentication by answering the WWW-Authenticate header\nfield challenge, but the server did not accept that authentication. The\nrequest should not be repeated.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "403"
        },
        {
          "id": 1153,
          "name": "Found",
          "source": {
            "line": 97,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L97"
          },
          "comment": {
            "description": "(Previously \"Moved temporarily\") Tells the client to look at (browse to)\nanother URL. 302 has been superseded by 303 and 307. This is an example\nof industry practice contradicting the standard. The HTTP/1.0\nspecification (RFC 1945) required the client to perform a temporary\nredirect (the original describing phrase was \"Moved Temporarily\"), but\npopular browsers implemented 302 with the functionality of a 303 See\nOther. Therefore, HTTP/1.1 added status codes 303 and 307 to distinguish\nbetween the two behaviours. However, some Web applications and frameworks\nuse the 302 status code as if it were the 303.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "302"
        },
        {
          "id": 1194,
          "name": "GatewayTimeout",
          "source": {
            "line": 397,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L397"
          },
          "comment": {
            "description": "The server was acting as a gateway or proxy and did not receive a timely\nresponse from the upstream server.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "504"
        },
        {
          "id": 1170,
          "name": "Gone",
          "source": {
            "line": 236,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L236"
          },
          "comment": {
            "description": "Indicates that the resource requested is no longer available and will not\nbe available again. This should be used when a resource has been\nintentionally removed and the resource should be purged. Upon receiving a\n410 status code, the client should not request the resource in the future.\nClients such as search engines should remove the resource from their\nindices. Most use cases do not require clients and search engines to\npurge the resource, and a \"404 Not Found\" may be used instead.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "410"
        },
        {
          "id": 1195,
          "name": "HTTPVersionNotSupported",
          "source": {
            "line": 402,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L402"
          },
          "comment": {
            "description": "The server does not support the HTTP protocol version used in the request.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "505"
        },
        {
          "id": 1178,
          "name": "IAmATeapot",
          "source": {
            "line": 293,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L293"
          },
          "comment": {
            "description": "(RFC 2324, RFC 7168) This code was defined in 1998 as one of the\ntraditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot\nControl Protocol, and is not expected to be implemented by actual HTTP\nservers. The RFC specifies this code should be returned by teapots\nrequested to brew coffee. This HTTP status is used as an Easter egg in\nsome websites, such as Google.com's I'm a teapot easter egg.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "418"
        },
        {
          "id": 1150,
          "name": "IMUsed",
          "source": {
            "line": 70,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L70"
          },
          "comment": {
            "description": "(RFC 3229) The server has fulfilled a request for the resource, and the\nresponse is a representation of the result of one or more\ninstance-manipulations applied to the current instance.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "226"
        },
        {
          "id": 1197,
          "name": "InsufficientStorage",
          "source": {
            "line": 414,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L414"
          },
          "comment": {
            "description": "(WebDAV; RFC 4918) The server is unable to store the representation\nneeded to complete the request.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "507"
        },
        {
          "id": 1190,
          "name": "InternalServerError",
          "source": {
            "line": 372,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L372"
          },
          "comment": {
            "description": "A generic error message, given when an unexpected condition was\nencountered and no more specific message is suitable.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "500"
        },
        {
          "id": 1171,
          "name": "LengthRequired",
          "source": {
            "line": 242,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L242"
          },
          "comment": {
            "description": "The request did not specify the length of its content, which is required\nby the requested resource.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "411"
        },
        {
          "id": 1182,
          "name": "Locked",
          "source": {
            "line": 318,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L318"
          },
          "comment": {
            "description": "(WebDAV; RFC 4918) The resource that is being accessed is locked.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "423"
        },
        {
          "id": 1198,
          "name": "LoopDetected",
          "source": {
            "line": 420,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L420"
          },
          "comment": {
            "description": "(WebDAV; RFC 5842) The server detected an infinite loop while processing\nthe request (sent instead of 208 Already Reported).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "508"
        },
        {
          "id": 1165,
          "name": "MethodNotAllowed",
          "source": {
            "line": 199,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L199"
          },
          "comment": {
            "description": "A request method is not supported for the requested resource; for example,\na GET request on a form that requires data to be presented via POST, or a\nPUT request on a read-only resource.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "405"
        },
        {
          "id": 1180,
          "name": "MisdirectedRequest",
          "source": {
            "line": 307,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L307"
          },
          "comment": {
            "description": "(RFC 7540) The request was directed at a server that is not able to\nproduce a response (for example because of connection reuse).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "421"
        },
        {
          "id": 1152,
          "name": "MovedPermanently",
          "source": {
            "line": 84,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L84"
          },
          "comment": {
            "description": "This and all future requests should be directed to the given URI.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "301"
        },
        {
          "id": 1148,
          "name": "MultiStatus",
          "source": {
            "line": 56,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L56"
          },
          "comment": {
            "description": "(WebDAV; RFC 4918) The message body that follows is by default an XML\nmessage and can contain a number of separate response codes, depending on\nhow many sub-requests were made.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "207"
        },
        {
          "id": 1151,
          "name": "MultipleChoices",
          "source": {
            "line": 79,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L79"
          },
          "comment": {
            "description": "Indicates multiple options for the resource from which the client may\nchoose (via agent-driven content negotiation). For example, this code\ncould be used to present multiple video format options, to list files\nwith different filename extensions, or to suggest word-sense\ndisambiguation.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "300"
        },
        {
          "id": 1200,
          "name": "NetworkAuthenticationRequired",
          "source": {
            "line": 434,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L434"
          },
          "comment": {
            "description": "(RFC 6585) The client needs to authenticate to gain network access.\nIntended for use by intercepting proxies used to control access to the\nnetwork (e.g., \"captive portals\" used to require agreement to Terms of\nService before granting full Internet access via a Wi-Fi hotspot).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "511"
        },
        {
          "id": 1145,
          "name": "NoContent",
          "source": {
            "line": 35,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L35"
          },
          "comment": {
            "description": "The server successfully processed the request, and is not returning any\ncontent.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "204"
        },
        {
          "id": 1144,
          "name": "NonAuthoritativeInformation",
          "source": {
            "line": 29,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L29"
          },
          "comment": {
            "description": "The server is a transforming proxy (e.g. a Web accelerator) that received\na 200 OK from its origin, but is returning a modified version of the\norigin's response.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "203"
        },
        {
          "id": 1166,
          "name": "NotAcceptable",
          "source": {
            "line": 205,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L205"
          },
          "comment": {
            "description": "The requested resource is capable of generating only content not\nacceptable according to the Accept headers sent in the request. See Content negotiation.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "406"
        },
        {
          "id": 1199,
          "name": "NotExtended",
          "source": {
            "line": 426,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L426"
          },
          "comment": {
            "description": "(RFC 2774) Further extensions to the request are required for the server\nto fulfil it.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "510"
        },
        {
          "id": 1164,
          "name": "NotFound",
          "source": {
            "line": 192,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L192"
          },
          "comment": {
            "description": "The requested resource could not be found but may be available in the\nfuture. Subsequent requests by the client are permissible.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "404"
        },
        {
          "id": 1191,
          "name": "NotImplemented",
          "source": {
            "line": 379,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L379"
          },
          "comment": {
            "description": "The server either does not recognize the request method, or it lacks the\nability to fulfil the request. Usually this implies future availability\n(e.g., a new feature of a web-service API).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "501"
        },
        {
          "id": 1155,
          "name": "NotModified",
          "source": {
            "line": 113,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L113"
          },
          "comment": {
            "description": "(RFC 7232) Indicates that the resource has not been modified since the\nversion specified by the request headers If-Modified-Since or\nIf-None-Match. In such case, there is no need to retransmit the resource\nsince the client still has a previously-downloaded copy.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "304"
        },
        {
          "id": 1141,
          "name": "OK",
          "source": {
            "line": 9,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L9"
          },
          "comment": {
            "description": "Standard response for successful HTTP requests. The actual response will\ndepend on the request method used. In a GET request, the response will\ncontain an entity corresponding to the requested resource. In a POST\nrequest, the response will contain an entity describing or containing the\nresult of the action.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "200"
        },
        {
          "id": 1147,
          "name": "PartialContent",
          "source": {
            "line": 49,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L49"
          },
          "comment": {
            "description": "(RFC 7233) The server is delivering only part of the resource (byte\nserving) due to a range header sent by the client. The range header is\nused by HTTP clients to enable resuming of interrupted downloads, or\nsplit a download into multiple simultaneous streams.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "206"
        },
        {
          "id": 1173,
          "name": "PayloadTooLarge",
          "source": {
            "line": 254,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L254"
          },
          "comment": {
            "description": "(RFC 7231) The request is larger than the server is willing or able to\nprocess. Previously called \"Request Entity Too Large\".",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "413"
        },
        {
          "id": 1162,
          "name": "PaymentRequired",
          "source": {
            "line": 174,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L174"
          },
          "comment": {
            "description": "Reserved for future use. The original intention was that this code might\nbe used as part of some form of digital cash or micropayment scheme, as\nproposed, for example, by GNU Taler, but that has not yet happened, and\nthis code is not widely used. Google Developers API uses this status if a\nparticular developer has exceeded the daily limit on requests. Sipgate\nuses this code if an account does not have sufficient funds to start a\ncall. Shopify uses this code when the store has not paid their fees and\nis temporarily disabled. Stripe uses this code for failed payments where\nparameters were correct, for example blocked fraudulent payments.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "402"
        },
        {
          "id": 1159,
          "name": "PermanentRedirect",
          "source": {
            "line": 143,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L143"
          },
          "comment": {
            "description": "(RFC 7538) The request and all future requests should be repeated using\nanother URI. 307 and 308 parallel the behaviors of 302 and 301, but do\nnot allow the HTTP method to change. So, for example, submitting a form\nto a permanently redirected resource may continue smoothly.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "308"
        },
        {
          "id": 1172,
          "name": "PreconditionFailed",
          "source": {
            "line": 248,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L248"
          },
          "comment": {
            "description": "(RFC 7232) The server does not meet one of the preconditions that the\nrequester put on the request header fields.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "412"
        },
        {
          "id": 1186,
          "name": "PreconditionRequired",
          "source": {
            "line": 345,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L345"
          },
          "comment": {
            "description": "(RFC 6585) The origin server requires the request to be conditional.\nIntended to prevent the 'lost update' problem, where a client GETs a\nresource's state, modifies it, and PUTs it back to the server, when\nmeanwhile a third party has modified the state on the server, leading to\na conflict.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "428"
        },
        {
          "id": 1167,
          "name": "ProxyAuthenticationRequired",
          "source": {
            "line": 210,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L210"
          },
          "comment": {
            "description": "(RFC 7235) The client must first authenticate itself with the proxy.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "407"
        },
        {
          "id": 1176,
          "name": "RangeNotSatisfiable",
          "source": {
            "line": 277,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L277"
          },
          "comment": {
            "description": "(RFC 7233) The client has asked for a portion of the file (byte serving),\nbut the server cannot supply that portion. For example, if the client\nasked for a part of the file that lies beyond the end of the file. Called\n\"Requested Range Not Satisfiable\" previously.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "416"
        },
        {
          "id": 1188,
          "name": "RequestHeaderFieldsTooLarge",
          "source": {
            "line": 358,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L358"
          },
          "comment": {
            "description": "(RFC 6585) The server is unwilling to process the request because either\nan individual header field, or all the header fields collectively, are\ntoo large.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "431"
        },
        {
          "id": 1168,
          "name": "RequestTimeout",
          "source": {
            "line": 218,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L218"
          },
          "comment": {
            "description": "The server timed out waiting for the request. According to HTTP\nspecifications: \"The client did not produce a request within the time\nthat the server was prepared to wait. The client MAY repeat the request\nwithout modifications at any later time.\"",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "408"
        },
        {
          "id": 1146,
          "name": "ResetContent",
          "source": {
            "line": 41,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L41"
          },
          "comment": {
            "description": "The server successfully processed the request, asks that the requester\nreset its document view, and is not returning any content.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "205"
        },
        {
          "id": 1154,
          "name": "SeeOther",
          "source": {
            "line": 105,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L105"
          },
          "comment": {
            "description": "The response to the request can be found under another URI using the GET\nmethod. When received in response to a POST (or PUT/DELETE), the client\nshould presume that the server has received the data and should issue a\nnew GET request to the given URI.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "303"
        },
        {
          "id": 1193,
          "name": "ServiceUnavailable",
          "source": {
            "line": 391,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L391"
          },
          "comment": {
            "description": "The server cannot handle the request (because it is overloaded or down\nfor maintenance). Generally, this is a temporary state.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "503"
        },
        {
          "id": 1157,
          "name": "SwitchProxy",
          "source": {
            "line": 126,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L126"
          },
          "comment": {
            "description": "No longer used. Originally meant \"Subsequent requests should use the\nspecified proxy.\".",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "306"
        },
        {
          "id": 1158,
          "name": "TemporaryRedirect",
          "source": {
            "line": 135,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L135"
          },
          "comment": {
            "description": "In this case, the request should be repeated with another URI; however,\nfuture requests should still use the original URI. In contrast to how 302\nwas historically implemented, the request method is not allowed to be\nchanged when reissuing the original request. For example, a POST request\nshould be repeated using another POST request.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "307"
        },
        {
          "id": 1184,
          "name": "TooEarly",
          "source": {
            "line": 330,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L330"
          },
          "comment": {
            "description": "(RFC 8470) Indicates that the server is unwilling to risk processing a\nrequest that might be replayed.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "425"
        },
        {
          "id": 1187,
          "name": "TooManyRequests",
          "source": {
            "line": 351,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L351"
          },
          "comment": {
            "description": "(RFC 6585) The user has sent too many requests in a given amount of time.\nIntended for use with rate-limiting schemes.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "429"
        },
        {
          "id": 1174,
          "name": "URITooLong",
          "source": {
            "line": 262,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L262"
          },
          "comment": {
            "description": "(RFC 7231) The URI provided was too long for the server to process. Often\nthe result of too much data being encoded as a query-string of a GET\nrequest, in which case it should be converted to a POST request. Called\n\"Request-URI Too Long\" previously.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "414"
        },
        {
          "id": 1161,
          "name": "Unauthorized",
          "source": {
            "line": 161,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L161"
          },
          "comment": {
            "description": "(RFC 7235) Similar to 403 Forbidden, but specifically for use when\nauthentication is required and has failed or has not yet been provided.\nThe response must include a WWW-Authenticate header field containing a\nchallenge applicable to the requested resource. See Basic access\nauthentication and Digest access authentication. 401 semantically means\n\"unauthorised\", the user does not have valid authentication credentials\nfor the target resource.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "401"
        },
        {
          "id": 1189,
          "name": "UnavailableForLegalReasons",
          "source": {
            "line": 366,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L366"
          },
          "comment": {
            "description": "(RFC 7725) A server operator has received a legal demand to deny access\nto a resource or to a set of resources that includes the requested\nresource. The code 451 was chosen as a reference to the novel Fahrenheit\n451 (see the Acknowledgements in the RFC).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "451"
        },
        {
          "id": 1181,
          "name": "UnprocessableEntity",
          "source": {
            "line": 313,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L313"
          },
          "comment": {
            "description": "(WebDAV; RFC 4918) The request was well-formed but was unable to be\nfollowed due to semantic errors.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "422"
        },
        {
          "id": 1175,
          "name": "UnsupportedMediaType",
          "source": {
            "line": 269,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L269"
          },
          "comment": {
            "description": "(RFC 7231) The request entity has a media type which the server or\nresource does not support. For example, the client uploads an image as\nimage/svg+xml, but the server requires that images use a different format.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "415"
        },
        {
          "id": 1185,
          "name": "UpgradeRequired",
          "source": {
            "line": 336,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L336"
          },
          "comment": {
            "description": "The client should switch to a different protocol such as TLS/1.0, given\nin the Upgrade header field.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "426"
        },
        {
          "id": 1156,
          "name": "UseProxy",
          "source": {
            "line": 121,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L121"
          },
          "comment": {
            "description": "The requested resource is available only through a proxy, the address for\nwhich is provided in the response. For security reasons, many HTTP\nclients (such as Mozilla Firefox and Internet Explorer) do not obey this\nstatus code.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "305"
        },
        {
          "id": 1196,
          "name": "VariantAlsoNegotiates",
          "source": {
            "line": 408,
            "file": "HttpCodes.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpCodes.ts#L408"
          },
          "comment": {
            "description": "(RFC 2295) Transparent content negotiation for the request results in a\ncircular reference.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1140,
          "value": "506"
        }
      ]
    },
    {
      "id": 3167,
      "name": "MimeTypes",
      "source": {
        "line": 1,
        "file": "MimeTypes.ts",
        "path": "packages/api/src/lib/utils",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L1"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 3168,
          "name": "ApplicationFormUrlEncoded",
          "source": {
            "line": 2,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L2"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "application/x-www-form-urlencoded"
        },
        {
          "id": 3169,
          "name": "ApplicationJson",
          "source": {
            "line": 3,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L3"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "application/json"
        },
        {
          "id": 3170,
          "name": "AudioOgg",
          "source": {
            "line": 4,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L4"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "audio/ogg"
        },
        {
          "id": 3171,
          "name": "AudioOpus",
          "source": {
            "line": 5,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L5"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "audio/opus"
        },
        {
          "id": 3172,
          "name": "AudioWebm",
          "source": {
            "line": 6,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L6"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "audio/webm"
        },
        {
          "id": 3173,
          "name": "ImageGif",
          "source": {
            "line": 7,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L7"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "image/gif"
        },
        {
          "id": 3174,
          "name": "ImageJpg",
          "source": {
            "line": 8,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L8"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "image/jpeg"
        },
        {
          "id": 3175,
          "name": "ImagePng",
          "source": {
            "line": 9,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L9"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "image/png"
        },
        {
          "id": 3176,
          "name": "ImageWebp",
          "source": {
            "line": 10,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L10"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "image/webp"
        },
        {
          "id": 3177,
          "name": "TextPlain",
          "source": {
            "line": 11,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L11"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "text/plain"
        },
        {
          "id": 3178,
          "name": "VideoMp4",
          "source": {
            "line": 12,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L12"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "video/mp4"
        },
        {
          "id": 3179,
          "name": "VideoMpeg",
          "source": {
            "line": 13,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L13"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "video/mpeg"
        },
        {
          "id": 3180,
          "name": "VideoOgg",
          "source": {
            "line": 14,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L14"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "video/ogg"
        },
        {
          "id": 3181,
          "name": "VideoWebm",
          "source": {
            "line": 15,
            "file": "MimeTypes.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/MimeTypes.ts#L15"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3167,
          "value": "video/webm"
        }
      ]
    },
    {
      "id": 1204,
      "name": "ServerEvents",
      "source": {
        "line": 12,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L12"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 1205,
          "name": "Error",
          "source": {
            "line": 13,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L13"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "error"
        },
        {
          "id": 1207,
          "name": "Match",
          "source": {
            "line": 15,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L15"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "match"
        },
        {
          "id": 1211,
          "name": "MiddlewareError",
          "source": {
            "line": 19,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L19"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "middlewareError"
        },
        {
          "id": 1210,
          "name": "MiddlewareFailure",
          "source": {
            "line": 18,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L18"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "middlewareFailure"
        },
        {
          "id": 1212,
          "name": "MiddlewareSuccess",
          "source": {
            "line": 20,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L20"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "middlewareSuccess"
        },
        {
          "id": 1208,
          "name": "NoMatch",
          "source": {
            "line": 16,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L16"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "noMatch"
        },
        {
          "id": 1206,
          "name": "Request",
          "source": {
            "line": 14,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L14"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "request"
        },
        {
          "id": 1209,
          "name": "RouteError",
          "source": {
            "line": 17,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L17"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1204,
          "value": "routeError"
        }
      ]
    },
    {
      "id": 3182,
      "name": "TypeState",
      "source": {
        "line": 6,
        "file": "RouteData.ts",
        "path": "packages/api/src/lib/utils",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L6"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 3184,
          "name": "Dynamic",
          "source": {
            "line": 15,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L15"
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 3182,
          "value": "1"
        },
        {
          "id": 3183,
          "name": "Static",
          "source": {
            "line": 10,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L10"
          },
          "comment": {
            "description": null,
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 3182,
          "value": "0"
        }
      ]
    }
  ],
  "functions": [],
  "interfaces": [
    {
      "id": 1119,
      "name": "AuthData",
      "source": {
        "line": 148,
        "file": "Auth.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L148"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "Defines the authentication data, this is to be encrypted and decrypted by the server.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1121,
          "name": "expires",
          "source": {
            "line": 159,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L159"
          },
          "comment": {
            "description": "The timestamp at which the token expires.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1119,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1120,
          "name": "id",
          "source": {
            "line": 153,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L153"
          },
          "comment": {
            "description": "The user ID.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1119,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1122,
          "name": "refresh",
          "source": {
            "line": 165,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L165"
          },
          "comment": {
            "description": "The refresh token.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1119,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1123,
          "name": "token",
          "source": {
            "line": 171,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L171"
          },
          "comment": {
            "description": "The access token.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1119,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1132,
      "name": "LoginData",
      "source": {
        "line": 230,
        "file": "Auth.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L230"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The login data sent when fetching data from a user.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.4.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1135,
          "name": "connections",
          "source": {
            "line": 247,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L247"
          },
          "comment": {
            "description": "The connections data, defined when the `'connections'` scope is defined.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1132,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "RESTGetAPICurrentUserConnectionsResult",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1134,
          "name": "guilds",
          "source": {
            "line": 241,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L241"
          },
          "comment": {
            "description": "The guilds data, defined when the `'guilds'` scope is defined.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1132,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "RESTGetAPICurrentUserGuildsResult",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 1133,
          "name": "user",
          "source": {
            "line": 235,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L235"
          },
          "comment": {
            "description": "The user data, defined when the `'identify'` scope is defined.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.4.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1132,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "APIUser",
                "packageName": "discord-api-types",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1136,
      "name": "LoginDataTransformer",
      "source": {
        "line": 254,
        "file": "Auth.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L254"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 1137,
          "name": "T",
          "constraint": {
            "kind": "reference",
            "id": 1132,
            "name": "LoginData",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          },
          "default": {
            "kind": "reference",
            "id": 1132,
            "name": "LoginData",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        }
      ],
      "properties": [],
      "methods": []
    },
    {
      "id": 2592,
      "name": "MethodCallback",
      "source": {
        "line": 11,
        "file": "RouteStore.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L11"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [],
      "methods": []
    },
    {
      "id": 1354,
      "name": "MiddlewareErrorContext",
      "source": {
        "line": 239,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L239"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The context sent in the error events.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.2.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1357,
          "name": "match",
          "source": {
            "line": 256,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L256"
          },
          "comment": {
            "description": "The route match.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.2.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1354,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 2596,
            "name": "RouteMatch",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1355,
          "name": "request",
          "source": {
            "line": 244,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L244"
          },
          "comment": {
            "description": "The erroneous request.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.2.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1354,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "ApiRequest",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1356,
          "name": "response",
          "source": {
            "line": 250,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L250"
          },
          "comment": {
            "description": "The server's response.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.2.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1354,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 463,
            "name": "ApiResponse",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "\"http\".IncomingMessage",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1989,
      "name": "MiddlewareOptions",
      "source": {
        "line": 40,
        "file": "Middleware.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L40"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The options for all middlewares.",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1992,
          "name": "enabled",
          "source": {
            "line": 420,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece should be enabled. If set to false, the piece will be unloaded.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1989,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1991,
          "name": "name",
          "source": {
            "line": 415,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1989,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1990,
          "name": "position",
          "source": {
            "line": 46,
            "file": "Middleware.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L46"
          },
          "comment": {
            "description": "The position to insert the middleware at.",
            "blockTags": [
              {
                "name": "see",
                "text": "Middleware#position"
              },
              {
                "name": "default",
                "text": "```ts\n1000\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1989,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 3202,
      "name": "ParsedPart",
      "source": {
        "line": 71,
        "file": "RouteData.ts",
        "path": "packages/api/src/lib/utils",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L71"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 3204,
          "name": "type",
          "source": {
            "line": 73,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L73"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3202,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 3182,
            "name": "TypeState",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 3203,
          "name": "value",
          "source": {
            "line": 72,
            "file": "RouteData.ts",
            "path": "packages/api/src/lib/utils",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L72"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 3202,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 2596,
      "name": "RouteMatch",
      "source": {
        "line": 15,
        "file": "RouteStore.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L15"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 2598,
          "name": "cb",
          "source": {
            "line": 17,
            "file": "RouteStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L17"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2596,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 2592,
            "name": "MethodCallback",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 2597,
          "name": "route",
          "source": {
            "line": 16,
            "file": "RouteStore.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/RouteStore.ts#L16"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 2596,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 2557,
            "name": "Route",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 2586,
      "name": "RouteOptions",
      "source": {
        "line": 77,
        "file": "Route.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L77"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 2589,
          "name": "acceptedContentMimeTypes",
          "source": {
            "line": 107,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L107"
          },
          "comment": {
            "description": "The accepted content types for this route. If set to null, the route will accept any data.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.3.0"
              },
              {
                "name": "default",
                "text": "```ts\nthis.context.server.options.acceptedContentMimeTypes ?? null\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2586,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "templateLiteral",
                      "head": "message/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "audio/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "video/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "image/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "text/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "application/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "multipart/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "X-",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": "/"
                        },
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2591,
          "name": "enabled",
          "source": {
            "line": 420,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "Whether or not the piece should be enabled. If set to false, the piece will be unloaded.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2586,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 2588,
          "name": "maximumBodyLength",
          "source": {
            "line": 100,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L100"
          },
          "comment": {
            "description": "(RFC 7230 3.3.2) The maximum decimal number of octets.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\nthis.context.server.options.maximumBodyLength ?? 1024 * 1024 * 50\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2586,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 2590,
          "name": "name",
          "source": {
            "line": 415,
            "file": "index.d.ts",
            "path": "node_modules/@sapphire/pieces/dist",
            "url": null
          },
          "comment": {
            "description": "The name for the piece.",
            "blockTags": [
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2586,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 2587,
          "name": "route",
          "source": {
            "line": 93,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L93"
          },
          "comment": {
            "description": "The route the piece should represent.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n''\n```"
              },
              {
                "name": "example",
                "text": "```typescript\n'/users'\n// request.params -> {}\n```"
              },
              {
                "name": "example",
                "text": "```typescript\n'/guilds/:guild/members/:member/'\n// request.params -> { guild: '...', member: '...' }\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 2586,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1082,
      "name": "SecureCookieStoreSetOptions",
      "source": {
        "line": 136,
        "file": "CookieStore.ts",
        "path": "packages/api/src/lib/structures/api",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L136"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1085,
          "name": "domain",
          "source": {
            "line": 139,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L139"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1082,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1083,
          "name": "expires",
          "source": {
            "line": 137,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L137"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1082,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Date",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 1087,
          "name": "httpOnly",
          "source": {
            "line": 141,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L141"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1082,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1084,
          "name": "maxAge",
          "source": {
            "line": 138,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L138"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1082,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1086,
          "name": "path",
          "source": {
            "line": 140,
            "file": "CookieStore.ts",
            "path": "packages/api/src/lib/structures/api",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/api/CookieStore.ts#L140"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1082,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1344,
      "name": "ServerOptions",
      "source": {
        "line": 170,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L170"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The API options.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1348,
          "name": "acceptedContentMimeTypes",
          "source": {
            "line": 197,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L197"
          },
          "comment": {
            "description": "The accepted content types for this route. If set to null, the route will accept any data.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.3.0"
              },
              {
                "name": "default",
                "text": "```ts\nnull\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "array",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "templateLiteral",
                      "head": "message/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "audio/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "video/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "image/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "text/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "application/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "multipart/",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    },
                    {
                      "kind": "templateLiteral",
                      "head": "X-",
                      "tail": [
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": "/"
                        },
                        {
                          "type": {
                            "kind": "intrinsic",
                            "type": "string"
                          },
                          "text": ""
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1351,
          "name": "auth",
          "source": {
            "line": 219,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L219"
          },
          "comment": {
            "description": "The auth options. If neither `auth` nor `auth.secret` are defined, auth-related routes and middlewares will be\nautomatically disabled.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n{}\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": 1124,
            "name": "ServerOptionsAuth",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        },
        {
          "id": 1352,
          "name": "automaticallyConnect",
          "source": {
            "line": 226,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L226"
          },
          "comment": {
            "description": "Whether the server should connect upon being when the plugin is loaded.",
            "blockTags": [
              {
                "name": "since",
                "text": "3.2.0"
              },
              {
                "name": "default",
                "text": "```ts\ntrue\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 1350,
          "name": "listenOptions",
          "source": {
            "line": 211,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L211"
          },
          "comment": {
            "description": "The HTTP listen options.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n{ port: 4000 }\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"net\".ListenOptions",
            "packageName": "@types/node",
            "typeArguments": []
          }
        },
        {
          "id": 1347,
          "name": "maximumBodyLength",
          "source": {
            "line": 190,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L190"
          },
          "comment": {
            "description": "(RFC 7230 3.3.2) The maximum decimal number of octets.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n1024 * 1024 * 50\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 1346,
          "name": "origin",
          "source": {
            "line": 183,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L183"
          },
          "comment": {
            "description": "The origin header to be set on every request at 'Access-Control-Allow-Origin'.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n'*'\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1345,
          "name": "prefix",
          "source": {
            "line": 176,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L176"
          },
          "comment": {
            "description": "The prefix for all routes, e.g. `v1/`.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n''\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1349,
          "name": "server",
          "source": {
            "line": 204,
            "file": "Server.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L204"
          },
          "comment": {
            "description": "The HTTP server options.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n{}\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1344,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "\"http\".ServerOptions",
            "packageName": "@types/node",
            "typeArguments": [
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "\"http\".IncomingMessage",
                  "packageName": "@types/node",
                  "typeArguments": []
                }
              },
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": null,
                  "name": "\"http\".ServerResponse",
                  "packageName": "@types/node",
                  "typeArguments": []
                }
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 1124,
      "name": "ServerOptionsAuth",
      "source": {
        "line": 178,
        "file": "Auth.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L178"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "Defines the authentication options.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 1126,
          "name": "cookie",
          "source": {
            "line": 190,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L190"
          },
          "comment": {
            "description": "The name for the cookie, this will be used to identify a Secure HttpOnly cookie.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n'SAPPHIRE_AUTH'\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1131,
          "name": "domainOverwrite",
          "source": {
            "line": 223,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L223"
          },
          "comment": {
            "description": "The domain that should be used for the cookie. This overwrites the automatic detection of the domain.",
            "blockTags": [
              {
                "name": "remark",
                "text": "if you want to support subdomains (`one.example.two` and `two.example.com`) then you need to use prefix your domain with a `.`, for example `.example.com`"
              },
              {
                "name": "since",
                "text": "2.1.0"
              },
              {
                "name": "default",
                "text": "```ts\nundefined\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1125,
          "name": "id",
          "source": {
            "line": 183,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L183"
          },
          "comment": {
            "description": "The client's application id, this can be retrieved in Discord Developer Portal at https://discord.com/developers/applications.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1129,
          "name": "redirect",
          "source": {
            "line": 209,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L209"
          },
          "comment": {
            "description": "The redirect uri. This will default to {@link OAuth2BodyData.redirectUri} if missing.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1128,
          "name": "scopes",
          "source": {
            "line": 203,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L203"
          },
          "comment": {
            "description": "The scopes defined at https://discord.com/developers/docs/topics/oauth2#shared-resources-oauth2-scopes.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "default",
                "text": "```ts\n[OAuth2Scopes.Identify]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "OAuth2Scopes",
              "packageName": "discord-api-types",
              "typeArguments": []
            }
          }
        },
        {
          "id": 1127,
          "name": "secret",
          "source": {
            "line": 196,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L196"
          },
          "comment": {
            "description": "The client secret, this can be retrieved in Discord Developer Portal at https://discord.com/developers/applications.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 1130,
          "name": "transformers",
          "source": {
            "line": 216,
            "file": "Auth.ts",
            "path": "packages/api/src/lib/structures/http",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Auth.ts#L216"
          },
          "comment": {
            "description": "The login data transformers used for {@link fetchData}.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.4.0"
              },
              {
                "name": "default",
                "text": "```ts\n[]\n```"
              }
            ],
            "modifierTags": []
          },
          "parentId": 1124,
          "readonly": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 1136,
              "name": "LoginDataTransformer",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 1132,
                  "name": "LoginData",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [
    {
      "id": 1395,
      "name": "MediaParser",
      "source": {
        "line": 12,
        "file": "MediaParser.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L12"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 1396,
          "name": "Context",
          "source": {
            "line": 107,
            "file": "MediaParser.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/MediaParser.ts#L107"
          },
          "namespaceParentId": 1395,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Piece.Context",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "variables": []
    },
    {
      "id": 1986,
      "name": "Middleware",
      "source": {
        "line": 10,
        "file": "Middleware.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L10"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 1987,
          "name": "Context",
          "source": {
            "line": 50,
            "file": "Middleware.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L50"
          },
          "namespaceParentId": 1986,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Piece.Context",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 1988,
          "name": "Options",
          "source": {
            "line": 51,
            "file": "Middleware.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Middleware.ts#L51"
          },
          "namespaceParentId": 1986,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 1989,
            "name": "MiddlewareOptions",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        }
      ],
      "variables": []
    },
    {
      "id": 2583,
      "name": "Route",
      "source": {
        "line": 12,
        "file": "Route.ts",
        "path": "packages/api/src/lib/structures",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L12"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 2584,
          "name": "Context",
          "source": {
            "line": 111,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L111"
          },
          "namespaceParentId": 2583,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Piece.Context",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 2585,
          "name": "Options",
          "source": {
            "line": 112,
            "file": "Route.ts",
            "path": "packages/api/src/lib/structures",
            "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/Route.ts#L112"
          },
          "namespaceParentId": 2583,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 2586,
            "name": "RouteOptions",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          }
        }
      ],
      "variables": []
    }
  ],
  "typeAliases": [
    {
      "id": 1353,
      "name": "AuthLessServerOptions",
      "source": {
        "line": 233,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L233"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The {@link ServerOptions} without {@link auth}.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Omit",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1344,
            "name": "ServerOptions",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          },
          {
            "kind": "literal",
            "value": "auth"
          }
        ]
      }
    },
    {
      "id": 1341,
      "name": "ContentTypeParameter",
      "source": {
        "line": 151,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L151"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "RFC 1341 4: Defines a Content-Type's parameter, which follows the following structure:\n\n- `parameter` = `attribute` \"=\" `value`\n- `attribute` = `token`\n- `value` = `token` / `quoted-string`\n- `token` = 1*<any CHAR except `SPACE`, `CTLs`, or `tspecials`>\n- `tspecials` = `(` | `)` | `<` | `>` | `@` | `,` | `;` | `:` | `\\` | `\"` | `/` | `[` | `]` | `?` | `.` | `=`\n\n@note `tspecials` must be in quoted-string, to use within parameter values.\n@note The definition of `tspecials` is the same as the RFC 822 definition of `specials` with the addition of the\nthree characters `/`, `?`, and `=`.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.3.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "templateLiteral",
        "head": "; ",
        "tail": [
          {
            "type": {
              "kind": "intrinsic",
              "type": "string"
            },
            "text": "="
          },
          {
            "type": {
              "kind": "intrinsic",
              "type": "string"
            },
            "text": ""
          }
        ]
      }
    },
    {
      "id": 1340,
      "name": "ContentTypeType",
      "source": {
        "line": 135,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L135"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "RFC 1341 4: Defines a Content-Type's type, which follows the following structure:\n\n- `type` = `text` | `multipart` | `message` | `image` | `audio` | `video` | `application` | x-token\n- `x-token` = The two characters \"X-\" followed, with no intervening white space, by any token",
        "blockTags": [
          {
            "name": "since",
            "text": "1.3.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "literal",
            "value": "text"
          },
          {
            "kind": "literal",
            "value": "multipart"
          },
          {
            "kind": "literal",
            "value": "message"
          },
          {
            "kind": "literal",
            "value": "image"
          },
          {
            "kind": "literal",
            "value": "audio"
          },
          {
            "kind": "literal",
            "value": "video"
          },
          {
            "kind": "literal",
            "value": "application"
          },
          {
            "kind": "templateLiteral",
            "head": "X-",
            "tail": [
              {
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                },
                "text": ""
              }
            ]
          }
        ]
      }
    },
    {
      "id": 3185,
      "name": "MatchData",
      "source": {
        "line": 18,
        "file": "RouteData.ts",
        "path": "packages/api/src/lib/utils",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/utils/RouteData.ts#L18"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Record",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          },
          {
            "kind": "literal",
            "value": "null"
          }
        ]
      }
    },
    {
      "id": 1201,
      "name": "Methods",
      "source": {
        "line": 3,
        "file": "HttpMethods.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpMethods.ts#L3"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "literal",
            "value": "ACL"
          },
          {
            "kind": "literal",
            "value": "BIND"
          },
          {
            "kind": "literal",
            "value": "CHECKOUT"
          },
          {
            "kind": "literal",
            "value": "CONNECT"
          },
          {
            "kind": "literal",
            "value": "COPY"
          },
          {
            "kind": "literal",
            "value": "DELETE"
          },
          {
            "kind": "literal",
            "value": "GET"
          },
          {
            "kind": "literal",
            "value": "HEAD"
          },
          {
            "kind": "literal",
            "value": "LINK"
          },
          {
            "kind": "literal",
            "value": "LOCK"
          },
          {
            "kind": "literal",
            "value": "M-SEARCH"
          },
          {
            "kind": "literal",
            "value": "MERGE"
          },
          {
            "kind": "literal",
            "value": "MKACTIVITY"
          },
          {
            "kind": "literal",
            "value": "MKCALENDAR"
          },
          {
            "kind": "literal",
            "value": "MKCOL"
          },
          {
            "kind": "literal",
            "value": "MOVE"
          },
          {
            "kind": "literal",
            "value": "NOTIFY"
          },
          {
            "kind": "literal",
            "value": "OPTIONS"
          },
          {
            "kind": "literal",
            "value": "PATCH"
          },
          {
            "kind": "literal",
            "value": "POST"
          },
          {
            "kind": "literal",
            "value": "PRI"
          },
          {
            "kind": "literal",
            "value": "PROPFIND"
          },
          {
            "kind": "literal",
            "value": "PROPPATCH"
          },
          {
            "kind": "literal",
            "value": "PURGE"
          },
          {
            "kind": "literal",
            "value": "PUT"
          },
          {
            "kind": "literal",
            "value": "REBIND"
          },
          {
            "kind": "literal",
            "value": "REPORT"
          },
          {
            "kind": "literal",
            "value": "SEARCH"
          },
          {
            "kind": "literal",
            "value": "SOURCE"
          },
          {
            "kind": "literal",
            "value": "SUBSCRIBE"
          },
          {
            "kind": "literal",
            "value": "TRACE"
          },
          {
            "kind": "literal",
            "value": "UNBIND"
          },
          {
            "kind": "literal",
            "value": "UNLINK"
          },
          {
            "kind": "literal",
            "value": "UNLOCK"
          },
          {
            "kind": "literal",
            "value": "UNSUBSCRIBE"
          }
        ]
      }
    },
    {
      "id": 1343,
      "name": "MimeType",
      "source": {
        "line": 164,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L164"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "RFC 1341 4: Defines the syntax for a Content-Type field, which follows the following structure:\n`type \"/\" subtype *[\";\" parameter]`.",
        "blockTags": [
          {
            "name": "since",
            "text": "1.3.0"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "templateLiteral",
        "head": "",
        "tail": [
          {
            "type": {
              "kind": "reference",
              "id": 1342,
              "name": "MimeTypeWithoutParameters",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            },
            "text": ""
          },
          {
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": ""
                },
                {
                  "kind": "reference",
                  "id": 1341,
                  "name": "ContentTypeParameter",
                  "packageName": "@sapphire/plugin-api",
                  "typeArguments": []
                }
              ]
            },
            "text": ""
          }
        ]
      }
    },
    {
      "id": 1342,
      "name": "MimeTypeWithoutParameters",
      "source": {
        "line": 157,
        "file": "Server.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/Server.ts#L157"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "RFC 1341 4: Defines the syntax for a Content-Type field without parameters, which follows the following structure:\n`type \"/\" subtype`.",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "templateLiteral",
        "head": "",
        "tail": [
          {
            "type": {
              "kind": "reference",
              "id": 1340,
              "name": "ContentTypeType",
              "packageName": "@sapphire/plugin-api",
              "typeArguments": []
            },
            "text": "/"
          },
          {
            "type": {
              "kind": "intrinsic",
              "type": "string"
            },
            "text": ""
          }
        ]
      }
    }
  ],
  "variables": [
    {
      "id": 1203,
      "name": "methodEntries",
      "source": {
        "line": 41,
        "file": "HttpMethods.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpMethods.ts#L41"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "type": {
        "kind": "typeOperator",
        "operator": "readonly",
        "type": {
          "kind": "array",
          "type": {
            "kind": "tuple",
            "types": [
              {
                "kind": "reference",
                "id": 1201,
                "name": "Methods",
                "packageName": "@sapphire/plugin-api",
                "typeArguments": []
              },
              {
                "kind": "intrinsic",
                "type": "symbol"
              }
            ]
          }
        }
      },
      "value": "..."
    },
    {
      "id": 1202,
      "name": "methods",
      "source": {
        "line": 40,
        "file": "HttpMethods.ts",
        "path": "packages/api/src/lib/structures/http",
        "url": "https://github.com/sapphiredev/plugins/blob/e5739c7/packages/api/src/lib/structures/http/HttpMethods.ts#L40"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": null,
        "name": "Record",
        "packageName": "typescript",
        "typeArguments": [
          {
            "kind": "reference",
            "id": 1201,
            "name": "Methods",
            "packageName": "@sapphire/plugin-api",
            "typeArguments": []
          },
          {
            "kind": "intrinsic",
            "type": "symbol"
          }
        ]
      },
      "value": "..."
    }
  ]
}