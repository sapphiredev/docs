{
  "typeDocJsonParserVersion": "5.2.0",
  "id": 0,
  "name": "@sapphire/utilities",
  "version": "3.11.0",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://cdn.skyra.pw/gh-assets/sapphire-banner.png)\n\n# @sapphire/utilities\n\n**Common JavaScript utilities for the Sapphire Community.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/utilities?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/utilities)\n[![npm](https://img.shields.io/npm/v/@sapphire/utilities?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/utilities)\n\n</div>\n\n**Table of Contents**\n\n-   [Description](#description)\n-   [Features](#features)\n-   [Installation](#installation)\n-   [Usage](#usage)\n    -   [Javascript Utilities](javascript-utilities)\n        -   [`arrayStrictEqual`](#arraystrictequal)\n        -   [`chunk`](#chunk)\n        -   [`classExtends`](#classextends)\n        -   [`codeBlock`](#codeblock)\n        -   [`cutText`](#cuttext)\n        -   [`deepClone`](#deepclone)\n        -   [`filterNullAndUndefined`](#filternullandundefined)\n        -   [`filterNullAndUndefinedAndEmpty`](#filternullandundefinedandempty)\n        -   [`filterNullAndUndefinedAndZero`](#filternullandundefinedandzero)\n        -   [`getDeepObjectKeys`](#getdeepobjectkeys)\n        -   [`hasAtLeastOneKeyInMap`](#hasatleastonekeyinmap)\n        -   [`inlineCodeBlock`](#inlinecodeblock)\n        -   [`isClass`](#isclass)\n        -   [`isFunction`](#isfunction)\n        -   [`isNullOrUndefined`](#isnullorundefined)\n        -   [`isNullOrUndefinedOrEmpty`](#isnullorundefinedorempty)\n        -   [`isNullOrUndefinedOrZero`](#isnullorundefinedorzero)\n        -   [`isNumber`](#isnumber)\n        -   [`isObject`](#isobject)\n        -   [`isPrimitive`](#isprimitive)\n        -   [`isThenable`](#isthenable)\n        -   [`lazy`](#lazy)\n        -   [`makeObject`](#makeObject)\n        -   [`mergeDefault`](#mergedefault)\n        -   [`mergeObjects`](#mergeobjects)\n        -   [`noop`](#noop)\n        -   [`objectToTuples`](#objecttotuples)\n        -   [`partition`](#partition)\n        -   [`pickRandom`](#pickRandom)\n        -   [`range`](#range)\n        -   [`regExpEsc`](#regexesc)\n        -   [`roundNumber`](#roundnumber)\n        -   [`sleep`](#sleep)\n        -   [`splitText`](#splitText)\n        -   [`throttle`](#throttle)\n        -   [`toTitleCase`](#totitlecase)\n        -   [`tryParseJSON`](#tryparsejson)\n        -   [`tryParseURL`](#tryparseurl)\n    -   [Typescript Utilities](#typescript-utilities)\n        -   [Functions](#functions)\n            -   [`cast`](#cast)\n            -   [`objectEntries`](#objectentries)\n            -   [`objectKeys`](#objectkeys)\n            -   [`objectValues`](#objectvalues)\n        -   [Types](#types)\n            -   [`Primitive`](#primitive)\n            -   [`Builtin`](#builtin)\n            -   [`DeepRequired`](#deeprequired)\n            -   [`RequiredExcept`](#requiredexcept)\n            -   [`PartialRequired`](#partialrequired)\n            -   [`DeepPartial`](#deeppartial)\n            -   [`ArgumentTypes`](#argumenttypes)\n            -   [`Arr`](#arr)\n            -   [`Ctor`](#ctor)\n            -   [`AbstractCtor`](#abstractctor)\n            -   [`Constructor`](#constructor)\n            -   [`AbstractConstructor`](#abstractconstructor)\n            -   [`FirstArgument`](#firstargument)\n            -   [`SecondArgument`](#secondargument)\n            -   [`Awaitable`](#awaitable)\n            -   [`Nullish`](#nullish)\n            -   [`NonNullableProperties`](#nonnullableproperties)\n            -   [`NonNullObject`](#nonnullobject)\n            -   [`AnyObject`](#anyobject)\n            -   [`PickByValue`](#pickbyvalue)\n            -   [`Mutable`](#mutable)\n            -   [`StrictRequired`](#strictrequired)\n            -   [`ArrayElementType`](#arrayelementtype)\n-   [Buy us some doughnuts](#buy-us-some-doughnuts)\n-   [Contributors ✨](#contributors-)\n\n## Description\n\nWe often have a need for a function or type augmentation and having to include it in every repo is a huge drag. To solve this problem there are dozens upon dozens of packages on NPM, but we cannot maintain those in case of issues and a lot of them are poorly written or under-optimised. Our solution is to provide @sapphire/utilities, which is the only package you'll likely need to cover your day-to-day needs.\n\n## Features\n\n-   Written in TypeScript\n-   Bundled with esbuild so it can be used in NodeJS and browsers\n-   Offers CommonJS, ESM and UMD bundles\n-   Fully tested\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/utilities\n```\n\n---\n\n## Usage\n\nYou can import individual utility function from subpath like: @sapphire/utility/isFunction or the entire library.\n\n```ts\nimport { isFunction } from '@sapphire/utilities/isFunction';\n// or\nimport { isFunction } from '@sapphire/utilities';\n```\n\n**Note:** For typescript users, subpath import are only supported in `--moduleResolution node16` and `--moduleResolution nodenext`. More information can be found [in this issue on the microsoft/TypeScript repository](https://github.com/microsoft/TypeScript/issues/50794).\n\n**Note:** While this section uses `require`, the imports match 1:1 with ESM imports. For example `const { arrayStrictEquals } = require('@sapphire/utilities')` equals `import { arrayStrictEquals } from '@sapphire/utilities'`.\n\n### Javascript Utilities\n\n#### `arrayStrictEquals`\n\nCompares if two arrays are strictly equal.\n\n```ts\narrayStrictEquals([1, 2, 3], [1, 2, 3]); // true\narrayStrictEquals([1, 2, 3], [1, 2, 3, 4]); // false\narrayStrictEquals([1, 2, 3], [1, 2, 4]); // false\n```\n\n#### `chunk`\n\nSplits up an array into chunks.\n\n```ts\nchunk([1, 2, 3, 4, 5], 2); // [[1, 2], [3, 4], [5]]\nchunk([1, 2, 3, 4, 5], 3); // [[1, 2, 3], [4, 5]]\n```\n\n#### `classExtends`\n\nChecks whether or not the value class extends the base class.\n\n```ts\nclass A {}\nclass B extends A {}\n\nclassExtends(A, B); // false\nclassExtends(B, A); // true\n```\n\n#### `codeBlock`\n\nWraps text in a markdown codeblock with a language indicator for syntax highlighting.\n\n````ts\ncodeBlock('js', 'const value = \"Hello World!\";'); // ```js\\nconst value = \"Hello World!\";\\n```\n````\n\n#### `cutText`\n\nSplit a text by its latest space character in a range from the character 0 to the selected one.\n\n```ts\ncutText('Lorem Ipsum', 9); // \"Lorem...\"\n```\n\n#### `deepClone`\n\nDeep clones an object.\n\n```ts\nconst obj = { a: 1, b: { c: 2 } };\nconst clone = deepClone(obj); // { a: 1, b: { c: 2 } }\n```\n\n#### `filterNullAndUndefined`\n\nChecks whether a value is not `null` nor `undefined`. This can be used in `Array#filter` to remove `null` and `undefined` from the array type\n\n```ts\n// TypeScript Type: (string | undefined | null)[]\nconst someArray = ['one', 'two', undefined, null, 'five'];\n\n// TypeScript Type: string[]\nconst filteredArray = someArray.filter(filterNullAndUndefined); // ['one', 'two', 'five']\n```\n\n#### `filterNullAndUndefinedAndEmpty`\n\nChecks whether a value is not `null`, `undefined`, or `''` (empty string). This can be used in `Array#filter` to remove `null`, `undefined`, and `''` from the array type\n\n```ts\n// TypeScript Type: (number | string | undefined | null)[]\nconst someArray = [1, 2, undefined, null, ''];\n\n// TypeScript Type: number[]\nconst filteredArray = someArray.filter(filterNullAndUndefinedAndEmpty); // [1, 2]\n```\n\n#### `filterNullAndUndefinedAndZero`\n\nChecks whether a value is not `null`, `undefined`, or `0`. This can be used in `Array#filter` to remove `null`, `undefined`, and `0` from the array type\n\n```ts\n// TypeScript Type: (string | number | undefined | null)[]\nconst someArray = ['one', 'two', undefined, null, 0];\n\n// TypeScript Type: string[]\nconst filteredArray = someArray.filter(filterNullAndUndefinedAndZero); // ['one', 'two']\n```\n\n#### `getDeepObjectKeys`\n\nReturns an array of all the keys of an object, including the keys of nested objects.\n\n```ts\nconst obj = { a: 1, b: { c: 2 }, d: [{ e: 3 }] };\ngetDeepObjectKeys(obj); // ['a', 'b.c', 'd.0.e']\ngetDeepObjectKeys(obj, { arrayKeysIndexStyle: 'braces' }); // ['a', 'bc', 'd[0]e']\ngetDeepObjectKeys(obj, { arrayKeysIndexStyle: 'braces-with-dot' }); // ['a', 'b.c', 'd[0].e']\ngetDeepObjectKeys(obj, { arrayKeysIndexStyle: 'dotted' }); // ['a', 'b.c', 'd.0.e']\n```\n\n#### `hasAtLeastOneKeyInMap`\n\nChecks whether a map has at least one of an array of keys.\n\n```ts\nconst map = new Map([\n\t['a', 1],\n\t['b', 2],\n\t['c', 3]\n]);\n\nhasAtLeastOneKeyInMap(map, ['a', 'd']); // true\nhasAtLeastOneKeyInMap(map, ['d', 'e']); // false\n```\n\n#### `inlineCodeBlock`\n\nWraps text in a markdown inline codeblock.\n\n```ts\ninlineCodeBlock('const value = \"Hello World!\";'); // `const value = \"Hello World!\";`\n```\n\n#### `isClass`\n\nVerifies if the input is a class constructor.\n\n```ts\nclass A {}\n\nisClass(A); // true\nisClass(function () {}); // false\n```\n\n#### `isFunction`\n\nVerifies if the input is a function.\n\n```ts\nisFunction(function () {}); // true\nisFunction('foo'); // false\n```\n\n#### `isNullOrUndefined`\n\nChecks whether a value is `null` or `undefined`.\n\n```ts\nisNullOrUndefined(null); // true\nisNullOrUndefined(undefined); // true\nisNullOrUndefined(1); // false\n```\n\n#### `isNullOrUndefinedOrEmpty`\n\nChecks whether a value is `null`, `undefined`, or `''` (empty string).\n\n```ts\nisNullOrUndefinedOrEmpty(null); // true\nisNullOrUndefinedOrEmpty(undefined); // true\nisNullOrUndefinedOrEmpty(''); // true\nisNullOrUndefinedOrEmpty(1); // false\n```\n\n#### `isNullOrUndefinedOrZero`\n\nChecks whether a value is `null`, `undefined`, or `0`.\n\n```ts\nisNullOrUndefinedOrZero(null); // true\nisNullOrUndefinedOrZero(undefined); // true\nisNullOrUndefinedOrZero(0); // true\nisNullOrUndefinedOrZero(1); // false\n```\n\n#### `isNumber`\n\nVerifies if the input is a number.\n\n```ts\nisNumber(1); // true\nisNumber('1'); // false\n```\n\n#### `isObject`\n\nVerifies if the input is an object.\n\n```ts\nisObject({}); // true\nisObject([]); // true\nisObject('foo'); // false\n```\n\n#### `isPrimitive`\n\nVerifies if the input is a primitive.\n\n```ts\nisPrimitive(1); // true\nisPrimitive('1'); // true\nisPrimitive({}); // false\n```\n\n#### `isThenable`\n\nVerifies if an object is a promise.\n\n```ts\nisThenable({}); // false\nisThenable(Promise.resolve()); // true\n```\n\n#### `lazy`\n\nLazily creates a constant or load a module and caches it internally.\n\n```ts\nlet timesCalled = 0;\nconst lazyValue = lazy(() => {\n\ttimesCalled++;\n\treturn 'foo';\n});\n\nlazyValue(); // 'foo'\nlazyValue(); // 'foo' - cached\n\ntimesCalled; // 1\n```\n\n#### `makeObject`\n\nTurn a dotted path into a json object.\n\n```ts\nmakeObject('a.b.c', 1); // { a: { b: { c: 1 } } }\n```\n\n#### `mergeDefault`\n\nDeep merges two objects. Properties from the second parameter are applied to the first.\n\n```ts\nconst base = { a: 1, b: { c: 2 } };\nconst overwritten = { b: { d: 3 } };\n\nmergeDefault(base, overwritten);\noverwritten; // { a: 1, b: { c: 2, d: 3 } }\n```\n\n#### `mergeObjects`\n\nMerges two objects.\n\n```ts\nconst source = { a: 1, b: 2 };\nconst target = { c: 4 };\n\nmergeObjects(source, target);\ntarget; // { a: 1, b: 2, c: 4 }\n```\n\n#### `noop`\n\nA no-operation function.\n\n```ts\nnoop(); // undefined\n\n// Example usage of ignoring a promise rejection\nPromise.reject().catch(noop);\n```\n\n#### `objectToTuples`\n\nConverts an object to a tuple with string paths.\n\n```ts\nconst obj = { a: 1, b: { c: 2 } };\nobjectToTuples(obj); // [['a', 1], ['b.c', 2]]\n```\n\n#### `partition`\n\nPartitions an array into a tuple of two arrays, where one array contains all elements that satisfies the predicate, and the other contains all elements that do not satisfy the predicate.\n\n```ts\nconst arr = [1, 2, 3, 4, 5];\nconst [evens, odds] = partition(arr, (n) => n % 2 === 0);\n\nevens; // [2, 4]\nodds; // [1, 3, 5]\n```\n\n#### `pickRandom`\n\nPicks a random element from an array.\n\n```ts\nconst arr = [1, 2, 3, 4, 5];\npickRandom(arr); // 3\n```\n\n#### `range`\n\nGet an array of numbers with the selected range, considering a specified step.\n\n```ts\nrange(1, 4, 1); // [1, 2, 3, 4]\nrange(1, 4, 2); // [1, 3]\nrange(4, 1, -1); // [4, 3, 2, 1]\nrange(4, 1, -2); // [4, 2]\n```\n\n#### `regExpEsc`\n\nCleans a string from regex injection by escaping special characters.\n\n```ts\nregExpEsc('foo.bar?'); // 'foo\\\\.bar\\\\?'\n```\n\n#### `roundNumber`\n\nProperly rounds up or down a number. Also supports strings using an exponent to indicate large or small numbers.\n\n```ts\nroundNumber(1.9134658034); // 1\nroundNumber(1.9134658034, 2); // 1.91\nroundNumber('10e-5'); // 0\n```\n\n#### `sleep` / `sleepSync`\n\nSleeps for the specified number of milliseconds.\n\n```ts\nawait sleep(1000); // Sleeps for 1 second\nsleepSync(1000); // Sleeps for 1 second\n```\n\n#### `splitText`\n\nSplit a string by its latest space character in a range from the character 0 to the selected one.\n\n```ts\nsplitText('Hello All People!', 8); // 'Hello'\nsplitText('Hello All People!', 10); // 'Hello All'\n```\n\n#### `throttle`\n\nCreates a throttled function that only invokes a function at most once per every x milliseconds. The throttled function comes with a flush method to reset the last time the throttled function was invoked.\n\n```ts\nconst throttled = throttle(() => console.log('throttled'), 1000);\n\nthrottled(); // 'throttled'\nthrottled(); // nothing\nthrottled.flush();\nthrottled(); // 'throttled'\n```\n\n#### `toTitleCase`\n\nConverts a string to Title Case. This is designed to also ensure common Discord PascalCased strings are put in their TitleCase variants.\n\n```ts\ntoTitleCase('foo bar'); // 'Foo Bar'\ntoTitleCase('textchannel'); // 'TextChannel'\ntoTitleCase('onetwo three', { onetwo: 'OneTwo' }); // OneTwo Three\n```\n\n#### `tryParseJSON`\n\nTries to parse a string as JSON.\n\n```ts\ntryParseJSON('{\"foo\": \"bar\"}'); // { foo: 'bar' }\ntryParseJSON('{\"foo\": \"bar\"' /* invalid */); // '{\"foo\": \"bar\"'\n```\n\n#### `tryParseURL`\n\nTries to parse a string as a URL.\n\n```ts\ntryParseURL('https://google.com'); // URL object\ntryParseURL('hello there :)'); // null\n```\n\n### Typescript Utilities\n\nA subset of our utilities are intended specifically for typescript users.\n\n#### Functions\n\n##### `cast`\n\nCasts any value to `T`. Note that this function is not type-safe, and may cause runtime errors if used incorrectly.\n\n```ts\nconst value = cast<string>(1); // value is now of type string\n```\n\n##### `objectEntries`\n\nA strongly-typed alternative to `Object.entries`.\n\n```ts\nconst obj = { a: 1, b: 2 } as const;\n\nconst native = Object.entries(obj); // [string, number][]\nconst strict = objectEntries(obj); // [['a', 1], ['b', 2]]\n```\n\n##### `objectKeys`\n\nA strongly-typed alternative to `Object.keys`.\n\n```ts\nconst obj = { a: 1, b: 2 } as const;\n\nconst native = Object.keys(obj); // string[]\nconst strict = objectKeys(obj); // ['a', 'b']\n```\n\n##### `objectValues`\n\nA strongly-typed alternative to `Object.values`.\n\n```ts\nconst obj = { a: 1, b: 2 } as const;\n\nconst native = Object.values(obj); // number[]\nconst strict = objectValues(obj); // [1, 2]\n```\n\n#### Types\n\n##### `Primitive`\n\nA union of all primitive types.\n\n```ts\n// string | number | bigint | boolean | symbol | undefined | null\ndeclare const primitive: Primitive;\n```\n\n##### `Builtin`\n\nA union of all builtin types.\n\n```ts\n// Primitive | Function | Date | Error | RegExp\ndeclare const builtin: Builtin;\n```\n\n##### `DeepRequired`\n\nMakes all properties in `T` required recursively.\n\n```ts\ntype Foo = Set<{ bar?: Promise<{ baz?: string }>[] }>;\n\n// Set<{ bar: Promise<{ baz: string }>[] }>\ndeclare const foo: DeepRequired<Foo>;\n```\n\n##### `RequiredExcept`\n\nMakes all properties in `T` required except for the ones specified in `K`.\n\n```ts\ninterface Foo {\n\tbar?: string;\n\tbaz?: number;\n}\n\n// { bar?: string; baz: number }\ndeclare const foo: RequiredExcept<Foo, 'bar'>;\n```\n\n##### `PartialRequired`\n\nMakes all properties in `T` that are assignable to `K` required.\n\n```ts\ninterface Foo {\n\tbar?: string;\n\tbaz?: number;\n}\n\n// { bar: string; baz?: number }\ndeclare const foo: PartialRequired<Foo, 'bar'>;\n```\n\n##### `ArgumentTypes`\n\nExtracts the argument types of a function type.\n\n```ts\ntype Foo = (bar: string, baz: number) => void;\n\n// [string, number]\ndeclare const foo: ArgumentTypes<Foo>;\n```\n\n##### `Arr`\n\nA type that represents a readonly array of `any`.\n\n```ts\n// readonly any[]\ndeclare const arr: Arr;\n```\n\n##### `Ctor`\n\nA constructor with parameters.\n\n```ts\n// new (...args: any[]) => any\ndeclare const foo: Ctor;\n\n// new (...args: [string, number]) => SomeClass\ndeclare const bar: Ctor<[string, number], SomeClass>;\n```\n\n##### `AbstractCtor`\n\nAn abstract constructor with parameters.\n\n```ts\n// abstract new (...args: any[]) => any\ndeclare const foo: AbstractCtor;\n\n// abstract new (...args: [string, number]) => SomeClass\ndeclare const bar: AbstractCtor<[string, number], SomeClass>;\n```\n\n##### `Constructor`\n\nA constructor without parameters.\n\n```ts\n// new (...args: any[]) => any\ndeclare const foo: Constructor;\n\n// new (...args: any[]) => SomeClass\ndeclare const bar: Constructor<SomeClass>;\n```\n\n##### `AbstractConstructor`\n\nAn abstract constructor without parameters.\n\n```ts\n// abstract new (...args: any[]) => any\ndeclare const foo: AbstractConstructor;\n\n// abstract new (...args: any[]) => SomeClass\ndeclare const bar: AbstractConstructor<SomeClass>;\n```\n\n##### `FirstArgument`\n\nExtracts the first argument of a function type.\n\n```ts\ntype Foo = (bar: string, baz: number) => void;\n\n// string\ndeclare const foo: FirstArgument<Foo>;\n```\n\n##### `SecondArgument`\n\nExtracts the second argument of a function type.\n\n```ts\ntype Foo = (bar: string, baz: number) => void;\n\n// number\ndeclare const foo: SecondArgument<Foo>;\n```\n\n##### `Awaitable`\n\nA type that represents a value or a promise of a value. Useful for functions that can accept both promises and non-promises.\n\n```ts\n// string | Promise<string>\ndeclare const foo: Awaitable<string>;\n```\n\n##### `Nullish`\n\nA type that represents `null` or `undefined`.\n\n```ts\n// null | undefined\ndeclare const foo: Nullish;\n```\n\n##### `NonNullableProperties`\n\nRemoves all properties of `T` that are not `null` or `undefined`.\n\n```ts\ninterface Foo {\n\tfoo: null;\n\tbar: undefined;\n\tbaz: boolean;\n}\n\n// { baz: boolean }\ndeclare const foo: NonNullableProperties<Foo>;\n```\n\n##### `NonNullObject`\n\nA type that represents an object that is not `null` or `undefined`.\n\n```ts\n// ✅\nconst foo: NonNullObject = {};\n\n// ❌\nconst bar: NonNullObject = null;\n\n// ❌\nconst baz: NonNullObject = undefined;\n```\n\n##### `AnyObject`\n\nAn object that can have any structure. Similar to `NonNullObject`, and to be used as an alternative if the aforementioned type leads to unexpected behaviors.\n\n```ts\n// ✅\nconst foo: AnyObject = {};\n\n// ❌\nconst bar: AnyObject = null;\n\n// ❌\nconst baz: AnyObject = undefined;\n```\n\n##### `PickByValue`\n\nPicks keys from `T` who's values are assignable to `V`.\n\n```ts\ninterface Foo {\n\tfoo: string;\n\tbar: number;\n\tbaz: boolean;\n}\n\n// 'foo' | 'bar'\ndeclare const foo: PickByValue<Foo, string | number>;\n```\n\n##### `Mutable`\n\nMakes all properties in `T` mutable.\n\n```ts\ninterface Foo {\n\treadonly bar: string;\n\treadonly baz: readonly number][];\n}\n\n// { bar: string; baz: number[] }\ndeclare const foo: Mutable<Foo>;\n```\n\n##### `StrictRequired`\n\nMakes all properties in `T` strictly required by removing `undefined` and `null` from value types.\n\n```ts\ninterface Foo {\n\tbar: string | undefined;\n\tbaz?: number | null;\n}\n\n// { bar: string; baz: number }\ndeclare const foo: StrictRequired<Foo>;\n```\n\n##### `ArrayElementType`\n\nGets a union type of all the keys that are in an array.\n\n```ts\nconst sample = [1, 2, '3', true];\n\n// string | number | boolean\ndeclare const foo: ArrayElementType<typeof sample>;\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://favware.tech/\"><img src=\"https://avatars3.githubusercontent.com/u/4019718?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeroen Claassens</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Code\">💻</a> <a href=\"#infra-favna\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#projectManagement-favna\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Documentation\">📖</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kyranet\"><img src=\"https://avatars0.githubusercontent.com/u/24852502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aura Román</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=kyranet\" title=\"Code\">💻</a> <a href=\"#projectManagement-kyranet\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3Akyranet\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=kyranet\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/PyroTechniac\"><img src=\"https://avatars2.githubusercontent.com/u/39341355?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gryffon Bellish</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=PyroTechniac\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3APyroTechniac\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=PyroTechniac\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/vladfrangu\"><img src=\"https://avatars3.githubusercontent.com/u/17960496?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vlad Frangu</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=vladfrangu\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3Avladfrangu\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3Avladfrangu\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#userTesting-vladfrangu\" title=\"User Testing\">📓</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=vladfrangu\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Stitch07\"><img src=\"https://avatars0.githubusercontent.com/u/29275227?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stitch07</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Stitch07\" title=\"Code\">💻</a> <a href=\"#projectManagement-Stitch07\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=Stitch07\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/depfu\"><img src=\"https://avatars3.githubusercontent.com/in/715?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>depfu[bot]</b></sub></a><br /><a href=\"#maintenance-depfu[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/allcontributors\"><img src=\"https://avatars0.githubusercontent.com/in/23186?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>allcontributors[bot]</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=allcontributors[bot]\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Nytelife26\"><img src=\"https://avatars1.githubusercontent.com/u/22531310?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tyler J Russell</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Nytelife26\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Alcremie\"><img src=\"https://avatars0.githubusercontent.com/u/54785334?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ivan Lieder</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Alcremie\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3AAlcremie\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/RealShadowNova\"><img src=\"https://avatars3.githubusercontent.com/u/46537907?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hezekiah Hendry</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=RealShadowNova\" title=\"Code\">💻</a> <a href=\"#tool-RealShadowNova\" title=\"Tools\">🔧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Vetlix\"><img src=\"https://avatars.githubusercontent.com/u/31412314?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vetlix</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Vetlix\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ethamitc\"><img src=\"https://avatars.githubusercontent.com/u/27776796?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ethan Mitchell</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=ethamitc\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/noftaly\"><img src=\"https://avatars.githubusercontent.com/u/34779161?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Elliot</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=noftaly\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://jurien.dev\"><img src=\"https://avatars.githubusercontent.com/u/5418114?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jurien Hamaker</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=jurienhamaker\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://fanoulis.dev/\"><img src=\"https://avatars.githubusercontent.com/u/38255093?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Charalampos Fanoulis</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=cfanoulis\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/dependabot\"><img src=\"https://avatars.githubusercontent.com/in/29110?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>dependabot[bot]</b></sub></a><br /><a href=\"#maintenance-dependabot[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://kaname.netlify.app/\"><img src=\"https://avatars.githubusercontent.com/u/56084970?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kaname</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=kaname-png\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nandhagk\"><img src=\"https://avatars.githubusercontent.com/u/62976649?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>nandhagk</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3Anandhagk\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://megatank58.me/\"><img src=\"https://avatars.githubusercontent.com/u/51410502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>megatank58</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=megatank58\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/UndiedGamer\"><img src=\"https://avatars.githubusercontent.com/u/84702365?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>UndiedGamer</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=UndiedGamer\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Lioness100\"><img src=\"https://avatars.githubusercontent.com/u/65814829?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lioness100</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Lioness100\" title=\"Documentation\">📖</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=Lioness100\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://gitlab.com/DavidPH/\"><img src=\"https://avatars.githubusercontent.com/u/44669930?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>David</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=DavidPHH\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/renovate\"><img src=\"https://avatars.githubusercontent.com/in/2740?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>renovate[bot]</b></sub></a><br /><a href=\"#maintenance-renovate[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://renovate.whitesourcesoftware.com/\"><img src=\"https://avatars.githubusercontent.com/u/25180681?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>WhiteSource Renovate</b></sub></a><br /><a href=\"#maintenance-renovate-bot\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://fc5570.me/\"><img src=\"https://avatars.githubusercontent.com/u/68158483?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>FC</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=FC5570\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Tokipudi\"><img src=\"https://avatars.githubusercontent.com/u/29551076?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jérémy de Saint Denis</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Tokipudi\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ItsMrCube\"><img src=\"https://avatars.githubusercontent.com/u/25201357?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>MrCube</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=ItsMrCube\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bitomic\"><img src=\"https://avatars.githubusercontent.com/u/35199700?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>bitomic</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=bitomic\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://c43721.dev/\"><img src=\"https://avatars.githubusercontent.com/u/55610086?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>c43721</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=c43721\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://commandtechno.com/\"><img src=\"https://avatars.githubusercontent.com/u/68407783?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Commandtechno</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Commandtechno\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/dhruv-kaushikk\"><img src=\"https://avatars.githubusercontent.com/u/73697546?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aura</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=dhruv-kaushikk\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://axis.moe/\"><img src=\"https://avatars.githubusercontent.com/u/54381371?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonathan</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=axisiscool\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/imranbarbhuiya\"><img src=\"https://avatars.githubusercontent.com/u/74945038?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Parbez</b></sub></a><br /><a href=\"#maintenance-imranbarbhuiya\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/NotKaskus\"><img src=\"https://avatars.githubusercontent.com/u/75168528?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Andrew</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=NotKaskus\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://linktr.ee/mzato0001\"><img src=\"https://avatars.githubusercontent.com/u/62367547?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mzato</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Mzato0001\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3AMzato0001\" title=\"Bug reports\">🐛</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/MajesticString\"><img src=\"https://avatars.githubusercontent.com/u/66224939?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Harry Allen</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=MajesticString\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/EvolutionX-10\"><img src=\"https://avatars.githubusercontent.com/u/85353424?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Evo</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=EvolutionX-10\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://enes.ovh/\"><img src=\"https://avatars.githubusercontent.com/u/61084101?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Enes Genç</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=enxg\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/muchnameless\"><img src=\"https://avatars.githubusercontent.com/u/12682826?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>muchnameless</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=muchnameless\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/r-priyam\"><img src=\"https://avatars.githubusercontent.com/u/50884372?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Priyam</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=r-priyam\" title=\"Code\">💻</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/utilities@3.11.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.10.1...@sapphire/utilities@3.11.0) - (2022-10-08)\n\n## 🐛 Bug Fixes\n\n- Override deprecated jsdoc (#488) ([5cc9a2c](https://github.com/sapphiredev/utilities/commit/5cc9a2ca1257cdbb62a65f70cea9cacb86853704))\n\n## 🚀 Features\n\n- Throttle function (#483) ([541891a](https://github.com/sapphiredev/utilities/commit/541891a8fea49d06d2855aa45efb095f196cdfb0))\n- **utilities:** Add pickRandom (#486) ([20823c9](https://github.com/sapphiredev/utilities/commit/20823c9ed02d1d4835b082874e5c2718b101c416))\n- Added `tryParseURL` (#482) ([46c5b49](https://github.com/sapphiredev/utilities/commit/46c5b49ac08da8207c7fbc1e7c15572d136bf103))\n\n# [@sapphire/utilities@3.10.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.10.0...@sapphire/utilities@3.10.1) - (2022-10-02)\n\n## 🐛 Bug Fixes\n\n- **utilities:** Add missing deprecated exports ([ef08c69](https://github.com/sapphiredev/utilities/commit/ef08c6910381df88fdada4b610f77604f5217ae1))\n\n## 📝 Documentation\n\n- Add @r-priyam as a contributor ([fb278ba](https://github.com/sapphiredev/utilities/commit/fb278bacf627ec6fc88752eafeb12df5f3177a2c))\n\n# [@sapphire/utilities@3.10.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.3...@sapphire/utilities@3.10.0) - (2022-10-02)\n\n## 🏠 Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## 🐛 Bug Fixes\n\n- **utilities:** Fixed output file extensions (#480) ([99a011d](https://github.com/sapphiredev/utilities/commit/99a011db82cb0b012974eb26951195cf8d00b672))\n- **utilities:** Specify chunk file as side effect ([7b34a81](https://github.com/sapphiredev/utilities/commit/7b34a81673f8c0e86fab40b956bffc903aa28a8f))\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## 📝 Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n\n## 🚀 Features\n\n- **utilities:** Add possibility to import single functions by appending them to the import path. (#454) ([374c145](https://github.com/sapphiredev/utilities/commit/374c145a5dd329cfc1a867ed6720abf408683a88))\n- **utilities:** Add `objectKeys` function (#472) ([384ff84](https://github.com/sapphiredev/utilities/commit/384ff845115c37aaeb20b0b23051954f75f1d0bf))\n- **utilities:** Add `objectEntries` function (#471) ([84c1418](https://github.com/sapphiredev/utilities/commit/84c1418a1b60dcc61c0e74f54f4c9825ac735962))\n- **utilities:** Add `objectValues` function (#474) ([90c2409](https://github.com/sapphiredev/utilities/commit/90c2409e3103575aff1dd00e0d1b5c1c10c74140))\n- **utilities:** Add `sleep` and `sleepSync` (#469) ([8cd1293](https://github.com/sapphiredev/utilities/commit/8cd129382f1958e00166a8248f4d864480562829))\n\n# [@sapphire/utilities@3.10.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.10.0...@sapphire/utilities@3.10.1) - (2022-10-02)\n\n## 🐛 Bug Fixes\n\n- **utilities:** Add missing deprecated exports ([ef08c69](https://github.com/sapphiredev/utilities/commit/ef08c6910381df88fdada4b610f77604f5217ae1))\n\n## 📝 Documentation\n\n- Add @r-priyam as a contributor ([fb278ba](https://github.com/sapphiredev/utilities/commit/fb278bacf627ec6fc88752eafeb12df5f3177a2c))\n\n# [@sapphire/utilities@3.10.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.3...@sapphire/utilities@3.10.0) - (2022-10-02)\n\n## 🏠 Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## 🐛 Bug Fixes\n\n- **utilities:** Fixed output file extensions (#480) ([99a011d](https://github.com/sapphiredev/utilities/commit/99a011db82cb0b012974eb26951195cf8d00b672))\n- **utilities:** Specify chunk file as side effect ([7b34a81](https://github.com/sapphiredev/utilities/commit/7b34a81673f8c0e86fab40b956bffc903aa28a8f))\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## 📝 Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n\n## 🚀 Features\n\n- **utilities:** Add possibility to import single functions by appending them to the import path. (#454) ([374c145](https://github.com/sapphiredev/utilities/commit/374c145a5dd329cfc1a867ed6720abf408683a88))\n- **utilities:** Add `objectKeys` function (#472) ([384ff84](https://github.com/sapphiredev/utilities/commit/384ff845115c37aaeb20b0b23051954f75f1d0bf))\n- **utilities:** Add `objectEntries` function (#471) ([84c1418](https://github.com/sapphiredev/utilities/commit/84c1418a1b60dcc61c0e74f54f4c9825ac735962))\n- **utilities:** Add `objectValues` function (#474) ([90c2409](https://github.com/sapphiredev/utilities/commit/90c2409e3103575aff1dd00e0d1b5c1c10c74140))\n- **utilities:** Add `sleep` and `sleepSync` (#469) ([8cd1293](https://github.com/sapphiredev/utilities/commit/8cd129382f1958e00166a8248f4d864480562829))\n\n# [@sapphire/utilities@3.10.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.3...@sapphire/utilities@3.10.0) - (2022-10-02)\n\n## 🏠 Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## 🐛 Bug Fixes\n\n- **utilities:** Fixed output file extensions (#480) ([99a011d](https://github.com/sapphiredev/utilities/commit/99a011db82cb0b012974eb26951195cf8d00b672))\n- **utilities:** Specify chunk file as side effect ([7b34a81](https://github.com/sapphiredev/utilities/commit/7b34a81673f8c0e86fab40b956bffc903aa28a8f))\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## 📝 Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n\n## 🚀 Features\n\n- **utilities:** Add possibility to import single functions by appending them to the import path. (#454) ([374c145](https://github.com/sapphiredev/utilities/commit/374c145a5dd329cfc1a867ed6720abf408683a88))\n- **utilities:** Add `objectKeys` function (#472) ([384ff84](https://github.com/sapphiredev/utilities/commit/384ff845115c37aaeb20b0b23051954f75f1d0bf))\n- **utilities:** Add `objectEntries` function (#471) ([84c1418](https://github.com/sapphiredev/utilities/commit/84c1418a1b60dcc61c0e74f54f4c9825ac735962))\n- **utilities:** Add `objectValues` function (#474) ([90c2409](https://github.com/sapphiredev/utilities/commit/90c2409e3103575aff1dd00e0d1b5c1c10c74140))\n- **utilities:** Add `sleep` and `sleepSync` (#469) ([8cd1293](https://github.com/sapphiredev/utilities/commit/8cd129382f1958e00166a8248f4d864480562829))\n\n# [@sapphire/utilities@3.9.3](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.2...@sapphire/utilities@3.9.3) - (2022-09-02)\n\n## 🐛 Bug Fixes\n\n- **isNumber:** Parse string parameter as number (allow string as parameter) (#444) ([01e1b14](https://github.com/sapphiredev/utilities/commit/01e1b1428cf793d7716d60217204626c76bd872e))\n\n## 📝 Documentation\n\n- Update @RealShadowNova as a contributor ([a869ba0](https://github.com/sapphiredev/utilities/commit/a869ba0abfad041610b9115187d426aebe671af6))\n\n# [@sapphire/utilities@3.9.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.0...@sapphire/utilities@3.9.1) - (2022-08-16)\n\n## 🐛 Bug Fixes\n\n- **utilities:** Fixed `getDeepObjectKeys` not returning proper values for arrays of not-objects (#428) ([88f84e6](https://github.com/sapphiredev/utilities/commit/88f84e61a72e6682bfeb2b38a8a2c55de08c757e))\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## 📝 Documentation\n\n- Fixed typos (#427) ([e840a97](https://github.com/sapphiredev/utilities/commit/e840a9795583b59ee3da9ffe0d325e0a3cfa0c14))\n\n# [@sapphire/utilities@3.9.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.9.0...@sapphire/utilities@3.9.1) - (2022-08-16)\n\n## 🐛 Bug Fixes\n\n- **utilities:** Fixed `getDeepObjectKeys` not returning proper values for arrays of not-objects (#428) ([88f84e6](https://github.com/sapphiredev/utilities/commit/88f84e61a72e6682bfeb2b38a8a2c55de08c757e))\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## 📝 Documentation\n\n- Fixed typos (#427) ([e840a97](https://github.com/sapphiredev/utilities/commit/e840a9795583b59ee3da9ffe0d325e0a3cfa0c14))\n\n# [@sapphire/utilities@3.9.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.8.0...@sapphire/utilities@3.9.0) - (2022-08-04)\n\n## 🚀 Features\n\n- **utilities:** Add getDeepObjectKeys (#413) ([b8b0883](https://github.com/sapphiredev/utilities/commit/b8b0883689e96df30767e4c9998b5f3403560779))\n\n# [@sapphire/utilities@3.8.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.7.0...@sapphire/utilities@3.8.0) - (2022-07-30)\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([84af0db](https://github.com/sapphiredev/utilities/commit/84af0db2db749223b036aa99fe19a2e9af5681c6))\n\n## 📝 Documentation\n\n- Add @muchnameless as a contributor ([a1221fe](https://github.com/sapphiredev/utilities/commit/a1221fea68506e99591d5d00ec552a07c26833f9))\n- Add @enxg as a contributor ([d2382f0](https://github.com/sapphiredev/utilities/commit/d2382f04e3909cb4ad11798a0a10e683f6cf5383))\n- Add @EvolutionX-10 as a contributor ([efc3a32](https://github.com/sapphiredev/utilities/commit/efc3a320a72ae258996dd62866d206c33f8d4961))\n\n## 🚀 Features\n\n- Add lazy (#406) ([80db17c](https://github.com/sapphiredev/utilities/commit/80db17cde4266a2a73639fde9670996a0814474b))\n\n# [@sapphire/utilities@3.7.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.6.2...@sapphire/utilities@3.7.0) - (2022-07-01)\n\n## 🏠 Refactor\n\n- **utilities:** Make `objectToTuples` more type-safe ([664580f](https://github.com/sapphiredev/utilities/commit/664580f74ba2fdc7c9edcd277dd93214d823fb2d))\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([50cd8de](https://github.com/sapphiredev/utilities/commit/50cd8dea593b6f5ae75571209456b3421e2ca59a))\n\n## 📝 Documentation\n\n- Add @MajesticString as a contributor ([295b3e9](https://github.com/sapphiredev/utilities/commit/295b3e9849a4b0fe64074bae02f6426378a303c3))\n- Add @Mzato0001 as a contributor ([c790ef2](https://github.com/sapphiredev/utilities/commit/c790ef25df2d7e22888fa9f8169167aa555e9e19))\n- Add @NotKaskus as a contributor ([00da8f1](https://github.com/sapphiredev/utilities/commit/00da8f199137b9277119823f322d1f2d168d928a))\n- Add @imranbarbhuiya as a contributor ([fb674c2](https://github.com/sapphiredev/utilities/commit/fb674c2c5594d41e71662263553dcb4bac9e37f4))\n- Add @axisiscool as a contributor ([ce1aa31](https://github.com/sapphiredev/utilities/commit/ce1aa316871a88d3663efbdf2a42d3d8dfe6a27f))\n- Add @dhruv-kaushikk as a contributor ([ebbf43f](https://github.com/sapphiredev/utilities/commit/ebbf43f63617daba96e72c50a234bf8b64f6ddc4))\n- Add @Commandtechno as a contributor ([f1d69fa](https://github.com/sapphiredev/utilities/commit/f1d69fabe1ee0abe4be08b19e63dbec03102f7ce))\n- Fix typedoc causing OOM crashes ([63ba41c](https://github.com/sapphiredev/utilities/commit/63ba41c4b6678554b1c7043a22d3296db4f59360))\n\n## 🚀 Features\n\n- **utilities:** Add `AnyObject` utility type ([e442028](https://github.com/sapphiredev/utilities/commit/e442028b07f867c31f94208b70b479893245b806))\n\n## 🧪 Testing\n\n- Migrate to vitest (#380) ([075ec73](https://github.com/sapphiredev/utilities/commit/075ec73c7a8e3374fad3ada612d37eb4ac36ec8d))\n\n## [3.6.2](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.6.1...@sapphire/utilities@3.6.2) (2022-04-01)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [3.6.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.6.0...@sapphire/utilities@3.6.1) (2022-03-20)\n\n### Bug Fixes\n\n-   **utilities:** remove `U` type from `cast` ([241ca66](https://github.com/sapphiredev/utilities/commit/241ca66bcecb11477c948e11c0428c31f4e34e6b))\n\n# [3.6.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.5.0...@sapphire/utilities@3.6.0) (2022-03-20)\n\n### Features\n\n-   **utilities:** add `cast` method ([7e02bf5](https://github.com/sapphiredev/utilities/commit/7e02bf5b34f33c4cafb321055629c9f6a24c5ed9))\n\n# [3.5.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.4.0...@sapphire/utilities@3.5.0) (2022-03-11)\n\n### Features\n\n-   **utlities:** add title case `options` param ([#313](https://github.com/sapphiredev/utilities/issues/313)) ([ca7cffa](https://github.com/sapphiredev/utilities/commit/ca7cffa015d027de6ba4121f45c0b88867aede02))\n\n# [3.4.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.3.0...@sapphire/utilities@3.4.0) (2022-03-06)\n\n### Features\n\n-   allow module: NodeNext ([#306](https://github.com/sapphiredev/utilities/issues/306)) ([9dc6dd6](https://github.com/sapphiredev/utilities/commit/9dc6dd619efab879bb2b0b3c9e64304e10a67ed6))\n-   **ts-config:** add multi-config structure ([#281](https://github.com/sapphiredev/utilities/issues/281)) ([b5191d7](https://github.com/sapphiredev/utilities/commit/b5191d7f2416dc5838590c4ff221454925553e37))\n\n# [3.3.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.2.1...@sapphire/utilities@3.3.0) (2022-01-28)\n\n### Bug Fixes\n\n-   fixed date cloning ([#275](https://github.com/sapphiredev/utilities/issues/275)) ([53d1f86](https://github.com/sapphiredev/utilities/commit/53d1f86ee7ea6cb29020b9845cc265f92a99a28c))\n\n### Features\n\n-   change build system to tsup ([#270](https://github.com/sapphiredev/utilities/issues/270)) ([365a53a](https://github.com/sapphiredev/utilities/commit/365a53a5517a01a0926cf28a83c96b63f32ed9f8))\n\n## [3.2.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.2.0...@sapphire/utilities@3.2.1) (2022-01-21)\n\n### Bug Fixes\n\n-   fixed typos of `communitys` ([e4e3a69](https://github.com/sapphiredev/utilities/commit/e4e3a6913a8157f24f366ac43db46faebdc085ce)), closes [#263](https://github.com/sapphiredev/utilities/issues/263)\n\n# [3.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.1.0...@sapphire/utilities@3.2.0) (2022-01-10)\n\n### Bug Fixes\n\n-   **utilities:** make `NonNullObject` require object ([#242](https://github.com/sapphiredev/utilities/issues/242)) ([5e0f161](https://github.com/sapphiredev/utilities/commit/5e0f161145402e01b631a9b1b2033d0618cccc8b))\n\n### Features\n\n-   **utilities:** support custom constructors for `isObject` ([#241](https://github.com/sapphiredev/utilities/issues/241)) ([701c2c2](https://github.com/sapphiredev/utilities/commit/701c2c200f147d7d7dcccaee65b75e709b601f8c))\n\n# [3.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.8...@sapphire/utilities@3.1.0) (2021-11-19)\n\n### Features\n\n-   add array partitioning ([#220](https://github.com/sapphiredev/utilities/issues/220)) ([42d6b81](https://github.com/sapphiredev/utilities/commit/42d6b8123233ed5315c55412d993fc19266660bb))\n\n## [3.0.8](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.7...@sapphire/utilities@3.0.8) (2021-11-15)\n\n### Bug Fixes\n\n-   **utilities:** target ES2019 for create-react-app support ([95575ed](https://github.com/sapphiredev/utilities/commit/95575ed5bc2def07fb8066d85662a08d8610d8d1))\n\n## [3.0.7](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.6...@sapphire/utilities@3.0.7) (2021-11-06)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [3.0.6](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.5...@sapphire/utilities@3.0.6) (2021-10-28)\n\n### Bug Fixes\n\n-   **deepClone:** fixed deep cloning when there are classes ([d3aeed1](https://github.com/sapphiredev/utilities/commit/d3aeed1613ae642ca96b1bd6914f0d43c7c35807))\n\n## [3.0.5](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.4...@sapphire/utilities@3.0.5) (2021-10-26)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [3.0.4](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.3...@sapphire/utilities@3.0.4) (2021-10-17)\n\n### Bug Fixes\n\n-   allow more node & npm versions in engines field ([5977d2a](https://github.com/sapphiredev/utilities/commit/5977d2a30a4b2cfdf84aff3f33af03ffde1bbec5))\n\n## [3.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.2...@sapphire/utilities@3.0.3) (2021-10-11)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [3.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.1...@sapphire/utilities@3.0.2) (2021-10-08)\n\n### Bug Fixes\n\n-   **utilities:** correct forgotten abstract ([#195](https://github.com/sapphiredev/utilities/issues/195)) ([20b7ef7](https://github.com/sapphiredev/utilities/commit/20b7ef7d22d88a7fe54ae40474fa58ab85c49488))\n\n## [3.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@3.0.0...@sapphire/utilities@3.0.1) (2021-10-04)\n\n### Bug Fixes\n\n-   **utilities:** add AbstractCtor and AbstractConstructor and remove abstract from their counterparts ([dbc0321](https://github.com/sapphiredev/utilities/commit/dbc032169791bbdc70eb2a8f151098d21fa192fd))\n-   **utilities:** support abstract classes for Ctor utility type ([1ce3136](https://github.com/sapphiredev/utilities/commit/1ce3136165aea830460ae5283d8348fef17c0dba))\n\n# [3.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@2.0.1...@sapphire/utilities@3.0.0) (2021-10-04)\n\n### Bug Fixes\n\n-   **utilities:** rename `Awaited<T>` to `Awaitable<T>` ([#193](https://github.com/sapphiredev/utilities/issues/193)) ([6ff3e28](https://github.com/sapphiredev/utilities/commit/6ff3e28a78cc9c2b3d58d42fbfba876ab70046c2))\n\n### Features\n\n-   **utilities:** add empty array to 'isNullishOrEmpty' ([#168](https://github.com/sapphiredev/utilities/issues/168)) ([8f9e615](https://github.com/sapphiredev/utilities/commit/8f9e6156a802c90495f6f07ce6570226af01794c))\n-   **utilities:** set minimum NodeJS to v14 ([79aa230](https://github.com/sapphiredev/utilities/commit/79aa230a5874d1bbfb14c3b8506de06b3329395a))\n-   **utilities:** support abstract classes for `Constructor` utility type ([#194](https://github.com/sapphiredev/utilities/issues/194)) ([732d5a0](https://github.com/sapphiredev/utilities/commit/732d5a07b6eef9c37ee52a42f4a391764a08debf))\n\n### BREAKING CHANGES\n\n-   **utilities:** `Awaited` has been renamed to `Awaitable`\n\n## [2.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@2.0.0...@sapphire/utilities@2.0.1) (2021-07-20)\n\n### Bug Fixes\n\n-   **utilities:** add tsdoc for filter functions ([36d51d1](https://github.com/sapphiredev/utilities/commit/36d51d12366dd25fa2f04a90e834b5fc2aac73ac))\n\n# [2.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.7.0...@sapphire/utilities@2.0.0) (2021-07-17)\n\n### Code Refactoring\n\n-   **rateLimits:** rewrite all of it ([#130](https://github.com/sapphiredev/utilities/issues/130)) ([320778c](https://github.com/sapphiredev/utilities/commit/320778ca65cbf3591bd1ce0b1f2eb430693eef9a))\n\n### BREAKING CHANGES\n\n-   **rateLimits:** Removed `Bucket`\n\n# [1.7.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.6.1...@sapphire/utilities@1.7.0) (2021-07-11)\n\n### Features\n\n-   **utilities:** add 3 new helper methods ([4ebcd43](https://github.com/sapphiredev/utilities/commit/4ebcd431cede7773aed2fe82e58c0d2d66578fea))\n\n## [1.6.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.6.0...@sapphire/utilities@1.6.1) (2021-06-27)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n# [1.6.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.5.3...@sapphire/utilities@1.6.0) (2021-06-19)\n\n### Features\n\n-   **utilities:** update utilities with more stuff ([#122](https://github.com/sapphiredev/utilities/issues/122)) ([5dfb668](https://github.com/sapphiredev/utilities/commit/5dfb6688d27ab361a7c31692465ed613b500cdb1))\n\n## [1.5.3](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.5.2...@sapphire/utilities@1.5.3) (2021-06-06)\n\n### Bug Fixes\n\n-   remove peer deps, update dev deps, update READMEs ([#124](https://github.com/sapphiredev/utilities/issues/124)) ([67256ed](https://github.com/sapphiredev/utilities/commit/67256ed43b915b02a8b5c68230ba82d6210c5032))\n\n## [1.5.2](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.5.1...@sapphire/utilities@1.5.2) (2021-05-20)\n\n### Bug Fixes\n\n-   **utilities:** mark package as side effect free ([73cbabd](https://github.com/sapphiredev/utilities/commit/73cbabddc274387d7819d80afe426eb1112f7995))\n\n## [1.5.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.5.0...@sapphire/utilities@1.5.1) (2021-05-02)\n\n### Bug Fixes\n\n-   drop the `www.` from the SapphireJS URL ([494d89f](https://github.com/sapphiredev/utilities/commit/494d89ffa04f78c195b93d7905b3232884f7d7e2))\n-   update all the SapphireJS URLs from `.com` to `.dev` ([f59b46d](https://github.com/sapphiredev/utilities/commit/f59b46d1a0ebd39cad17b17d71cd3b9da808d5fd))\n\n# [1.5.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.8...@sapphire/utilities@1.5.0) (2021-04-21)\n\n### Bug Fixes\n\n-   **utilities:** resolve lgtm error ([eb5f4e6](https://github.com/sapphiredev/utilities/commit/eb5f4e6478d35a6864427fe02849e930b151285c))\n\n### Features\n\n-   add @sapphire/embed-jsx ([#100](https://github.com/sapphiredev/utilities/issues/100)) ([7277a23](https://github.com/sapphiredev/utilities/commit/7277a236015236ed8e81b7882875410facc4ce17))\n\n## [1.4.8](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.7...@sapphire/utilities@1.4.8) (2021-04-19)\n\n### Bug Fixes\n\n-   change all Sapphire URLs from \"project\"->\"community\" & use our domain where applicable 👨‍🌾🚜 ([#102](https://github.com/sapphiredev/utilities/issues/102)) ([835b408](https://github.com/sapphiredev/utilities/commit/835b408e8e57130c3787aca2e32613346ff23e4d))\n\n## [1.4.7](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.6...@sapphire/utilities@1.4.7) (2021-04-03)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [1.4.6](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.5...@sapphire/utilities@1.4.6) (2021-03-16)\n\n### Bug Fixes\n\n-   remove terser from all packages ([#79](https://github.com/sapphiredev/utilities/issues/79)) ([1cfe4e7](https://github.com/sapphiredev/utilities/commit/1cfe4e7c804e62c142495686d2b83b81d0026c02))\n\n## [1.4.5](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.4...@sapphire/utilities@1.4.5) (2021-02-16)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [1.4.4](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.3...@sapphire/utilities@1.4.4) (2021-01-25)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [1.4.3](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.2...@sapphire/utilities@1.4.3) (2021-01-16)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n## [1.4.2](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.1...@sapphire/utilities@1.4.2) (2021-01-14)\n\n### Bug Fixes\n\n-   **utilities:** fix parseUrl not working in v1.4.1 ([c1fe990](https://github.com/sapphiredev/utilities/commit/c1fe990d443b20791d268a2ca2bdd645500ed436))\n\n## [1.4.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.4.0...@sapphire/utilities@1.4.1) (2021-01-14)\n\n### Bug Fixes\n\n-   **utilities:** fixed return type for parseURL ([718065a](https://github.com/sapphiredev/utilities/commit/718065a34b5ee225503f8b2197784f1fd1b15f19))\n-   **utilities:** properly type parseUrl ([dcf800f](https://github.com/sapphiredev/utilities/commit/dcf800f6e1435cd6151f510da36b9e99166df9e4))\n\n# [1.4.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.3.1...@sapphire/utilities@1.4.0) (2021-01-13)\n\n### Features\n\n-   **utilities:** add Nullish utility type ([a7e32bd](https://github.com/sapphiredev/utilities/commit/a7e32bdc1475840d6c313fbb83b7e502ebf780f5))\n\n## [1.3.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.3.0...@sapphire/utilities@1.3.1) (2021-01-01)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n# [1.3.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.2.0...@sapphire/utilities@1.3.0) (2020-12-26)\n\n### Features\n\n-   **decorators:** add createFunctionPrecondition, fixed build ([#51](https://github.com/sapphiredev/utilities/issues/51)) ([c87d5db](https://github.com/sapphiredev/utilities/commit/c87d5db8e29bbfcf96a29e34e4e4186426bac304))\n\n# [1.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.1.1...@sapphire/utilities@1.2.0) (2020-12-22)\n\n### Features\n\n-   **utilities:** add debounce ([#45](https://github.com/sapphiredev/utilities/issues/45)) ([4762ebf](https://github.com/sapphiredev/utilities/commit/4762ebfac1724308330a61d2c8b3d71eadbd24f0))\n\n## [1.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.1.0...@sapphire/utilities@1.1.1) (2020-11-15)\n\n### Bug Fixes\n\n-   **utilities:** add alias of isNullish to isNullOrUndefined ([eadf28f](https://github.com/sapphiredev/utilities/commit/eadf28ff024d887d83ade252e4567317593ca529)), closes [#30](https://github.com/sapphiredev/utilities/issues/30)\n-   **utilities:** pass keep_classnames to terser ([9425c82](https://github.com/sapphiredev/utilities/commit/9425c82765b2fda461d08ab1d5ed4a302d327281))\n-   **utilities:** pass keep_fnames to terser ([4b8fde2](https://github.com/sapphiredev/utilities/commit/4b8fde225fc7fb8da26dd51bc1ab97b6d45f6af5))\n\n# [1.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.0.3...@sapphire/utilities@1.1.0) (2020-11-07)\n\n### Features\n\n-   **utilities:** add range function ([f9ac35e](https://github.com/sapphiredev/utilities/commit/f9ac35ee74848746ce057a1c2a8ccc6499aca892))\n-   **utilities:** add range function ([a59d623](https://github.com/sapphiredev/utilities/commit/a59d62341d64c4b1565637d15cd642efd275281a))\n-   added time-utilities package ([#26](https://github.com/sapphiredev/utilities/issues/26)) ([f17a333](https://github.com/sapphiredev/utilities/commit/f17a3339667a452e8745fad7884272176e5d65e8))\n\n## [1.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.0.2...@sapphire/utilities@1.0.3) (2020-11-04)\n\n### Bug Fixes\n\n-   **utilities:** properly specify ESM and CommonJS exports ([11f4f9b](https://github.com/sapphiredev/utilities/commit/11f4f9b32f8c2a6c8be2f4568e2e1e0fac47b39e))\n\n## [1.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.0.1...@sapphire/utilities@1.0.2) (2020-10-11)\n\n### Bug Fixes\n\n-   **ratelimits,snowflake,utilities:** fixed esm output target ([9fdab3f](https://github.com/sapphiredev/utilities/commit/9fdab3fca283c8c0b47cc32661c5cf8e0a5e583c))\n-   **utilities:** fixed up mergeDefault ([#21](https://github.com/sapphiredev/utilities/issues/21)) ([76561db](https://github.com/sapphiredev/utilities/commit/76561dbf339ebf2dff1a712e448407e6a1b36070))\n\n## [1.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/utilities@1.0.0...@sapphire/utilities@1.0.1) (2020-09-20)\n\n**Note:** Version bump only for package @sapphire/utilities\n\n# 1.0.0 (2020-09-05)\n\n### Bug Fixes\n\n-   **utilities:** fix types for isFunction ([991de0d](https://github.com/sapphiredev/utilities/commit/991de0da0f9b51813f4fee4ecf071feeb9d95abe))\n-   **utilities:** fixed types for codeBlock ([abae927](https://github.com/sapphiredev/utilities/commit/abae927f5a5dbf1785770569d0fc6bcdf658880e))\n-   **utilities:** fixed types for isThenable ([0563b8d](https://github.com/sapphiredev/utilities/commit/0563b8dc0492fe8ff5dd3fc16dd334854d962728))\n-   **utilities:** put lang as first param ([54bfba7](https://github.com/sapphiredev/utilities/commit/54bfba781ac7d6f9d60fc7fec85475d8496d9aa2))\n\n### Features\n\n-   implement snowflake ([5ba4e2d](https://github.com/sapphiredev/utilities/commit/5ba4e2d82557dd4ff60ffe891a7b46e46373bea2))\n-   **decorators:** add decorators package ([#4](https://github.com/sapphiredev/utilities/issues/4)) ([677b3e5](https://github.com/sapphiredev/utilities/commit/677b3e59d5c6160cbe6fb410821cadd7c0f00e3c))\n-   **utilities:** add all utilities ([94fcae8](https://github.com/sapphiredev/utilities/commit/94fcae8cb81e0eaaddac7de1e78b1e26cccb9bf0))\n",
  "classes": [
    {
      "id": 35,
      "name": "AbortError",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 15,
        "file": "sleep.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L15"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Error",
        "packageName": "typescript",
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 46,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 17,
          "file": "sleep.ts",
          "path": "packages/utilities/src/lib",
          "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L17"
        },
        "parentId": 35,
        "parameters": [
          {
            "id": 48,
            "name": "message",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          },
          {
            "id": 49,
            "name": "options",
            "type": {
              "kind": "reflection",
              "reflection": {
                "id": 50,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 51,
                    "name": "cause",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "packages/utilities/src/lib/sleep.ts",
                        "line": 20,
                        "character": 3,
                        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L20"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [
                      51
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/utilities/src/lib/sleep.ts",
                    "line": 19,
                    "character": 12,
                    "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L19"
                  }
                ]
              }
            }
          }
        ]
      },
      "properties": [
        {
          "id": 56,
          "name": "cause",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 26,
            "file": "lib.es2022.error.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 52,
          "name": "code",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 16,
            "file": "sleep.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L16"
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 54,
          "name": "message",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1041,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 53,
          "name": "name",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1040,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 55,
          "name": "stack",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 1042,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 40,
          "name": "prepareStackTrace",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 11,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node/ts4.8",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 41,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/@types/node/ts4.8/globals.d.ts",
                  "line": 11,
                  "character": 25
                }
              ],
              "signatures": [
                {
                  "id": 42,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Optional override for formatting stack traces"
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@see",
                        "content": [
                          {
                            "kind": "text",
                            "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 43,
                      "name": "err",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 44,
                      "name": "stackTraces",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "CallSite",
                          "qualifiedName": "NodeJS.CallSite",
                          "package": "@types/node"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 45,
          "name": "stackTraceLimit",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node/ts4.8",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": [
        {
          "id": 36,
          "name": "captureStackTrace",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node/ts4.8",
            "url": null
          },
          "parentId": 35,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 37,
              "name": "captureStackTrace",
              "comment": {
                "description": "Create .stack property on a target object",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 38,
                  "name": "targetObject",
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  }
                },
                {
                  "id": 39,
                  "name": "constructorOpt",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        }
      ]
    }
  ],
  "constants": [],
  "enums": [],
  "functions": [
    {
      "id": 95,
      "name": "arrayStrictEquals",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "arrayStrictEquals.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/arrayStrictEquals.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 96,
          "name": "arrayStrictEquals",
          "comment": {
            "description": "Compare if both arrays are strictly equal",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 97,
              "name": "T",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 98,
              "name": "arr1",
              "type": {
                "kind": "reference",
                "id": 97,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 99,
              "name": "arr2",
              "type": {
                "kind": "reference",
                "id": 97,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 100,
      "name": "cast",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "cast.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/cast.ts#L10"
      },
      "external": false,
      "signatures": [
        {
          "id": 101,
          "name": "cast",
          "comment": {
            "description": "Casts any value to `T`\n\nNote that this function is not type-safe, and may cause runtime errors if used incorrectly.\nAlso note that this function is effectively useless in a JavaScript project, it only serves a purpose for TypeScript projects.",
            "blockTags": [
              {
                "name": "returns",
                "text": "The value but as type `T`"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 102,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 103,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 102,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 104,
      "name": "chunk",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "chunk.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/chunk.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 105,
          "name": "chunk",
          "comment": {
            "description": "Splits up an array into chunks",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 106,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 107,
              "name": "array",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 106,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            },
            {
              "id": 108,
              "name": "chunkSize",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": 106,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          }
        }
      ]
    },
    {
      "id": 109,
      "name": "classExtends",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "classExtends.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/classExtends.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 110,
          "name": "classExtends",
          "comment": {
            "description": "Checks whether or not the value class extends the base class.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 111,
              "name": "T",
              "type": {
                "kind": "reference",
                "id": 293,
                "name": "Ctor",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    }
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 112,
              "name": "value",
              "type": {
                "kind": "reference",
                "id": 293,
                "name": "Ctor",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    }
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            },
            {
              "id": 113,
              "name": "base",
              "type": {
                "kind": "reference",
                "id": 111,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "reference",
              "id": 111,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 114,
      "name": "codeBlock",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "codeBlock.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/codeBlock.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 115,
          "name": "codeBlock",
          "comment": {
            "description": "Wraps text in a markdown codeblock with optionally a language indicator for syntax highlighting",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 116,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 117,
              "name": "language",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 118,
              "name": "expression",
              "type": {
                "kind": "reference",
                "id": 116,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 119,
      "name": "cutText",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "cutText.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/cutText.ts#L10"
      },
      "external": false,
      "signatures": [
        {
          "id": 120,
          "name": "cutText",
          "comment": {
            "description": "Split a text by its latest space character in a range from the character 0 to the selected one.",
            "blockTags": [
              {
                "name": "copyright",
                "text": "2019 Aura Román"
              },
              {
                "name": "license",
                "text": "Apache-2.0"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 121,
              "name": "str",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 122,
              "name": "length",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 1,
      "name": "debounce",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 68,
        "file": "debounce.ts",
        "path": "packages/utilities/src/lib/debounce",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L68"
      },
      "external": false,
      "signatures": [
        {
          "id": 2,
          "name": "debounce",
          "comment": {
            "description": "Creates a debounced function that delays invoking func until after wait milliseconds have elapsed since\nthe last time the debounced function was invoked. The debounced function comes with a cancel method to\ncancel delayed invocations and a flush method to immediately invoke them. Provide an options object to\nindicate that func should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent\ncalls to the debounced function return the result of the last func invocation.\n\nNote: If leading and trailing options are true, func is invoked on the trailing edge of the timeout only\nif the the debounced function is invoked more than once during the wait timeout.\n\nSee David Corbacho’s article for details over the differences between _.debounce and _.throttle.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Returns the new debounced function."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 3,
              "name": "FnArgumentsType",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "any"
                }
              },
              "default": null
            },
            {
              "id": 4,
              "name": "FnReturnType",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 5,
              "name": "func",
              "type": {
                "kind": "reflection",
                "reflection": {
                  "id": 6,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/utilities/src/lib/debounce/debounce.ts",
                      "line": 69,
                      "character": 7,
                      "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L69"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 7,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 8,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 3,
                            "name": "FnArgumentsType"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 4,
                        "name": "FnReturnType"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 9,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 19,
                "name": "DebounceSettings",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 10,
            "name": "DebouncedFunc",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 3,
                "name": "FnArgumentsType",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 4,
                "name": "FnReturnType",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 123,
      "name": "deepClone",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "deepClone.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/deepClone.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 124,
          "name": "deepClone",
          "comment": {
            "description": "Deep clone an object",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 125,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 126,
              "name": "source",
              "type": {
                "kind": "reference",
                "id": 125,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 125,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 127,
      "name": "filterNullAndUndefined",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 19,
        "file": "filterNullAndUndefined.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/filterNullAndUndefined.ts#L19"
      },
      "external": false,
      "signatures": [
        {
          "id": 128,
          "name": "filterNullAndUndefined",
          "comment": {
            "description": "Checks whether a value is not `null` nor `undefined`.\nThis can be used in {@link Array.filter} to remove `null` and `undefined` from the array type",
            "blockTags": [
              {
                "name": "returns",
                "text": "A boolean that is `true` if the value is neither `null` nor `undefined`, false otherwise."
              },
              {
                "name": "example",
                "text": "```typescript\n// TypeScript Type: (string | undefined | null)[]\nconst someArray = ['one', 'two', undefined, null, 'five'];\n\n// TypeScript Type: string[]\nconst filteredArray = someArray.filter(filterNullAndUndefined);\n// Result: ['one', 'two', 'five']\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 129,
              "name": "TValue",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 130,
              "name": "value",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 330,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 129,
                    "name": "TValue",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "reference",
              "id": 129,
              "name": "TValue",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 132,
      "name": "filterNullAndUndefinedAndEmpty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 19,
        "file": "filterNullAndUndefinedAndEmpty.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/filterNullAndUndefinedAndEmpty.ts#L19"
      },
      "external": false,
      "signatures": [
        {
          "id": 133,
          "name": "filterNullAndUndefinedAndEmpty",
          "comment": {
            "description": "Checks whether a value is not `null` nor `undefined` nor `''` (empty string).\nThis can be used in {@link Array.filter} to remove `null`, `undefined` from the array type",
            "blockTags": [
              {
                "name": "returns",
                "text": "A boolean that is `true` if the value is neither `null`, `undefined` nor `''` (empty string), false otherwise."
              },
              {
                "name": "example",
                "text": "```typescript\n// TypeScript Type: (string | undefined | null)[]\nconst someArray = ['one', 'two', undefined, null, ''];\n\n// TypeScript Type: string[]\nconst filteredArray = someArray.filter(filterNullAndUndefinedAndEmpty);\n// Result: ['one', 'two']\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 134,
              "name": "TValue",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 135,
              "name": "value",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": ""
                  },
                  {
                    "kind": "reference",
                    "id": 330,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 134,
                    "name": "TValue",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "reference",
              "id": 134,
              "name": "TValue",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 138,
      "name": "filterNullAndUndefinedAndZero",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 19,
        "file": "filterNullAndUndefinedAndZero.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/filterNullAndUndefinedAndZero.ts#L19"
      },
      "external": false,
      "signatures": [
        {
          "id": 139,
          "name": "filterNullAndUndefinedAndZero",
          "comment": {
            "description": "Checks whether a value is not `null` nor `undefined` nor `0`.\nThis can be used in {@link Array.filter} to remove `null`, `undefined` from the array type",
            "blockTags": [
              {
                "name": "returns",
                "text": "A boolean that is `true` if the value is neither `null`, `undefined` nor `0`, false otherwise."
              },
              {
                "name": "example",
                "text": "```typescript\n// TypeScript Type: (string | number | undefined | null)[]\nconst someArray = ['one', 'two', undefined, null, 0, 1];\n\n// TypeScript Type: (string | number)[]\nconst filteredArray = someArray.filter(filterNullAndUndefinedAndZero);\n// Result: ['one', 'two', 1]\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 140,
              "name": "TValue",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 141,
              "name": "value",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "0"
                  },
                  {
                    "kind": "reference",
                    "id": 330,
                    "name": "Nullish",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 140,
                    "name": "TValue",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "reference",
              "id": 140,
              "name": "TValue",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 22,
      "name": "getDeepObjectKeys",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 15,
        "file": "getDeepObjectKeys.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/getDeepObjectKeys.ts#L15"
      },
      "external": false,
      "signatures": [
        {
          "id": 23,
          "name": "getDeepObjectKeys",
          "comment": {
            "description": "Flattens an object to a list of its keys, traversing deeply into nested objects and arrays of objects.",
            "blockTags": [
              {
                "name": "note",
                "text": "By default Nested array values are flattened to `arrayKey.${index}.subKey`.\nThis can be changed to `arrayKey[${index}].subKey` by setting `options.arrayKeysIndexStyle` to `'braces-with-dot'`.\nOr it can also be changed to `arrayKey[${index}]subKey` by setting `options.arrayKeysIndexStyle` to `'braces'`."
              },
              {
                "name": "returns",
                "text": "An array of strings holding the keys of the object"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 24,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 25,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": 335,
                "name": "AnyObject",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 24,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 26,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 27,
                "name": "GetDeepObjectKeysOptions",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        }
      ]
    },
    {
      "id": 144,
      "name": "hasAtLeastOneKeyInMap",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "hasAtLeastOneKeyInMap.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/hasAtLeastOneKeyInMap.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 145,
          "name": "hasAtLeastOneKeyInMap",
          "comment": {
            "description": "Checks whether any of the {@link keys} are in the {@link map}",
            "blockTags": [
              {
                "name": "returns",
                "text": "`true` if at least one of the {@link keys} is in the {@link map}, `false` otherwise."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 146,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 147,
              "name": "map",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "ReadonlyMap",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 146,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            },
            {
              "id": 148,
              "name": "keys",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 146,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 149,
      "name": "inlineCodeBlock",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "inlineCodeBlock.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/inlineCodeBlock.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 150,
          "name": "inlineCodeBlock",
          "comment": {
            "description": "Wraps text in a markdown inline codeblock",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 151,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 152,
      "name": "isClass",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "isClass.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isClass.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 153,
          "name": "isClass",
          "comment": {
            "description": "Verify if the input is a class constructor.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 154,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "reference",
              "id": 293,
              "name": "Ctor",
              "packageName": null,
              "typeArguments": [
                {
                  "kind": "typeOperator",
                  "operator": "readonly",
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  }
                },
                {
                  "kind": "intrinsic",
                  "type": "any"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 155,
      "name": "isFunction",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "isFunction.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isFunction.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 156,
          "name": "isFunction",
          "comment": {
            "description": "Verify if the input is a function.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 157,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Function",
              "packageName": "typescript",
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 158,
      "name": "isNullOrUndefined",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "isNullOrUndefined.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isNullOrUndefined.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 159,
          "name": "isNullOrUndefined",
          "comment": {
            "description": "Checks whether or not a value is `null` or `undefined`",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 160,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "reference",
              "id": 330,
              "name": "Nullish",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 162,
      "name": "isNullOrUndefinedOrEmpty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "isNullOrUndefinedOrEmpty.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isNullOrUndefinedOrEmpty.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 163,
          "name": "isNullOrUndefinedOrEmpty",
          "comment": {
            "description": "Checks whether or not a value is `null`, `undefined` or `''`, `[]`",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 164,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": ""
                },
                {
                  "kind": "reference",
                  "id": 330,
                  "name": "Nullish",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 166,
      "name": "isNullOrUndefinedOrZero",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "isNullOrUndefinedOrZero.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isNullOrUndefinedOrZero.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 167,
          "name": "isNullOrUndefinedOrZero",
          "comment": {
            "description": "Checks whether or not a value is `null`, `undefined` or `0`",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 168,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "value",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "literal",
                  "value": "0"
                },
                {
                  "kind": "reference",
                  "id": 330,
                  "name": "Nullish",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 170,
      "name": "isNumber",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "isNumber.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isNumber.ts#L5"
      },
      "external": false,
      "signatures": [
        {
          "id": 171,
          "name": "isNumber",
          "comment": {
            "description": "Verify if a number is a finite number.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 172,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "intrinsic",
              "type": "number"
            }
          }
        }
      ]
    },
    {
      "id": 173,
      "name": "isObject",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "isObject.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isObject.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 174,
          "name": "isObject",
          "comment": {
            "description": "Verify if the input is an object literal (or class).",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 175,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 176,
              "name": "constructorType",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "ObjectConstructor",
                "packageName": "typescript",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "intrinsic",
              "type": "object"
            }
          }
        },
        {
          "id": 177,
          "name": "isObject",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 178,
              "name": "T",
              "type": {
                "kind": "reference",
                "id": 305,
                "name": "Constructor",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 179,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 180,
              "name": "constructorType",
              "type": {
                "kind": "reference",
                "id": 178,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "InstanceType",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 178,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 181,
      "name": "isPrimitive",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "isPrimitive.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isPrimitive.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 182,
          "name": "isPrimitive",
          "comment": {
            "description": "Check whether a value is a primitive",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 183,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "union",
              "types": [
                {
                  "kind": "intrinsic",
                  "type": "string"
                },
                {
                  "kind": "intrinsic",
                  "type": "number"
                },
                {
                  "kind": "intrinsic",
                  "type": "bigint"
                },
                {
                  "kind": "intrinsic",
                  "type": "boolean"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 29,
      "name": "isThenable",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 21,
        "file": "isThenable.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isThenable.ts#L21"
      },
      "external": false,
      "signatures": [
        {
          "id": 30,
          "name": "isThenable",
          "comment": {
            "description": "Verify if an object is a promise.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 31,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "predicate",
            "asserts": false,
            "name": "input",
            "type": {
              "kind": "reference",
              "id": 32,
              "name": "Thenable",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 184,
      "name": "lazy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "lazy.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/lazy.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 185,
          "name": "lazy",
          "comment": {
            "description": "Lazily creates a constant or load a module and caches it internally",
            "blockTags": [
              {
                "name": "returns",
                "text": "The value returned by the callback, or the cached value if it was already initialised once."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 186,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 187,
              "name": "cb",
              "type": {
                "kind": "reflection",
                "reflection": {
                  "id": 188,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/utilities/src/lib/lazy.ts",
                      "line": 6,
                      "character": 28,
                      "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/lazy.ts#L6"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 189,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 186,
                        "name": "T"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "returnType": {
            "kind": "reflection",
            "reflection": {
              "id": 190,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/utilities/src/lib/lazy.ts",
                  "line": 9,
                  "character": 8,
                  "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/lazy.ts#L9"
                }
              ],
              "signatures": [
                {
                  "id": 191,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 186,
                    "name": "T"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 192,
      "name": "makeObject",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "makeObject.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/makeObject.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 193,
          "name": "makeObject",
          "comment": {
            "description": "Turn a dotted path into a json object.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 194,
              "name": "path",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 195,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 196,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "Record",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Record",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "unknown"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 197,
      "name": "mergeDefault",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 43,
        "file": "mergeDefault.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/mergeDefault.ts#L43"
      },
      "external": false,
      "signatures": [
        {
          "id": 198,
          "name": "mergeDefault",
          "comment": {
            "description": "Deep merges 2 objects. Properties from the second parameter are applied to the first.",
            "blockTags": [
              {
                "name": "remark",
                "text": "`overwrites` is also mutated!"
              },
              {
                "name": "remark",
                "text": "If the value of a key in `overwrites` is `undefined` then the value of that same key in `base` is used instead!"
              },
              {
                "name": "remark",
                "text": "This is essentially `{ ...base, ...overwrites }` but recursively"
              },
              {
                "name": "example",
                "text": "```typescript\nconst base = { a: 0, b: 1 };\nconst overwrites = {}; // will be { a: 0, b: 1 } after merge\nmergeDefault(base, overwrites) // { a: 0, b: 1 }\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nconst base = { a: 0, b: 1 };\nconst overwrites = { a: 2, i: 3 };\nmergeDefault(base, overwrites) // { a: 2, i: 3, b: 1 };\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nconst base = { a: 0, b: 1 };\nconst overwrites = { a: null };\nmergeDefault(base, overwrites) // { a: null, b: 1 };\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nconst base = { a: 0, b: 1 };\nconst overwrites = { a: undefined };\nmergeDefault(base, overwrites) // { a: 0, b: 1 };\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nconst base = { a: null };\nconst overwrites = { a: { b: 5 } };\nmergeDefault(base, overwrites) // { a: { b: 5 } };\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 199,
              "name": "A",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            },
            {
              "id": 200,
              "name": "B",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "Partial",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 199,
                    "name": "A",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 201,
              "name": "base",
              "type": {
                "kind": "reference",
                "id": 199,
                "name": "A",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 202,
              "name": "overwrites",
              "type": {
                "kind": "reference",
                "id": 200,
                "name": "B",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 273,
            "name": "DeepRequired",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "intersection",
                "types": [
                  {
                    "kind": "reference",
                    "id": 199,
                    "name": "A",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 200,
                    "name": "B",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 203,
      "name": "mergeObjects",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 8,
        "file": "mergeObjects.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/mergeObjects.ts#L8"
      },
      "external": false,
      "signatures": [
        {
          "id": 204,
          "name": "mergeObjects",
          "comment": {
            "description": "Merges two objects",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 205,
              "name": "A",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            },
            {
              "id": 206,
              "name": "B",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 207,
              "name": "objTarget",
              "type": {
                "kind": "reference",
                "id": 205,
                "name": "A",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 208,
              "name": "objSource",
              "type": {
                "kind": "reference",
                "id": null,
                "name": "Readonly",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 206,
                    "name": "B",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "intersection",
            "types": [
              {
                "kind": "reference",
                "id": 205,
                "name": "A",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 206,
                "name": "B",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 209,
      "name": "noop",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 2,
        "file": "noop.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/noop.ts#L2"
      },
      "external": false,
      "signatures": [
        {
          "id": 210,
          "name": "noop",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [],
          "returnType": {
            "kind": "intrinsic",
            "type": "void"
          }
        }
      ]
    },
    {
      "id": 211,
      "name": "objectEntries",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "objectEntries.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/objectEntries.ts#L3"
      },
      "external": false,
      "signatures": [
        {
          "id": 212,
          "name": "objectEntries",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 213,
              "name": "T",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 214,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": 213,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 213,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": null,
              "name": "ArrayLike",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "intrinsic",
                  "type": "any"
                }
              ]
            },
            "trueType": {
              "kind": "array",
              "type": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "templateLiteral",
                    "head": "",
                    "tail": [
                      {
                        "type": {
                          "kind": "intrinsic",
                          "type": "number"
                        },
                        "text": ""
                      }
                    ]
                  },
                  {
                    "kind": "indexedAccess",
                    "objectType": {
                      "kind": "reference",
                      "id": 213,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "indexType": {
                      "kind": "intrinsic",
                      "type": "number"
                    }
                  }
                ]
              }
            },
            "falseType": {
              "kind": "array",
              "type": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": 213,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  },
                  {
                    "kind": "indexedAccess",
                    "objectType": {
                      "kind": "reference",
                      "id": 213,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "indexType": {
                      "kind": "typeOperator",
                      "operator": "keyof",
                      "type": {
                        "kind": "reference",
                        "id": 213,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "id": 215,
      "name": "objectKeys",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "objectKeys.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/objectKeys.ts#L3"
      },
      "external": false,
      "signatures": [
        {
          "id": 216,
          "name": "objectKeys",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 217,
              "name": "T",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 218,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": 217,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 217,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": null,
              "name": "ArrayLike",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "intrinsic",
                  "type": "any"
                }
              ]
            },
            "trueType": {
              "kind": "array",
              "type": {
                "kind": "templateLiteral",
                "head": "",
                "tail": [
                  {
                    "type": {
                      "kind": "intrinsic",
                      "type": "number"
                    },
                    "text": ""
                  }
                ]
              }
            },
            "falseType": {
              "kind": "array",
              "type": {
                "kind": "typeOperator",
                "operator": "keyof",
                "type": {
                  "kind": "reference",
                  "id": 217,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            }
          }
        }
      ]
    },
    {
      "id": 219,
      "name": "objectToTuples",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "objectToTuples.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/objectToTuples.ts#L9"
      },
      "external": false,
      "signatures": [
        {
          "id": 220,
          "name": "objectToTuples",
          "comment": {
            "description": "Convert an object to a tuple",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 221,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 222,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": 335,
                "name": "AnyObject",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 221,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 223,
              "name": "prefix",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "tuple",
              "types": [
                {
                  "kind": "typeOperator",
                  "operator": "keyof",
                  "type": {
                    "kind": "reference",
                    "id": 221,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 221,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "typeOperator",
                    "operator": "keyof",
                    "type": {
                      "kind": "reference",
                      "id": 221,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 224,
      "name": "objectValues",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "objectValues.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/objectValues.ts#L3"
      },
      "external": false,
      "signatures": [
        {
          "id": 225,
          "name": "objectValues",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 226,
              "name": "T",
              "type": {
                "kind": "intrinsic",
                "type": "object"
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 227,
              "name": "obj",
              "type": {
                "kind": "reference",
                "id": 226,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 226,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": null,
              "name": "ArrayLike",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "intrinsic",
                  "type": "any"
                }
              ]
            },
            "trueType": {
              "kind": "array",
              "type": {
                "kind": "indexedAccess",
                "objectType": {
                  "kind": "reference",
                  "id": 226,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                },
                "indexType": {
                  "kind": "intrinsic",
                  "type": "number"
                }
              }
            },
            "falseType": {
              "kind": "array",
              "type": {
                "kind": "indexedAccess",
                "objectType": {
                  "kind": "reference",
                  "id": 226,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                },
                "indexType": {
                  "kind": "typeOperator",
                  "operator": "keyof",
                  "type": {
                    "kind": "reference",
                    "id": 226,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            }
          }
        }
      ]
    },
    {
      "id": 228,
      "name": "partition",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 12,
        "file": "partition.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/partition.ts#L12"
      },
      "external": false,
      "signatures": [
        {
          "id": 229,
          "name": "partition",
          "comment": {
            "description": "Partitions `array` into a tuple of two arrays,\nwhere one array contains all elements that satisfies `predicate`,\nand the other contains all elements that do not satisfy `predicate`.",
            "blockTags": [
              {
                "name": "returns",
                "text": "A tuple of two arrays."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 230,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 231,
              "name": "array",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": 230,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            },
            {
              "id": 232,
              "name": "predicate",
              "type": {
                "kind": "reflection",
                "reflection": {
                  "id": 233,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/utilities/src/lib/partition.ts",
                      "line": 12,
                      "character": 52,
                      "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/partition.ts#L12"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 234,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 235,
                          "name": "value",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 230,
                            "name": "T"
                          }
                        },
                        {
                          "id": 236,
                          "name": "index",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "array",
              "type": {
                "kind": "reference",
                "id": 230,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          }
        }
      ]
    },
    {
      "id": 237,
      "name": "pickRandom",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "pickRandom.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/pickRandom.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 238,
          "name": "pickRandom",
          "comment": {
            "description": "Picks a random element from an array",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 239,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 240,
              "name": "array",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 239,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            },
            {
              "id": 241,
              "name": "amount",
              "type": {
                "kind": "literal",
                "value": "1"
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 239,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 242,
          "name": "pickRandom",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 243,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 244,
              "name": "array",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 243,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            },
            {
              "id": 245,
              "name": "amount",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 243,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          }
        }
      ]
    },
    {
      "id": 246,
      "name": "range",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "range.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/range.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 247,
          "name": "range",
          "comment": {
            "description": "Get an array of numbers with the selected range",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 248,
              "name": "min",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 249,
              "name": "max",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 250,
              "name": "step",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "number"
            }
          }
        }
      ]
    },
    {
      "id": 251,
      "name": "regExpEsc",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "regExpEsc.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/regExpEsc.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 252,
          "name": "regExpEsc",
          "comment": {
            "description": "Cleans a string from regex injection",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 253,
              "name": "str",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 254,
      "name": "roundNumber",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 7,
        "file": "roundNumber.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/roundNumber.ts#L7"
      },
      "external": false,
      "signatures": [
        {
          "id": 255,
          "name": "roundNumber",
          "comment": {
            "description": "Properly rounds up or down a number.\nAlso supports strings using an exponent to indicate large or small numbers.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 256,
              "name": "num",
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                ]
              }
            },
            {
              "id": 257,
              "name": "scale",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ]
    },
    {
      "id": 57,
      "name": "sleep",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 35,
        "file": "sleep.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L35"
      },
      "external": false,
      "signatures": [
        {
          "id": 58,
          "name": "sleep",
          "comment": {
            "description": "Sleeps for the specified number of milliseconds.",
            "blockTags": [
              {
                "name": "see",
                "text": "{@link sleepSync} for a synchronous version."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 59,
              "name": "T",
              "type": null,
              "default": {
                "kind": "intrinsic",
                "type": "undefined"
              }
            }
          ],
          "parameters": [
            {
              "id": 60,
              "name": "ms",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 61,
              "name": "value",
              "type": {
                "kind": "reference",
                "id": 59,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 62,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 68,
                "name": "SleepOptions",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 59,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 63,
      "name": "sleepSync",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 64,
        "file": "sleep.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L64"
      },
      "external": false,
      "signatures": [
        {
          "id": 64,
          "name": "sleepSync",
          "comment": {
            "description": "Sleeps for the specified number of milliseconds synchronously.\nWe should probably note that unlike {@link sleep} (which uses CPU tick times),\nsleepSync uses wall clock times, so the precision is near-absolute by comparison.\nThat, and that synchronous means that nothing else in the thread will run for the length of the timer.",
            "blockTags": [
              {
                "name": "see",
                "text": "{@link sleep} for an asynchronous version."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 65,
              "name": "T",
              "type": null,
              "default": {
                "kind": "intrinsic",
                "type": "undefined"
              }
            }
          ],
          "parameters": [
            {
              "id": 66,
              "name": "ms",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 67,
              "name": "value",
              "type": {
                "kind": "reference",
                "id": 65,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 65,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 258,
      "name": "splitText",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "splitText.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/splitText.ts#L9"
      },
      "external": false,
      "signatures": [
        {
          "id": 259,
          "name": "splitText",
          "comment": {
            "description": "Split a string by its latest space character in a range from the character 0 to the selected one.",
            "blockTags": [
              {
                "name": "copyright",
                "text": "2019 Aura Román"
              },
              {
                "name": "license",
                "text": "Apache-2.0"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 260,
              "name": "str",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 261,
              "name": "length",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 262,
              "name": "char",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 71,
      "name": "throttle",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 13,
        "file": "throttle.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L13"
      },
      "external": false,
      "signatures": [
        {
          "id": 72,
          "name": "throttle",
          "comment": {
            "description": "Creates a throttled function that only invokes `func` at most once per\nevery `wait` milliseconds. The throttled function comes with a `flush` method to\nreset the last time the throttled function was invoked.",
            "blockTags": [
              {
                "name": "returns",
                "text": "Returns the new throttled function."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 76,
              "name": "T",
              "type": {
                "kind": "reflection",
                "reflection": {
                  "id": 73,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/utilities/src/lib/throttle.ts",
                      "line": 13,
                      "character": 35,
                      "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L13"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 74,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 75,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 77,
              "name": "func",
              "type": {
                "kind": "reference",
                "id": 76,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 78,
              "name": "wait",
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 79,
            "name": "ThrottleFn",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 76,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 88,
      "name": "toTitleCase",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 35,
        "file": "toTitleCase.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/toTitleCase.ts#L35"
      },
      "external": false,
      "signatures": [
        {
          "id": 89,
          "name": "toTitleCase",
          "comment": {
            "description": "Converts a string to Title Case",
            "blockTags": [
              {
                "name": "description",
                "text": "This is designed to also ensure common Discord PascalCased strings\nare put in their TitleCase {@link baseVariants}.\n\nYou can also provide your own variants to merge with the {@link baseVariants} for\nyour own functionality use."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 90,
              "name": "str",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            },
            {
              "id": 91,
              "name": "options",
              "type": {
                "kind": "reference",
                "id": 92,
                "name": "ToTitleCaseOptions",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 263,
      "name": "tryParseJSON",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "tryParseJSON.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/tryParseJSON.ts#L5"
      },
      "external": false,
      "signatures": [
        {
          "id": 264,
          "name": "tryParseJSON",
          "comment": {
            "description": "Try parse a stringified JSON string.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 265,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "union",
            "types": [
              {
                "kind": "intrinsic",
                "type": "object"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "number"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 267,
      "name": "tryParseURL",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "tryParseURL.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/tryParseURL.ts#L6"
      },
      "external": false,
      "signatures": [
        {
          "id": 268,
          "name": "tryParseURL",
          "comment": {
            "description": "Tries parse a string to a {@link URL} object",
            "blockTags": [
              {
                "name": "returns",
                "text": "an URL object if it was a valid URL or `null` if it was not."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 269,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "returnType": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "URL",
                "packageName": "typescript",
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "null"
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 19,
      "name": "DebounceSettings",
      "comment": {
        "description": "lodash (Custom Build) <https://lodash.com/>\nBuild: `lodash modularize exports=\"npm\" -o ./`\nCopyright jQuery Foundation and other contributors <https://jquery.org/>\nReleased under MIT license <https://lodash.com/license>\nBased on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\nCopyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "debounce.ts",
        "path": "packages/utilities/src/lib/debounce",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L10"
      },
      "external": false,
      "properties": [
        {
          "id": 21,
          "name": "maxWait",
          "comment": {
            "description": "The maximum time `func` is allowed to be delayed before it's invoked",
            "blockTags": [
              {
                "name": "default",
                "text": "null"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 21,
            "file": "debounce.ts",
            "path": "packages/utilities/src/lib/debounce",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L21"
          },
          "parentId": 19,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "number"
              }
            ]
          }
        },
        {
          "id": 20,
          "name": "wait",
          "comment": {
            "description": "The number of milliseconds to delay.",
            "blockTags": [
              {
                "name": "default",
                "text": "0"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "debounce.ts",
            "path": "packages/utilities/src/lib/debounce",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L15"
          },
          "parentId": 19,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 10,
      "name": "DebouncedFunc",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 24,
        "file": "debounce.ts",
        "path": "packages/utilities/src/lib/debounce",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L24"
      },
      "external": false,
      "properties": [],
      "methods": [
        {
          "id": 11,
          "name": "cancel",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 39,
            "file": "debounce.ts",
            "path": "packages/utilities/src/lib/debounce",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L39"
          },
          "parentId": 10,
          "signatures": [
            {
              "id": 12,
              "name": "cancel",
              "comment": {
                "description": "Throw away any pending invocation of the debounced function.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 13,
          "name": "flush",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 48,
            "file": "debounce.ts",
            "path": "packages/utilities/src/lib/debounce",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/debounce/debounce.ts#L48"
          },
          "parentId": 10,
          "signatures": [
            {
              "id": 14,
              "name": "flush",
              "comment": {
                "description": "If there is a pending invocation of the debounced function, invoke it immediately and return\nits return value.\n\nOtherwise, return the value from the last invocation, or undefined if the debounced function\nwas never invoked.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  },
                  {
                    "kind": "reference",
                    "id": 16,
                    "name": "FnReturnType",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 27,
      "name": "GetDeepObjectKeysOptions",
      "comment": {
        "description": "The options for {@link getDeepObjectKeys}",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 68,
        "file": "getDeepObjectKeys.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/getDeepObjectKeys.ts#L68"
      },
      "external": false,
      "properties": [
        {
          "id": 28,
          "name": "arrayKeysIndexStyle",
          "comment": {
            "description": "Whether to use `.${index}.` (`'dotted'`), `[${index}].`, (`'braces-with-dot'`) or `[${index}]` (`'braces'`) to separate array keys",
            "blockTags": [
              {
                "name": "default",
                "text": "'dotted'"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 73,
            "file": "getDeepObjectKeys.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/getDeepObjectKeys.ts#L73"
          },
          "parentId": 27,
          "readonly": false,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "dotted"
              },
              {
                "kind": "literal",
                "value": "braces-with-dot"
              },
              {
                "kind": "literal",
                "value": "braces"
              }
            ]
          }
        }
      ],
      "methods": []
    },
    {
      "id": 68,
      "name": "SleepOptions",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 1,
        "file": "sleep.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L1"
      },
      "external": false,
      "properties": [
        {
          "id": 70,
          "name": "ref",
          "comment": {
            "description": "Set to `false` to indicate that the scheduled `Timeout`\nshould not require the Node.js event loop to remain active.",
            "blockTags": [
              {
                "name": "default",
                "text": "true"
              }
            ],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "sleep.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L12"
          },
          "parentId": 68,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 69,
          "name": "signal",
          "comment": {
            "description": "When provided the corresponding `AbortController` can be used to cancel an asynchronous action.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "sleep.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/sleep.ts#L5"
          },
          "parentId": 68,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "AbortSignal",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 32,
      "name": "Thenable",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "isThenable.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isThenable.ts#L4"
      },
      "external": false,
      "properties": [
        {
          "id": 34,
          "name": "catch",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "isThenable.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isThenable.ts#L6"
          },
          "parentId": 32,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Function",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 33,
          "name": "then",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "isThenable.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/isThenable.ts#L5"
          },
          "parentId": 32,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Function",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 92,
      "name": "ToTitleCaseOptions",
      "comment": {
        "description": "The options to use when converting a string to title case",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 56,
        "file": "toTitleCase.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/toTitleCase.ts#L56"
      },
      "external": false,
      "properties": [
        {
          "id": 93,
          "name": "additionalVariants",
          "comment": {
            "description": "The optional additional variants to use when converting the string",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 60,
            "file": "toTitleCase.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/toTitleCase.ts#L60"
          },
          "parentId": 92,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Record",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 94,
          "name": "caseSensitive",
          "comment": {
            "description": "Whether to convert the string to title case in a case sensitive manner.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 65,
            "file": "toTitleCase.ts",
            "path": "packages/utilities/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/toTitleCase.ts#L65"
          },
          "parentId": 92,
          "readonly": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [],
  "typeAliases": [
    {
      "id": 310,
      "name": "AbstractConstructor",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 64,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L64"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 314,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 311,
          "name": "__type",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/utilities/src/lib/types.ts",
              "line": 64,
              "character": 37,
              "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L64"
            }
          ],
          "signatures": [
            {
              "id": 312,
              "name": "__type",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isAbstract": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A generic abstract constructor without parameters"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 313,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 314,
                "name": "T"
              }
            }
          ]
        }
      }
    },
    {
      "id": 299,
      "name": "AbstractCtor",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 54,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L54"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 303,
          "name": "A",
          "type": {
            "kind": "reference",
            "id": 292,
            "name": "Arr",
            "packageName": null,
            "typeArguments": []
          },
          "default": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          }
        },
        {
          "id": 304,
          "name": "R",
          "type": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      ],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 300,
          "name": "__type",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/utilities/src/lib/types.ts",
              "line": 54,
              "character": 68,
              "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L54"
            }
          ],
          "signatures": [
            {
              "id": 301,
              "name": "__type",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isAbstract": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A generic abstract constructor with parameters"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 302,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 303,
                    "name": "A"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 304,
                "name": "R"
              }
            }
          ]
        }
      }
    },
    {
      "id": 335,
      "name": "AnyObject",
      "comment": {
        "description": "An object that can have any structure, this is an alternative to {@link NonNullObject} for situations where\nthat leads to unexpected type resolutions.\n\nNote that this is still a strictly typed type, it is not simply aliasing `any`",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 106,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L106"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 336,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "mapped",
        "parameter": "K",
        "parameterType": {
          "kind": "typeOperator",
          "operator": "keyof",
          "type": {
            "kind": "reference",
            "id": 336,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        "nameType": null,
        "templateType": {
          "kind": "indexedAccess",
          "objectType": {
            "kind": "reference",
            "id": 336,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          },
          "indexType": {
            "kind": "reference",
            "id": null,
            "name": "K",
            "packageName": null,
            "typeArguments": []
          }
        },
        "readonly": null,
        "optional": null
      }
    },
    {
      "id": 284,
      "name": "ArgumentTypes",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 38,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L38"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 291,
          "name": "F",
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 288,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/utilities/src/lib/types.ts",
                  "line": 38,
                  "character": 36,
                  "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L38"
                }
              ],
              "signatures": [
                {
                  "id": 289,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 290,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ]
            }
          },
          "default": null
        }
      ],
      "type": {
        "kind": "conditional",
        "checkType": {
          "kind": "reference",
          "id": 291,
          "name": "F",
          "packageName": null,
          "typeArguments": []
        },
        "extendsType": {
          "kind": "reflection",
          "reflection": {
            "id": 285,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "packages/utilities/src/lib/types.ts",
                "line": 38,
                "character": 77,
                "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L38"
              }
            ],
            "signatures": [
              {
                "id": 286,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 287,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "inferred",
                      "name": "A"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            ]
          }
        },
        "trueType": {
          "kind": "reference",
          "id": null,
          "name": "A",
          "packageName": null,
          "typeArguments": []
        },
        "falseType": {
          "kind": "intrinsic",
          "type": "never"
        }
      }
    },
    {
      "id": 292,
      "name": "Arr",
      "comment": {
        "description": "A readonly array of any values.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 44,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L44"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "typeOperator",
        "operator": "readonly",
        "type": {
          "kind": "array",
          "type": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      }
    },
    {
      "id": 344,
      "name": "ArrayElementType",
      "comment": {
        "description": "Gets a union type of all the keys that are in an array.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\nconst sample = [1, 2, '3', true];\n\ntype arrayUnion = ArrayElementType<typeof sample>;\n// Expected: string | number | boolean\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 186,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L186"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 345,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "conditional",
        "checkType": {
          "kind": "reference",
          "id": 345,
          "name": "T",
          "packageName": null,
          "typeArguments": []
        },
        "extendsType": {
          "kind": "array",
          "type": {
            "kind": "inferred",
            "type": "K"
          }
        },
        "trueType": {
          "kind": "reference",
          "id": null,
          "name": "K",
          "packageName": null,
          "typeArguments": []
        },
        "falseType": {
          "kind": "conditional",
          "checkType": {
            "kind": "reference",
            "id": 345,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          },
          "extendsType": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "inferred",
                "type": "RK"
              }
            }
          },
          "trueType": {
            "kind": "reference",
            "id": null,
            "name": "RK",
            "packageName": null,
            "typeArguments": []
          },
          "falseType": {
            "kind": "reference",
            "id": 345,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      }
    },
    {
      "id": 328,
      "name": "Awaitable",
      "comment": {
        "description": "ReturnType for a function that can return either a value or a `Promise` with that value",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 79,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L79"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 329,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "PromiseLike",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 329,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            ]
          },
          {
            "kind": "reference",
            "id": 329,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 272,
      "name": "Builtin",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L4"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 271,
            "name": "Primitive",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Function",
            "packageName": "typescript",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Date",
            "packageName": "typescript",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Error",
            "packageName": "typescript",
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": null,
            "name": "RegExp",
            "packageName": "typescript",
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 305,
      "name": "Constructor",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 59,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L59"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 309,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 306,
          "name": "__type",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/utilities/src/lib/types.ts",
              "line": 59,
              "character": 29,
              "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L59"
            }
          ],
          "signatures": [
            {
              "id": 307,
              "name": "__type",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A generic constructor without parameters"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 308,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 309,
                "name": "T"
              }
            }
          ]
        }
      }
    },
    {
      "id": 293,
      "name": "Ctor",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 49,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L49"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 297,
          "name": "A",
          "type": {
            "kind": "reference",
            "id": 292,
            "name": "Arr",
            "packageName": null,
            "typeArguments": []
          },
          "default": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          }
        },
        {
          "id": 298,
          "name": "R",
          "type": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      ],
      "type": {
        "kind": "reflection",
        "reflection": {
          "id": 294,
          "name": "__type",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "packages/utilities/src/lib/types.ts",
              "line": 49,
              "character": 60,
              "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L49"
            }
          ],
          "signatures": [
            {
              "id": 295,
              "name": "__type",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A generic constructor with parameters"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 296,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 297,
                    "name": "A"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 298,
                "name": "R"
              }
            }
          ]
        }
      }
    },
    {
      "id": 282,
      "name": "DeepPartial",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 30,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L30"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 283,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "mapped",
        "parameter": "P",
        "parameterType": {
          "kind": "typeOperator",
          "operator": "keyof",
          "type": {
            "kind": "reference",
            "id": 283,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        "nameType": null,
        "templateType": {
          "kind": "conditional",
          "checkType": {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "reference",
              "id": 283,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "indexType": {
              "kind": "reference",
              "id": null,
              "name": "P",
              "packageName": null,
              "typeArguments": []
            }
          },
          "extendsType": {
            "kind": "array",
            "type": {
              "kind": "inferred",
              "type": "U"
            }
          },
          "trueType": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 282,
              "name": "DeepPartial",
              "packageName": null,
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": null,
                  "name": "U",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          },
          "falseType": {
            "kind": "conditional",
            "checkType": {
              "kind": "indexedAccess",
              "objectType": {
                "kind": "reference",
                "id": 283,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              },
              "indexType": {
                "kind": "reference",
                "id": null,
                "name": "P",
                "packageName": null,
                "typeArguments": []
              }
            },
            "extendsType": {
              "kind": "reference",
              "id": null,
              "name": "ReadonlyArray",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "inferred",
                  "type": "U"
                }
              ]
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "ReadonlyArray",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 282,
                  "name": "DeepPartial",
                  "packageName": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "U",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              ]
            },
            "falseType": {
              "kind": "reference",
              "id": 282,
              "name": "DeepPartial",
              "packageName": null,
              "typeArguments": [
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 283,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "reference",
                    "id": null,
                    "name": "P",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ]
            }
          }
        },
        "readonly": null,
        "optional": "+"
      }
    },
    {
      "id": 273,
      "name": "DeepRequired",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L6"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 275,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "conditional",
        "checkType": {
          "kind": "reference",
          "id": 275,
          "name": "T",
          "packageName": null,
          "typeArguments": []
        },
        "extendsType": {
          "kind": "reference",
          "id": 272,
          "name": "Builtin",
          "packageName": null,
          "typeArguments": []
        },
        "trueType": {
          "kind": "reference",
          "id": null,
          "name": "NonNullable",
          "packageName": "typescript",
          "typeArguments": [
            {
              "kind": "reference",
              "id": 275,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          ]
        },
        "falseType": {
          "kind": "conditional",
          "checkType": {
            "kind": "reference",
            "id": 275,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          },
          "extendsType": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "inferred",
                "type": "K"
              },
              {
                "kind": "inferred",
                "type": "V"
              }
            ]
          },
          "trueType": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 273,
                "name": "DeepRequired",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 273,
                "name": "DeepRequired",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "V",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          },
          "falseType": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 275,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": null,
              "name": "ReadonlyMap",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "inferred",
                  "type": "K"
                },
                {
                  "kind": "inferred",
                  "type": "V"
                }
              ]
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "ReadonlyMap",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 273,
                  "name": "DeepRequired",
                  "packageName": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "K",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                },
                {
                  "kind": "reference",
                  "id": 273,
                  "name": "DeepRequired",
                  "packageName": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": null,
                      "name": "V",
                      "packageName": null,
                      "typeArguments": []
                    }
                  ]
                }
              ]
            },
            "falseType": {
              "kind": "conditional",
              "checkType": {
                "kind": "reference",
                "id": 275,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              },
              "extendsType": {
                "kind": "reference",
                "id": null,
                "name": "WeakMap",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "inferred",
                    "type": "K"
                  },
                  {
                    "kind": "inferred",
                    "type": "V"
                  }
                ]
              },
              "trueType": {
                "kind": "reference",
                "id": null,
                "name": "WeakMap",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 273,
                    "name": "DeepRequired",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "K",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 273,
                    "name": "DeepRequired",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "V",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              },
              "falseType": {
                "kind": "conditional",
                "checkType": {
                  "kind": "reference",
                  "id": 275,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                },
                "extendsType": {
                  "kind": "reference",
                  "id": null,
                  "name": "Set",
                  "packageName": "typescript",
                  "typeArguments": [
                    {
                      "kind": "inferred",
                      "type": "U"
                    }
                  ]
                },
                "trueType": {
                  "kind": "reference",
                  "id": null,
                  "name": "Set",
                  "packageName": "typescript",
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 273,
                      "name": "DeepRequired",
                      "packageName": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": null,
                          "name": "U",
                          "packageName": null,
                          "typeArguments": []
                        }
                      ]
                    }
                  ]
                },
                "falseType": {
                  "kind": "conditional",
                  "checkType": {
                    "kind": "reference",
                    "id": 275,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  "extendsType": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlySet",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "inferred",
                        "type": "U"
                      }
                    ]
                  },
                  "trueType": {
                    "kind": "reference",
                    "id": null,
                    "name": "ReadonlySet",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 273,
                        "name": "DeepRequired",
                        "packageName": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "U",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  },
                  "falseType": {
                    "kind": "conditional",
                    "checkType": {
                      "kind": "reference",
                      "id": 275,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    },
                    "extendsType": {
                      "kind": "reference",
                      "id": null,
                      "name": "WeakSet",
                      "packageName": "typescript",
                      "typeArguments": [
                        {
                          "kind": "inferred",
                          "type": "U"
                        }
                      ]
                    },
                    "trueType": {
                      "kind": "reference",
                      "id": null,
                      "name": "WeakSet",
                      "packageName": "typescript",
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 273,
                          "name": "DeepRequired",
                          "packageName": null,
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": null,
                              "name": "U",
                              "packageName": null,
                              "typeArguments": []
                            }
                          ]
                        }
                      ]
                    },
                    "falseType": {
                      "kind": "conditional",
                      "checkType": {
                        "kind": "reference",
                        "id": 275,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      },
                      "extendsType": {
                        "kind": "reference",
                        "id": null,
                        "name": "Promise",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "inferred",
                            "type": "U"
                          }
                        ]
                      },
                      "trueType": {
                        "kind": "reference",
                        "id": null,
                        "name": "Promise",
                        "packageName": "typescript",
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 273,
                            "name": "DeepRequired",
                            "packageName": null,
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": null,
                                "name": "U",
                                "packageName": null,
                                "typeArguments": []
                              }
                            ]
                          }
                        ]
                      },
                      "falseType": {
                        "kind": "conditional",
                        "checkType": {
                          "kind": "reference",
                          "id": 275,
                          "name": "T",
                          "packageName": null,
                          "typeArguments": []
                        },
                        "extendsType": {
                          "kind": "reflection",
                          "reflection": {
                            "id": 274,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "packages/utilities/src/lib/types.ts",
                                "line": 22,
                                "character": 13,
                                "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L22"
                              }
                            ]
                          }
                        },
                        "trueType": {
                          "kind": "mapped",
                          "parameter": "K",
                          "parameterType": {
                            "kind": "typeOperator",
                            "operator": "keyof",
                            "type": {
                              "kind": "reference",
                              "id": 275,
                              "name": "T",
                              "packageName": null,
                              "typeArguments": []
                            }
                          },
                          "nameType": null,
                          "templateType": {
                            "kind": "reference",
                            "id": 273,
                            "name": "DeepRequired",
                            "packageName": null,
                            "typeArguments": [
                              {
                                "kind": "indexedAccess",
                                "objectType": {
                                  "kind": "reference",
                                  "id": 275,
                                  "name": "T",
                                  "packageName": null,
                                  "typeArguments": []
                                },
                                "indexType": {
                                  "kind": "reference",
                                  "id": null,
                                  "name": "K",
                                  "packageName": null,
                                  "typeArguments": []
                                }
                              }
                            ]
                          },
                          "readonly": null,
                          "optional": "-"
                        },
                        "falseType": {
                          "kind": "reference",
                          "id": null,
                          "name": "NonNullable",
                          "packageName": "typescript",
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": 275,
                              "name": "T",
                              "packageName": null,
                              "typeArguments": []
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "id": 315,
      "name": "FirstArgument",
      "comment": {
        "description": "Gets the first argument of any given function",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 69,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L69"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 320,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "conditional",
        "checkType": {
          "kind": "reference",
          "id": 320,
          "name": "T",
          "packageName": null,
          "typeArguments": []
        },
        "extendsType": {
          "kind": "reflection",
          "reflection": {
            "id": 316,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "packages/utilities/src/lib/types.ts",
                "line": 69,
                "character": 41,
                "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L69"
              }
            ],
            "signatures": [
              {
                "id": 317,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 318,
                    "name": "arg1",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "inferred",
                      "name": "U"
                    }
                  },
                  {
                    "id": 319,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "trueType": {
          "kind": "reference",
          "id": null,
          "name": "U",
          "packageName": null,
          "typeArguments": []
        },
        "falseType": {
          "kind": "intrinsic",
          "type": "unknown"
        }
      }
    },
    {
      "id": 340,
      "name": "Mutable",
      "comment": {
        "description": "Transforms a `readonly` type to be mutable",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\ninterface Sample {\n\tid: string;\n\thobbies: readonly string[];\n}\n\ntype BB = Mutable<Sample>;\n// Expected:\n// {\n//    id: string;\n//    hobbies: string[];\n// }\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 149,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L149"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 341,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "mapped",
        "parameter": "P",
        "parameterType": {
          "kind": "typeOperator",
          "operator": "keyof",
          "type": {
            "kind": "reference",
            "id": 341,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        "nameType": null,
        "templateType": {
          "kind": "conditional",
          "checkType": {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "reference",
              "id": 341,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "indexType": {
              "kind": "reference",
              "id": null,
              "name": "P",
              "packageName": null,
              "typeArguments": []
            }
          },
          "extendsType": {
            "kind": "union",
            "types": [
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "unknown"
                }
              },
              {
                "kind": "reference",
                "id": 333,
                "name": "NonNullObject",
                "packageName": null,
                "typeArguments": []
              }
            ]
          },
          "trueType": {
            "kind": "reference",
            "id": 340,
            "name": "Mutable",
            "packageName": null,
            "typeArguments": [
              {
                "kind": "indexedAccess",
                "objectType": {
                  "kind": "reference",
                  "id": 341,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                },
                "indexType": {
                  "kind": "reference",
                  "id": null,
                  "name": "P",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            ]
          },
          "falseType": {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "reference",
              "id": 341,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            },
            "indexType": {
              "kind": "reference",
              "id": null,
              "name": "P",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        "readonly": "-",
        "optional": null
      }
    },
    {
      "id": 333,
      "name": "NonNullObject",
      "comment": {
        "description": "An object that is non nullable, to bypass TypeScript not easily working with {@link Record}<{@link PropertyKey}, unknown> in various instances.",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 98,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L98"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reflection",
            "reflection": {
              "id": 334,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/utilities/src/lib/types.ts",
                  "line": 98,
                  "character": 28,
                  "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L98"
                }
              ]
            }
          },
          {
            "kind": "intrinsic",
            "type": "object"
          }
        ]
      }
    },
    {
      "id": 331,
      "name": "NonNullableProperties",
      "comment": {
        "description": "Similar to the built in {@link NonNullable}, but properly removes `null` from all keys in the class or interface\nThis does not recurse deeply, for that use {@link DeepRequired}",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 90,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L90"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 332,
          "name": "T",
          "type": null,
          "default": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        }
      ],
      "type": {
        "kind": "mapped",
        "parameter": "P",
        "parameterType": {
          "kind": "typeOperator",
          "operator": "keyof",
          "type": {
            "kind": "reference",
            "id": 332,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        "nameType": null,
        "templateType": {
          "kind": "reference",
          "id": null,
          "name": "NonNullable",
          "packageName": "typescript",
          "typeArguments": [
            {
              "kind": "indexedAccess",
              "objectType": {
                "kind": "reference",
                "id": 332,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              },
              "indexType": {
                "kind": "reference",
                "id": null,
                "name": "P",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        "readonly": null,
        "optional": null
      }
    },
    {
      "id": 330,
      "name": "Nullish",
      "comment": {
        "description": "Type union for the full 2 billion dollar mistake in the JavaScript ecosystem",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 84,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L84"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "literal",
            "value": "null"
          },
          {
            "kind": "intrinsic",
            "type": "undefined"
          }
        ]
      }
    },
    {
      "id": 279,
      "name": "PartialRequired",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 28,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L28"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 280,
          "name": "T",
          "type": null,
          "default": null
        },
        {
          "id": 281,
          "name": "K",
          "type": {
            "kind": "typeOperator",
            "operator": "keyof",
            "type": {
              "kind": "reference",
              "id": 280,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          },
          "default": null
        }
      ],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Partial",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 280,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 281,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 280,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 281,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 337,
      "name": "PickByValue",
      "comment": {
        "description": "Gets all the keys (as a string union) from a type `T` that match value `V`",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\ninterface Sample {\n\tid: string;\n\tname: string | null;\n\tmiddleName?: string;\n\tlastName: string;\n\thobbies: readonly string[];\n}\n\ntype BB = PickByValue<Sample, string>;\n// Expected:\n// \"id\" | \"lastName\"\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 127,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L127"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 338,
          "name": "T",
          "type": null,
          "default": null
        },
        {
          "id": 339,
          "name": "V",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "indexedAccess",
            "objectType": {
              "kind": "mapped",
              "parameter": "P",
              "parameterType": {
                "kind": "typeOperator",
                "operator": "keyof",
                "type": {
                  "kind": "reference",
                  "id": 338,
                  "name": "T",
                  "packageName": null,
                  "typeArguments": []
                }
              },
              "nameType": null,
              "templateType": {
                "kind": "conditional",
                "checkType": {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 338,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "reference",
                    "id": null,
                    "name": "P",
                    "packageName": null,
                    "typeArguments": []
                  }
                },
                "extendsType": {
                  "kind": "reference",
                  "id": 339,
                  "name": "V",
                  "packageName": null,
                  "typeArguments": []
                },
                "trueType": {
                  "kind": "reference",
                  "id": null,
                  "name": "P",
                  "packageName": null,
                  "typeArguments": []
                },
                "falseType": {
                  "kind": "intrinsic",
                  "type": "never"
                }
              },
              "readonly": null,
              "optional": null
            },
            "indexType": {
              "kind": "typeOperator",
              "operator": "keyof",
              "type": {
                "kind": "reference",
                "id": 338,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              }
            }
          },
          {
            "kind": "typeOperator",
            "operator": "keyof",
            "type": {
              "kind": "reference",
              "id": 338,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      }
    },
    {
      "id": 271,
      "name": "Primitive",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 1,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L1"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "intrinsic",
            "type": "string"
          },
          {
            "kind": "intrinsic",
            "type": "number"
          },
          {
            "kind": "intrinsic",
            "type": "boolean"
          },
          {
            "kind": "intrinsic",
            "type": "bigint"
          },
          {
            "kind": "intrinsic",
            "type": "symbol"
          },
          {
            "kind": "intrinsic",
            "type": "undefined"
          },
          {
            "kind": "literal",
            "value": "null"
          }
        ]
      }
    },
    {
      "id": 276,
      "name": "RequiredExcept",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 26,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L26"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 277,
          "name": "T",
          "type": null,
          "default": null
        },
        {
          "id": 278,
          "name": "K",
          "type": {
            "kind": "typeOperator",
            "operator": "keyof",
            "type": {
              "kind": "reference",
              "id": 277,
              "name": "T",
              "packageName": null,
              "typeArguments": []
            }
          },
          "default": null
        }
      ],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": null,
            "name": "Partial",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Pick",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 277,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 278,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          },
          {
            "kind": "reference",
            "id": null,
            "name": "Required",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Omit",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 277,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 278,
                    "name": "K",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "id": 321,
      "name": "SecondArgument",
      "comment": {
        "description": "Gets the second argument of any given function",
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 74,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L74"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 327,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "conditional",
        "checkType": {
          "kind": "reference",
          "id": 327,
          "name": "T",
          "packageName": null,
          "typeArguments": []
        },
        "extendsType": {
          "kind": "reflection",
          "reflection": {
            "id": 322,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "packages/utilities/src/lib/types.ts",
                "line": 74,
                "character": 42,
                "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L74"
              }
            ],
            "signatures": [
              {
                "id": 323,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 324,
                    "name": "arg1",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 325,
                    "name": "arg2",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "inferred",
                      "name": "U"
                    }
                  },
                  {
                    "id": 326,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "trueType": {
          "kind": "reference",
          "id": null,
          "name": "U",
          "packageName": null,
          "typeArguments": []
        },
        "falseType": {
          "kind": "intrinsic",
          "type": "unknown"
        }
      }
    },
    {
      "id": 342,
      "name": "StrictRequired",
      "comment": {
        "description": "Transforms every key in an object to be strictly required, essentially removing `undefined` and `null` from the type.",
        "blockTags": [
          {
            "name": "example",
            "text": "```typescript\ninterface Sample {\n\tid: string;\n\tname: string | null;\n\tmiddleName?: string;\n}\n\ntype BB = StrictRequired<Sample>;\n// Expected:\n// {\n//    id: string;\n//    name: string;\n//    middleName: string;\n// }\n```"
          }
        ],
        "modifierTags": []
      },
      "source": {
        "line": 172,
        "file": "types.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/types.ts#L172"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 343,
          "name": "T",
          "type": null,
          "default": null
        }
      ],
      "type": {
        "kind": "mapped",
        "parameter": "P",
        "parameterType": {
          "kind": "typeOperator",
          "operator": "keyof",
          "type": {
            "kind": "reference",
            "id": 343,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        },
        "nameType": null,
        "templateType": {
          "kind": "reference",
          "id": null,
          "name": "NonNullable",
          "packageName": "typescript",
          "typeArguments": [
            {
              "kind": "indexedAccess",
              "objectType": {
                "kind": "reference",
                "id": 343,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              },
              "indexType": {
                "kind": "reference",
                "id": null,
                "name": "P",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        "readonly": null,
        "optional": "-"
      }
    },
    {
      "id": 79,
      "name": "ThrottleFn",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 1,
        "file": "throttle.ts",
        "path": "packages/utilities/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L1"
      },
      "external": false,
      "typeParameters": [
        {
          "id": 87,
          "name": "T",
          "type": {
            "kind": "reflection",
            "reflection": {
              "id": 84,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/utilities/src/lib/throttle.ts",
                  "line": 1,
                  "character": 33,
                  "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L1"
                }
              ],
              "signatures": [
                {
                  "id": 85,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 86,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            }
          },
          "default": null
        }
      ],
      "type": {
        "kind": "intersection",
        "types": [
          {
            "kind": "reference",
            "id": 87,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reflection",
            "reflection": {
              "id": 80,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 81,
                  "name": "flush",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/utilities/src/lib/throttle.ts",
                      "line": 1,
                      "character": 66,
                      "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L1"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 82,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/utilities/src/lib/throttle.ts",
                          "line": 1,
                          "character": 73,
                          "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L1"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 83,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    81
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/utilities/src/lib/throttle.ts",
                  "line": 1,
                  "character": 64,
                  "url": "https://github.com/sapphiredev/utilities/blob/a237936/packages/utilities/src/lib/throttle.ts#L1"
                }
              ]
            }
          }
        ]
      }
    }
  ]
}