{
  "typeDocJsonParserVersion": "10.2.0",
  "id": 0,
  "name": "@sapphire/result",
  "version": "2.7.3",
  "dependencies": {},
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://raw.githubusercontent.com/sapphiredev/assets/main/banners/SapphireCommunity.png)\n\n# @sapphire/result\n\n**A TypeScript port of Nightly Rust's Result and Option structs**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/result?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/result)\n[![npm](https://img.shields.io/npm/v/@sapphire/result?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/result)\n\n</div>\n\n## Description\n\nWhen having many `try-catch` blocks after one another, or multiple `try-catch` blocks nested in one another then code can become very chaotic very quickly. To alleviate that issue we have made the `@sapphire/result` which offers two structures based on Rust's [`Result<T, E>`](https://doc.rust-lang.org/std/result/index.html) and [`Option<T>`](https://doc.rust-lang.org/std/option/enum.Option.html) with full Nightly coverage and extra convenience methods. This code has been branched off of `@sapphire/framework` into its own package after we saw great success with the code there.\n\n## Features\n\n-   Written in TypeScript\n-   Bundled with esbuild so it can be used in NodeJS and browsers\n-   Offers CommonJS, ESM and UMD bundles\n-   Full feature parity with Nightly Rust's `Result<T, E>` and `Option<T>`\n-   Fully tested\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/result\n```\n\n## Usage\n\n**Note 1:** While this section uses `require`, the imports match 1:1 with ESM imports. For example `const { Result } = require('@sapphire/result')` equals `import { Result } from '@sapphire/result'`.\n\n**Note 2:** For more thorough examples check out the generated documentation on [our website here](https://www.sapphirejs.dev/docs/Documentation/api-utilities/@sapphire/result/)\n\n### Wrapping synchronous `try-catch` blocks\n\n**Old code without `Result.from`:**\n\n```typescript\ntry {\n\tconst returnCode = someFunctionThatMightThrow();\n\n\treturn returnCode;\n} catch (error) {\n\t// Handle the error:\n\tconsole.error(error);\n\treturn null;\n}\n```\n\n**New Code with `Result.from`:**\n\n```typescript\nconst { Result } = require('@sapphire/result');\n\nconst returnCode = Result.from(() => someFunctionThatMightThrow());\n\nreturn returnCode.unwrapOrElse((error) => {\n\tconsole.error(error);\n\treturn null;\n});\n```\n\n### Wrapping asynchronous `try-catch` blocks\n\n**Old code without `Result.fromAsync`:**\n\n```typescript\ntry {\n\tconst returnCode = await someFunctionThatReturnsAPromiseAndMightReject();\n\n\treturn returnCode;\n} catch (error) {\n\t// Handle the error:\n\tconsole.error(error);\n\treturn null;\n}\n```\n\n**New Code with `Result.fromAsync`:**\n\n```typescript\nconst { Result } = require('@sapphire/result');\n\nconst returnCode = await Result.fromAsync(async () => someFunctionThatReturnsAPromiseAndMightReject());\n\nreturn returnCode.unwrapOrElse((error) => {\n\tconsole.error(error);\n\treturn null;\n});\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/utilities/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/utilities\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n[lexure]: https://github.com/1Computer1/lexure\n[1computer1]: https://github.com/1Computer1\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/result@2.7.3](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.7.2...@sapphire/result@2.7.3) - (2025-09-24)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([636a5ee](https://github.com/sapphiredev/utilities/commit/636a5eed0939fd96a82213bf8459846aedd54037)) ([#897](https://github.com/sapphiredev/utilities/pull/897) by @renovate[bot])\n- **deps:** Update all non-major dependencies ([4bc5591](https://github.com/sapphiredev/utilities/commit/4bc55911f95456a2caee10a3588c7b5f1542fb00)) ([#879](https://github.com/sapphiredev/utilities/pull/879) by @renovate[bot])\n- **deps:** Update all non-major dependencies ([bc2f01c](https://github.com/sapphiredev/utilities/commit/bc2f01ce7d6932c9a0e02faa7cc081ecbae9640d)) ([#869](https://github.com/sapphiredev/utilities/pull/869) by @renovate[bot])\n- Result value types losing types after mapping ([44fccf0](https://github.com/sapphiredev/utilities/commit/44fccf0029e31862a03d2097bb1585b3fc3df074)) ([#833](https://github.com/sapphiredev/utilities/pull/833) by @OfficialSirH)\n\n## üìù Documentation\n\n- Update documentation link for usage examples ([e79994f](https://github.com/sapphiredev/utilities/commit/e79994f106295457df404565efdf785306fa5e98)) ([#883](https://github.com/sapphiredev/utilities/pull/883) by @favna)\n\n# [@sapphire/result@2.7.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.7.0...@sapphire/result@2.7.1) - (2024-11-02)\n\n## üêõ Bug Fixes\n\n- **types:** Resolve regression ([a29026e](https://github.com/sapphiredev/utilities/commit/a29026e85a54bdfb36899c7b58ec1fc1e11987e8)) ([#827](https://github.com/sapphiredev/utilities/pull/827) by @kyranet)\n\n# [@sapphire/result@2.7.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.6...@sapphire/result@2.7.0) - (2024-11-02)\n\n## üêõ Bug Fixes\n\n- Move browser imports ([100ffb0](https://github.com/sapphiredev/utilities/commit/100ffb0a2471bb9f74cc580d282d11059e1a0a68)) ([#826](https://github.com/sapphiredev/utilities/pull/826) by @kyranet)\n- Resolve build errors ([809c41c](https://github.com/sapphiredev/utilities/commit/809c41cef869bb9095cd630a416981be6870e83a)) ([#806](https://github.com/sapphiredev/utilities/pull/806) by @kyranet)\n- **deps:** Update all non-major dependencies ([083376a](https://github.com/sapphiredev/utilities/commit/083376aac55094dbeddb5194e8a8f0d794b8cceb)) ([#763](https://github.com/sapphiredev/utilities/pull/763) by @renovate[bot])\n- **deps:** Update all non-major dependencies ([e7fdc5d](https://github.com/sapphiredev/utilities/commit/e7fdc5db3632a7f90292ef3978898da32730343a)) ([#752](https://github.com/sapphiredev/utilities/pull/752) by @renovate[bot])\n\n## üìù Documentation\n\n- **result:** Update readme url for website ([804cc21](https://github.com/sapphiredev/utilities/commit/804cc21e4f71a528b36bcce7ed58d038d3e8ff87))\n\n## üöÄ Features\n\n- **Option:** Add `isNoneOr` ([bb6c889](https://github.com/sapphiredev/utilities/commit/bb6c889127063e8e9eaa6d5808b4bd2fa38cbe92)) ([#824](https://github.com/sapphiredev/utilities/pull/824) by @kyranet)\n- Rewrite `/result` ([4b7c3e6](https://github.com/sapphiredev/utilities/commit/4b7c3e6c354797a2f166a5b97cadd33f1a4a11ca)) ([#808](https://github.com/sapphiredev/utilities/pull/808) by @kyranet)\n\n## üß™ Testing\n\n- **result:** Update test case ([5932a43](https://github.com/sapphiredev/utilities/commit/5932a4375a5b980a4ff91f744941c0463bbe0d66))\n\n# [@sapphire/result@2.6.6](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.6...@sapphire/result@2.6.6) - (2024-01-19)\n\n## üêõ Bug Fixes\n\n- Fixed commonjs typings export mapping (#707) ([216ff02](https://github.com/sapphiredev/utilities/commit/216ff0260d63a9590357f9a5069f1ae2b34eaf5d))\n\n# [@sapphire/result@2.6.5](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.5...@sapphire/result@2.6.5) - (2023-12-04)\n\n## üêõ Bug Fixes\n\n- **result:** Properly split CJS, ESM and IIFE ([1f8f52e](https://github.com/sapphiredev/utilities/commit/1f8f52efd78a76553bd3c0a516c4a629f098496e))\n- Update export mapping for proper ESM/CJS split ([dd0cff8](https://github.com/sapphiredev/utilities/commit/dd0cff8e9b03a15812f25f7a1180501a92422629))\n- **deps:** Update all non-major dependencies (#607) ([9cc8bd0](https://github.com/sapphiredev/utilities/commit/9cc8bd0d4b5d650deab2c913e6c3d713861bae28))\n\n## üìù Documentation\n\n- **readme:** Add link to examples ([e33b5b9](https://github.com/sapphiredev/utilities/commit/e33b5b9408bf0f48f427291de5bd56bfc4250644))\n\n## üß™ Testing\n\n- Update vitest to coverage v8 ([a4bc6e4](https://github.com/sapphiredev/utilities/commit/a4bc6e4f24ea60143a150ecc76fda6484f172ab9))\n\n# [@sapphire/result@2.6.4](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.3...@sapphire/result@2.6.4) - (2023-05-12)\n\n## üêõ Bug Fixes\n\n- **result:** Remove unnecessary tslib import ([ec40daa](https://github.com/sapphiredev/utilities/commit/ec40daa55fce58202f06401bb1a8ee0414f28962))\n\n# [@sapphire/result@2.6.3](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.2...@sapphire/result@2.6.3) - (2023-05-02)\n\n## üè† Refactor\n\n- **result:** Internally rework code to ensure typings can be generated without conflicts ([83d698e](https://github.com/sapphiredev/utilities/commit/83d698e5b0f3e552a3c97e1d9146fc74426b7609))\n\n# [@sapphire/result@2.6.2](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.1...@sapphire/result@2.6.2) - (2023-04-17)\n\n## üêõ Bug Fixes\n\n- **result:** Add tslib dependency to fix __exportStar not being defined ([4c51387](https://github.com/sapphiredev/utilities/commit/4c51387b83ce363752528d45da9ca9772ed80552))\n\n# [@sapphire/result@2.6.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.6.0...@sapphire/result@2.6.1) - (2023-04-10)\n\n## üêõ Bug Fixes\n\n- **result:** Add missing type modifier ([deb93b7](https://github.com/sapphiredev/utilities/commit/deb93b7a27d8f0646544bd6b9e5135903f7b94a7))\n- **deps:** Update all non-major dependencies (#577) ([291dd67](https://github.com/sapphiredev/utilities/commit/291dd6783e57d8f075ce566218ba076ef6c4bbbd))\n- **deps:** Update all non-major dependencies (#545) ([40ca040](https://github.com/sapphiredev/utilities/commit/40ca040a21d8a0949682051a3a974538183a400e))\n- **deps:** Update all non-major dependencies (#544) ([cc78f17](https://github.com/sapphiredev/utilities/commit/cc78f17390c7f3db08af92bf46a5a70a9c11dd5f))\n- **deps:** Update all non-major dependencies (#532) ([8033d1f](https://github.com/sapphiredev/utilities/commit/8033d1ff7a5a1974134c61f424f171cccb2915e1))\n- **deps:** Update all non-major dependencies (#514) ([21b07d5](https://github.com/sapphiredev/utilities/commit/21b07d5db529a0d982647a60de98e46f36f1ac93))\n\n## üìù Documentation\n\n- Add @06000208 as a contributor ([fa3349e](https://github.com/sapphiredev/utilities/commit/fa3349e55ce4ad008785211dec7bf8e2b5d933df))\n- Add @didinele as a contributor ([42ef7b6](https://github.com/sapphiredev/utilities/commit/42ef7b656c48fd0e720119db1d622c8bba2791e9))\n- Add @goestav as a contributor ([0e56a92](https://github.com/sapphiredev/utilities/commit/0e56a92a4e2d0942bfa207f81a8cb03b32312034))\n- Add @CitTheDev as a contributor ([34169ea](https://github.com/sapphiredev/utilities/commit/34169eae1dc0476ccf5a6c4f36e28602a204829e))\n- Add @legendhimslef as a contributor ([059b6f1](https://github.com/sapphiredev/utilities/commit/059b6f1ab5362d46d58624d06c1aa39192b0716f))\n\n# [@sapphire/result@2.6.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.5.0...@sapphire/result@2.6.0) - (2022-10-16)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies (#505) ([6178296](https://github.com/sapphiredev/utilities/commit/617829649e1e4deeee02b14533b5377cd5bc1fb3))\n\n## üìù Documentation\n\n- Add @r-priyam as a contributor ([fb278ba](https://github.com/sapphiredev/utilities/commit/fb278bacf627ec6fc88752eafeb12df5f3177a2c))\n\n## üöÄ Features\n\n- Add `{Option,Result}.{any,all}` (#501) ([4c349bf](https://github.com/sapphiredev/utilities/commit/4c349bf6b3577ad85a1895f90c775c92c4016fa3))\n\n# [@sapphire/result@2.5.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.4.1...@sapphire/result@2.5.0) - (2022-10-01)\n\n## üè† Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## üìù Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n- Update @RealShadowNova as a contributor ([a869ba0](https://github.com/sapphiredev/utilities/commit/a869ba0abfad041610b9115187d426aebe671af6))\n\n## üöÄ Features\n\n- **result:** Add `Result.unwrapRaw` (#475) ([82fe79e](https://github.com/sapphiredev/utilities/commit/82fe79ec6bff4979be615f322b6d1392016d9622))\n\n# [@sapphire/result@2.4.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.4.0...@sapphire/result@2.4.1) - (2022-08-29)\n\n## üß™ Testing\n\n- **result:** Add full coverage (#436) ([3f06ac5](https://github.com/sapphiredev/utilities/commit/3f06ac500b8e96312a5fe04be2817753ce219d37))\n\n# [@sapphire/result@2.4.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.3.3...@sapphire/result@2.4.0) - (2022-08-19)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## üöÄ Features\n\n- Add `intoPromise` (#430) ([715315e](https://github.com/sapphiredev/utilities/commit/715315eb8c3e6bc8e47379a486bac7c737620f92))\n\n# [@sapphire/result@2.4.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.3.3...@sapphire/result@2.4.0) - (2022-08-19)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## üöÄ Features\n\n- Add `intoPromise` (#430) ([715315e](https://github.com/sapphiredev/utilities/commit/715315eb8c3e6bc8e47379a486bac7c737620f92))\n\n# [@sapphire/result@2.3.3](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.3.2...@sapphire/result@2.3.3) - (2022-08-06)\n\n## üêõ Bug Fixes\n\n- **result:** Better `unwrapOr*`, added more tests (#416) ([ec088a8](https://github.com/sapphiredev/utilities/commit/ec088a88a878c7d230c51b148593a85d258075f9))\n\n# [@sapphire/result@2.3.2](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.3.1...@sapphire/result@2.3.2) - (2022-08-05)\n\n## üêõ Bug Fixes\n\n- Revert \"make unwrap methods generic (#415) (v2.3.1)\" ([a963396](https://github.com/sapphiredev/utilities/commit/a9633967d5c4659f26c54fa660796bae18fdaf07))\n\n# [@sapphire/result@2.3.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.3.0...@sapphire/result@2.3.1) - (2022-08-05)\n\n## üêõ Bug Fixes\n\n- **result:** Make unwrap methods generic (#415) ([76e95b3](https://github.com/sapphiredev/utilities/commit/76e95b3c18ecdff53bfa07d541ed1bc1809c7f72))\n\n# [@sapphire/result@2.3.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.2.0...@sapphire/result@2.3.0) - (2022-08-05)\n\n## üöÄ Features\n\n- **result:** Add `inspect*Async` methods (#414) ([fca7a80](https://github.com/sapphiredev/utilities/commit/fca7a8010ae8c368513de2eca56f9f5bfe2756a3))\n\n# [@sapphire/result@2.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.1.1...@sapphire/result@2.2.0) - (2022-08-04)\n\n## üêõ Bug Fixes\n\n- **result:** Resolve Unwrap type issues (#411) ([3c2159c](https://github.com/sapphiredev/utilities/commit/3c2159cac18df0925cd71393698ed7d9f98fd6ef))\n\n## üöÄ Features\n\n- **result:** Export `ok`, `err`, `some`, `none`, and improve docs (#412) ([c978864](https://github.com/sapphiredev/utilities/commit/c978864d91d950c611c073a5c34ef01311e9d8f0))\n\n# [@sapphire/result@2.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.1.0...@sapphire/result@2.1.1) - (2022-07-29)\n\n## üêõ Bug Fixes\n\n- **Result:** Type `IResult.mapInto`'s return correctly (#405) ([14ddf5f](https://github.com/sapphiredev/utilities/commit/14ddf5fc35d1186f9fdc78a3d2b3b465acbd36ac))\n\n# [@sapphire/result@2.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.0.1...@sapphire/result@2.1.0) - (2022-07-29)\n\n## üìù Documentation\n\n- Add @muchnameless as a contributor ([a1221fe](https://github.com/sapphiredev/utilities/commit/a1221fea68506e99591d5d00ec552a07c26833f9))\n- Add @enxg as a contributor ([d2382f0](https://github.com/sapphiredev/utilities/commit/d2382f04e3909cb4ad11798a0a10e683f6cf5383))\n- Add @EvolutionX-10 as a contributor ([efc3a32](https://github.com/sapphiredev/utilities/commit/efc3a320a72ae258996dd62866d206c33f8d4961))\n\n## üöÄ Features\n\n- **Result:** Add new convenience methods (#404) ([7c3ec61](https://github.com/sapphiredev/utilities/commit/7c3ec6168dde544578e5016120c9975009889391))\n\n# [@sapphire/result@2.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@2.0.0...@sapphire/result@2.0.1) - (2022-07-03)\n\n## üè† Refactor\n\n- **result:** Fixed types (#391) ([a1934e1](https://github.com/sapphiredev/utilities/commit/a1934e10cc7d81c71354deb153a4f3bb83e50e65))\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([84af0db](https://github.com/sapphiredev/utilities/commit/84af0db2db749223b036aa99fe19a2e9af5681c6))\n\n# [@sapphire/result@2.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@1.1.1...@sapphire/result@2.0.0) - (2022-06-26)\n\n## üè† Refactor\n\n- Rewrite @sapphire/result from scratch (#364) ([d5b57ff](https://github.com/sapphiredev/utilities/commit/d5b57ff52402bfd261372bf4486e46f39bb41b6d))\n\n   ### üí• Breaking Changes:\n   - Removed `Maybe` type, the substitute is `Option`\n   - Removed `maybe` function, the substitute is `Option.from`\n   - Removed `some` function, the substitute is `Option.some`\n   - Removed `none` function, the substitute is `Option.none`\n   - Removed `isSome` function, the substitute is `option.isSome`\n   - Removed `isNone` function, the substitute is `option.isNone`\n   - Removed `isMaybe` function, the substitute is `Option.is`\n   - Removed `UnwrapMaybeValue` type, the substitute is `Option.UnwrapSome`\n   - Removed `None` type, the substitute is `Option.None`\n   - Removed `Some` type, the substitute is `Option.Some`\n   - Removed `Err` type, the substitute is `Result.Err`\n   - Removed `Ok` type, the substitute is `Result.Ok`\n   - Removed `from` function, the substitute is `Result.from`\n   - Removed `fromAsync` function, the substitute is `Result.fromAsync`\n\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([50cd8de](https://github.com/sapphiredev/utilities/commit/50cd8dea593b6f5ae75571209456b3421e2ca59a))\n\n## üìù Documentation\n\n- Add @MajesticString as a contributor ([295b3e9](https://github.com/sapphiredev/utilities/commit/295b3e9849a4b0fe64074bae02f6426378a303c3))\n- Add @Mzato0001 as a contributor ([c790ef2](https://github.com/sapphiredev/utilities/commit/c790ef25df2d7e22888fa9f8169167aa555e9e19))\n- Add @NotKaskus as a contributor ([00da8f1](https://github.com/sapphiredev/utilities/commit/00da8f199137b9277119823f322d1f2d168d928a))\n- Add @imranbarbhuiya as a contributor ([fb674c2](https://github.com/sapphiredev/utilities/commit/fb674c2c5594d41e71662263553dcb4bac9e37f4))\n- Add @axisiscool as a contributor ([ce1aa31](https://github.com/sapphiredev/utilities/commit/ce1aa316871a88d3663efbdf2a42d3d8dfe6a27f))\n- Add @dhruv-kaushikk as a contributor ([ebbf43f](https://github.com/sapphiredev/utilities/commit/ebbf43f63617daba96e72c50a234bf8b64f6ddc4))\n- Add @Commandtechno as a contributor ([f1d69fa](https://github.com/sapphiredev/utilities/commit/f1d69fabe1ee0abe4be08b19e63dbec03102f7ce))\n- Fix typedoc causing OOM crashes ([63ba41c](https://github.com/sapphiredev/utilities/commit/63ba41c4b6678554b1c7043a22d3296db4f59360))\n\n## üß™ Testing\n\n- Migrate to vitest (#380) ([075ec73](https://github.com/sapphiredev/utilities/commit/075ec73c7a8e3374fad3ada612d37eb4ac36ec8d))\n\n## [1.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/result@1.1.0...@sapphire/result@1.1.1) (2022-04-01)\n\n**Note:** Version bump only for package @sapphire/result\n\n# [1.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/result@1.0.0...@sapphire/result@1.1.0) (2022-03-06)\n\n### Features\n\n-   allow module: NodeNext ([#306](https://github.com/sapphiredev/utilities/issues/306)) ([9dc6dd6](https://github.com/sapphiredev/utilities/commit/9dc6dd619efab879bb2b0b3c9e64304e10a67ed6))\n\n# 1.0.0 (2022-02-06)\n\n### Features\n\n-   **package:** add @sapphire/result package ([#274](https://github.com/sapphiredev/utilities/issues/274)) ([8a86826](https://github.com/sapphiredev/utilities/commit/8a8682607c2aa4c845e814816fa2b4478c23aa84))\n",
  "classes": [
    {
      "id": 1,
      "name": "Option",
      "source": {
        "line": 8,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L8"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "typeParameters": [
        {
          "id": 262,
          "name": "T",
          "constraint": null,
          "default": null
        },
        {
          "id": 263,
          "name": "Exists",
          "constraint": {
            "kind": "intrinsic",
            "type": "boolean"
          },
          "default": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "construct": {
        "id": 41,
        "name": "constructor",
        "source": {
          "line": 18,
          "file": "Option.ts",
          "path": "packages/result/src/lib",
          "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L18"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1,
        "accessibility": "private",
        "parameters": [
          {
            "id": 45,
            "name": "value",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "If",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 44,
                  "name": "Option.Exists",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": 43,
                  "name": "Option.T",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                },
                {
                  "kind": "literal",
                  "value": "null"
                }
              ]
            }
          },
          {
            "id": 46,
            "name": "exists",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 44,
              "name": "Option.Exists",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 47,
          "name": "__STATUS__",
          "source": {
            "line": 13,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L13"
          },
          "comment": {
            "description": "Branded value to ensure `Success` is typed correctly.",
            "blockTags": [],
            "modifierTags": [
              "@internal"
            ]
          },
          "parentId": 1,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 44,
            "name": "Option.Exists",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        },
        {
          "id": 257,
          "name": "[ExistsProperty]",
          "source": {
            "line": 16,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L16"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 44,
            "name": "Option.Exists",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        },
        {
          "id": 256,
          "name": "[ValueProperty]",
          "source": {
            "line": 15,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L15"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "If",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 44,
                "name": "Option.Exists",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 43,
                "name": "Option.T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "null"
              }
            ]
          }
        },
        {
          "id": 2,
          "name": "none",
          "source": {
            "line": 904,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L904"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Option",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              },
              {
                "kind": "literal",
                "value": "false"
              }
            ]
          }
        },
        {
          "id": 261,
          "name": "[toStringTag]",
          "source": {
            "line": 900,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L900"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "If",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 44,
                "name": "Option.Exists",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "Some"
              },
              {
                "kind": "literal",
                "value": "None"
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 258,
          "name": "[iterator]",
          "source": {
            "line": 896,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L896"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 259,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterator over the possibly contained value.\n\nThe iterator yields one value if the result is `Some`, otherwise none.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = some(7);\nfor (const value of x) {\n  console.log(value);\n}\n// Logs 7\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = none;\nfor (const value of x) {\n  console.log(value);\n}\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": " - {@link IOption.iter}\n - {@link https://doc.rust-lang.org/std/option/enum.Option.html#method.iter}\n"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Generator",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 157,
          "name": "and",
          "source": {
            "line": 486,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L486"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 158,
              "name": "and",
              "comment": {
                "description": "Returns `None` if the option is `None`, otherwise returns `option`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<string> = none;\nassert.equal(x.and(y), none);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<string> = some('foo');\nassert.equal(x.and(y), none);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<string> = some('foo');\nassert.equal(x.and(y), some('foo'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<string> = none;\nassert.equal(x.and(y), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.and}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 159,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 160,
                  "name": "option",
                  "comment": {
                    "description": "The option.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 159,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 159,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 288,
                    "name": "None",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 161,
          "name": "andThen",
          "source": {
            "line": 509,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L509"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 162,
              "name": "andThen",
              "comment": {
                "description": "Calls `cb` if the result is `Ok`, otherwise returns the `Err` value of self.\n\nThis function can be used for control flow based on `Result` values.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nfunction fractionOf4(value: number) {\n  return value === 0 ? none : some(4 / value);\n}\n\nassert.equal(some(2).andThen(fractionOf4), some(4));\nassert.equal(some(0).andThen(fractionOf4), none);\nassert.equal(none.andThen(fractionOf4), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 163,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 164,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 166,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 167,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 163,
                          "name": "OutputOption",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 163,
                "name": "OutputOption",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 195,
          "name": "contains",
          "source": {
            "line": 661,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L661"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 196,
              "name": "contains",
              "comment": {
                "description": "Returns `true` if the option is a `Some` value containing the given value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nassert.equal(x.contains(2), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(3);\nassert.equal(x.contains(2), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nassert.equal(x.contains(2), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.contains}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 197,
                  "name": "Value",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 198,
                  "name": "value",
                  "comment": {
                    "description": "The value to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "If",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "Option.Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 197,
                        "name": "Value",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "unknown"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 286,
                  "name": "Some",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 197,
                      "name": "Value",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 235,
          "name": "eq",
          "source": {
            "line": 827,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L827"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 236,
              "name": "eq",
              "comment": {
                "description": "Checks whether or not `other` equals with self.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 237,
                  "name": "OtherValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 238,
                  "name": "OtherExists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 239,
                  "name": "other",
                  "comment": {
                    "description": "The other option to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 237,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 238,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 1,
                  "name": "Option",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 237,
                      "name": "OtherValue",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 238,
                      "name": "OtherExists",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 78,
          "name": "expect",
          "source": {
            "line": 139,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L139"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 79,
              "name": "expect",
              "comment": {
                "description": "Returns the contained `Some` value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some(2);\nassert.equal(x.expect('Whoops!'), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.throws(() => x.expect('Whoops!'), {\n  name: 'OptionError',\n  message: 'Whoops'\n});\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.expect}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 80,
                  "name": "message",
                  "comment": {
                    "description": "The message for the error.\nIf the value is an `Err`, it throws an {@link OptionError} with the given message.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 183,
          "name": "filter",
          "source": {
            "line": 633,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L633"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 184,
              "name": "filter",
              "comment": {
                "description": "Returns None if the option is None, otherwise calls `predicate` with the wrapped value and returns:\n\n- `Some(t)` if `predicate` returns `true` (where t is the wrapped value), and\n- `None` if `predicate` returns `false`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nfunction isEven(value: number) {\n  return n % 2 === 0;\n}\n\nassert.equal(none.filter(isEven), none);\nassert.equal(some(3).filter(isEven), none);\nassert.equal(some(4).filter(isEven), some(4));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.filter}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 185,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 186,
                  "name": "predicate",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 188,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 189,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "predicate",
                          "asserts": false,
                          "name": "value",
                          "type": {
                            "kind": "reference",
                            "id": 185,
                            "name": "R",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 185,
                    "name": "R",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            },
            {
              "id": 190,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 191,
                  "name": "predicate",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 193,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 194,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "boolean"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 228,
          "name": "flatten",
          "source": {
            "line": 798,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L798"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 229,
              "name": "flatten",
              "comment": {
                "description": "Converts from `Result<Result<T, E>, E>` to `Result<T, E>`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<Option<number>> = some(some(6));\nassert.equal(x.flatten(), some(6));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<Option<number>> = some(none);\nassert.equal(x.flatten(), none);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<Option<number>> = none;\nassert.equal(x.flatten(), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.flatten}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 230,
                  "name": "InnerOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                },
                {
                  "id": 231,
                  "name": "Exists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 232,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 230,
                        "name": "InnerOption",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 231,
                        "name": "Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 231,
                    "name": "Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 230,
                    "name": "InnerOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 288,
                    "name": "None",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 133,
          "name": "inspect",
          "source": {
            "line": 353,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L353"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 134,
              "name": "inspect",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained value (if `Some`).",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspectAsync} for the awaitable version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nsome(2).inspect(console.log);\n// Logs: 2\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nnone.inspect(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.inspect}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 135,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 137,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 138,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "void"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "this"
              }
            }
          ]
        },
        {
          "id": 139,
          "name": "inspectAsync",
          "source": {
            "line": 376,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L376"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 140,
              "name": "inspectAsync",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained value (if `Some`).",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspect} for the sync version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait some(2).inspectAsync(console.log);\n// Logs: 2\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait none.inspectAsync(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 141,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 143,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 144,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "unknown"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "Option.Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 233,
          "name": "intoPromise",
          "source": {
            "line": 813,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L813"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 234,
              "name": "intoPromise",
              "comment": {
                "description": "Returns a `Promise` object with the awaited value (if `Some`).",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nlet x = some(Promise.resolve(3));\nassert.equal(await x.intoPromise(), some(3));\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Awaited",
                        "packageName": "typescript",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 43,
                            "name": "Option.T",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "Option.Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 63,
          "name": "isNone",
          "source": {
            "line": 87,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L87"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 64,
              "name": "isNone",
              "comment": {
                "description": "Returns `true` if the option is a `None` value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nassert.equal(x.isNone(), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nassert.equal(x.isNone(), true);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.is_none}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 288,
                  "name": "None",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 65,
          "name": "isNoneOr",
          "source": {
            "line": 112,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L112"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 66,
              "name": "isNoneOr",
              "comment": {
                "description": "Returns `true` if the option is a `None` value or the value inside of it matches a predicate.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nassert.equal(x.isNoneOr((x) => x > 1), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(0);\nassert.equal(x.isNoneOr((x) => x > 1), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nassert.equal(x.isNoneOr((x) => x > 1), true);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.is_none_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 67,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 68,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 70,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 71,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "predicate",
                          "asserts": false,
                          "name": "value",
                          "type": {
                            "kind": "reference",
                            "id": 67,
                            "name": "R",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "union",
                  "types": [
                    {
                      "kind": "reference",
                      "id": 288,
                      "name": "None",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "intrinsic",
                          "type": "any"
                        }
                      ]
                    },
                    {
                      "kind": "reference",
                      "id": 286,
                      "name": "Some",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 67,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "id": 72,
              "name": "isNoneOr",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 73,
                  "name": "R",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 74,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 76,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 77,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 73,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 73,
                    "name": "R",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "literal",
                    "value": "true"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 48,
          "name": "isSome",
          "source": {
            "line": 39,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L39"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 49,
              "name": "isSome",
              "comment": {
                "description": "Returns `true` if the option is a `Some` value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nassert.equal(x.isSome(), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nassert.equal(x.isSome(), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.is_some}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 286,
                  "name": "Some",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 43,
                      "name": "Option.T",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 50,
          "name": "isSomeAnd",
          "source": {
            "line": 65,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L65"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 51,
              "name": "isSomeAnd",
              "comment": {
                "description": "Returns `true` if the option is a `Some` and the value inside of it matches a predicate.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nassert.equal(x.isSomeAnd((x) => x > 1), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(0);\nassert.equal(x.isSomeAnd((x) => x > 1), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nassert.equal(x.isSomeAnd((x) => x > 1), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.is_some_and}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 52,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 53,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 55,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 56,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "predicate",
                          "asserts": false,
                          "name": "value",
                          "type": {
                            "kind": "reference",
                            "id": 52,
                            "name": "R",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 286,
                  "name": "Some",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 52,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 57,
              "name": "isSomeAnd",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 58,
                  "name": "R",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 59,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 61,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 62,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 58,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "intersection",
                  "types": [
                    {
                      "kind": "reference",
                      "id": 286,
                      "name": "Some",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 58,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      ]
                    },
                    {
                      "kind": "reference",
                      "id": 58,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 155,
          "name": "iter",
          "source": {
            "line": 451,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L451"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 156,
              "name": "iter",
              "comment": {
                "description": "Returns an iterator over the possibly contained value.\n\nThe iterator yields one value if the result is `Some`, otherwise none.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = some(7);\nfor (const value of x) {\n  console.log(value);\n}\n// Logs 7\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = none;\nfor (const value of x) {\n  console.log(value);\n}\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": " - {@link Option.iter}\n - {@link https://doc.rust-lang.org/std/option/enum.Option.html#method.iter}\n"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Generator",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 93,
          "name": "map",
          "source": {
            "line": 227,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L227"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 94,
              "name": "map",
              "comment": {
                "description": "Maps an `Option<T>` to `Option<U>` by applying a function to a contained value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst maybeSomeString = some('Hello, world!');\nconst maybeSomeLength = maybeSomeString.map((value) => value.length);\n\nassert.equal(maybeSomeLength, some(13));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.map}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 95,
                  "name": "U",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 96,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 98,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 99,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 95,
                          "name": "U",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 95,
                    "name": "U",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 100,
          "name": "mapInto",
          "source": {
            "line": 254,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L254"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 101,
              "name": "mapInto",
              "comment": {
                "description": "Maps a `Some<T>` to the returned `Option<U>` by applying a function to a contained value, leaving `None`\nuntouched.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst input: Option<string> = some('Hello, world!');\nconst result = input.mapInto((value) => some(value.length));\n\nassert.equal(result, some(13));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst input: Option<string> = none;\nconst result = input.mapInto((value) => some(value.length));\n\nassert.equal(result, none);\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 102,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 103,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 105,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 106,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 102,
                          "name": "OutputOption",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 102,
                "name": "OutputOption",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 127,
          "name": "mapNoneInto",
          "source": {
            "line": 331,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L331"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 128,
              "name": "mapNoneInto",
              "comment": {
                "description": "Maps a `None` to the returned `Option<U>` by applying a function to a contained value, leaving `Some<T>`\nuntouched.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst input: Option<string> = some('Hello, world!');\nconst result = input.mapNoneInto(() => some(13));\n\nassert.equal(result, some('Hello, world!'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst input: Option<string> = none;\nconst result = input.mapNoneInto(() => some(13));\n\nassert.equal(result, some(13));\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 129,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 130,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 132,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [],
                        "returnType": {
                          "kind": "reference",
                          "id": 129,
                          "name": "OutputOption",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 129,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 107,
          "name": "mapOr",
          "source": {
            "line": 280,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L280"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 108,
              "name": "mapOr",
              "comment": {
                "description": "Returns the provided default result (if none), or applies a function to the contained value (if any).\n\nArguments passed to `mapOr` are eagerly evaluated; if you are passing the result of a function call, it is\nrecommended to use {@link mapOrElse}, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some('hello');\nassert.equal(x.mapOr(42, (value) => value.length), 5);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.equal(x.mapOr(42, (value) => value.length), 42);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 109,
                  "name": "MappedOutputValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 110,
                  "name": "DefaultOutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 111,
                  "name": "defaultValue",
                  "comment": {
                    "description": "The default value.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 110,
                    "name": "DefaultOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 112,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 114,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 115,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 109,
                          "name": "MappedOutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 109,
                    "name": "MappedOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 110,
                    "name": "DefaultOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 116,
          "name": "mapOrElse",
          "source": {
            "line": 305,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L305"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 117,
              "name": "mapOrElse",
              "comment": {
                "description": "Computes a default function result (if none), or applies a different function to the contained value (if any).",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some('hello');\nassert.equal(x.mapOrElse(() => 42, (value) => value.length), 5);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.equal(x.mapOrElse(() => 42, (value) => value.length), 42);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 118,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 119,
                  "name": "OutputNone",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 120,
                  "name": "defaultValue",
                  "comment": {
                    "description": "The default value.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 122,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [],
                        "returnType": {
                          "kind": "reference",
                          "id": 119,
                          "name": "OutputNone",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                },
                {
                  "id": 123,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 125,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 126,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 118,
                          "name": "OutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 118,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 119,
                    "name": "OutputNone",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 243,
          "name": "match",
          "source": {
            "line": 863,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L863"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 244,
              "name": "match",
              "comment": {
                "description": "Runs `ok` function if self is `Ok`, otherwise runs `err` function.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst option = some(4).match({\n  some: (v) => v,\n  none: () => 0\n});\nassert.equal(option, 4);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst option = none.match({\n  some: (v) => v,\n  none: () => 0\n});\nassert.equal(option, 0);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 245,
                  "name": "SomeValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 246,
                  "name": "NoneValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 247,
                  "name": "branches",
                  "comment": {
                    "description": "The branches to match.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": null,
                    "methods": [
                      {
                        "id": 253,
                        "signatures": [
                          {
                            "id": 254,
                            "name": "none",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [
                              {
                                "id": 255,
                                "name": "this",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": 288,
                                  "name": "None",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "intrinsic",
                                      "type": "any"
                                    }
                                  ]
                                }
                              }
                            ],
                            "returnType": {
                              "kind": "reference",
                              "id": 246,
                              "name": "NoneValue",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ]
                      },
                      {
                        "id": 249,
                        "signatures": [
                          {
                            "id": 250,
                            "name": "some",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [
                              {
                                "id": 251,
                                "name": "this",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": 286,
                                  "name": "Some",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 43,
                                      "name": "Option.T",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    }
                                  ]
                                }
                              },
                              {
                                "id": 252,
                                "name": "value",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": 43,
                                  "name": "Option.T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                }
                              }
                            ],
                            "returnType": {
                              "kind": "reference",
                              "id": 245,
                              "name": "SomeValue",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 245,
                    "name": "SomeValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 246,
                    "name": "NoneValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 240,
          "name": "ne",
          "source": {
            "line": 838,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L838"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 241,
              "name": "ne",
              "comment": {
                "description": "Checks whether or not `other` doesn't equal with self.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#method.ne}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 242,
                  "name": "other",
                  "comment": {
                    "description": "The other option to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 145,
          "name": "okOr",
          "source": {
            "line": 401,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L401"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 146,
              "name": "okOr",
              "comment": {
                "description": "Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and `None` to `Err(err)`.\n\nArguments passed to `okOr` are eagerly evaluated; if you are passing the result of a function call, it is\nrecommended to use {@link okOrElse}, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some('hello');\nassert.equal(x.okOr(0), ok('hello'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.equal(x.okOr(0), err(0));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 147,
                  "name": "ErrorValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 148,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 147,
                    "name": "ErrorValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 147,
                        "name": "ErrorValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 149,
          "name": "okOrElse",
          "source": {
            "line": 422,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L422"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 150,
              "name": "okOrElse",
              "comment": {
                "description": "Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to `Ok(v)` and `None` to `Err(err())`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some('hello');\nassert.equal(x.okOrElse(() => 0), ok('hello'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.equal(x.okOrElse(() => 0), err(0));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 151,
                  "name": "ErrorValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 152,
                  "name": "cb",
                  "comment": {
                    "description": "The error to be used.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 154,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [],
                        "returnType": {
                          "kind": "reference",
                          "id": 151,
                          "name": "ErrorValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 151,
                        "name": "ErrorValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 168,
          "name": "or",
          "source": {
            "line": 545,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L545"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 169,
              "name": "or",
              "comment": {
                "description": "Returns the option if it contains a value, otherwise returns `option`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<number> = none;\nassert.equal(x.or(y), some(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<number> = some(100);\nassert.equal(x.or(y), some(100));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<number> = some(100);\nassert.equal(x.or(y), some(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<number> = none;\nassert.equal(x.or(y), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 170,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 171,
                  "name": "option",
                  "comment": {
                    "description": "The option.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 170,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 170,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 172,
          "name": "orElse",
          "source": {
            "line": 567,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L567"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 173,
              "name": "orElse",
              "comment": {
                "description": "Calls `cb` if the result is `Ok`, otherwise returns the `Err` value of self.\n\nThis function can be used for control flow based on `Result` values.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst nobody = (): Option<string> => none;\nconst vikings = (): Option<string> => some('vikings');\n\nassert.equal(some('barbarians').orElse(vikings), some('barbarians'));\nassert.equal(none.orElse(vikings), some('vikings'));\nassert.equal(none.orElse(nobody), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 174,
                  "name": "OutputOption",
                  "constraint": {
                    "kind": "reference",
                    "id": 269,
                    "name": "Option.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 175,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 177,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [],
                        "returnType": {
                          "kind": "reference",
                          "id": 174,
                          "name": "OutputOption",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 174,
                    "name": "OutputOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 221,
          "name": "transpose",
          "source": {
            "line": 768,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L768"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 222,
              "name": "transpose",
              "comment": {
                "description": "Transposes an `Option` of a `Result` into a `Result` of an `Option`.\n\n`none` will be mapped to `ok(none)`. `some(ok(v))` and `some(err(e))` will be mapped to `ok(some(v))` and `err(e)`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<Result<number, Error>> = some(ok(5));\nconst y: Result<Option<number>, Error> = ok(some(5));\nassert.equal(x.transpose(), y);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.transpose}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 223,
                  "name": "ResultValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 224,
                  "name": "ResultError",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 225,
                  "name": "ResultSuccess",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                },
                {
                  "id": 226,
                  "name": "Exists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 227,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 316,
                        "name": "Result",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 223,
                            "name": "ResultValue",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": 224,
                            "name": "ResultError",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": 225,
                            "name": "ResultSuccess",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 226,
                        "name": "Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 226,
                    "name": "Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 286,
                        "name": "Some",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 223,
                            "name": "ResultValue",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 224,
                        "name": "ResultError",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 225,
                        "name": "ResultSuccess",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 288,
                        "name": "None",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "unwrap",
          "source": {
            "line": 168,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L168"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 82,
              "name": "unwrap",
              "comment": {
                "description": "Returns the contained `Some` value.\n\nIf the value is an `Err`, it throws an {@link OptionError} with the message.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOrElse}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = some(2);\nassert.equal(x.unwrap(), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<string> = none;\nassert.throws(() => x.unwrap(), {\n  name: 'OptionError',\n  message: 'Unwrap failed'\n});\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 83,
          "name": "unwrapOr",
          "source": {
            "line": 191,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L191"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 84,
              "name": "unwrapOr",
              "comment": {
                "description": "Returns the contained `Some` value or a provided default.\n\nArguments passed to `unwrapOr` are eagerly evaluated; if you are passing the result of a function call, it is\nrecommended to use {@link unwrapOrElse}, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nassert.equal(some(2).unwrapOr(0), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nassert.equal(none.unwrapOr(0), 0);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 85,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 86,
                  "name": "defaultValue",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 85,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 85,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 87,
          "name": "unwrapOrElse",
          "source": {
            "line": 209,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L209"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 88,
              "name": "unwrapOrElse",
              "comment": {
                "description": "Returns the contained Some value or computes it from a closure.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nassert.equal(some(2).unwrapOrElse(() => 0), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nassert.equal(none.unwrapOrElse(() => 0), 0);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 89,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 90,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 92,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [],
                        "returnType": {
                          "kind": "reference",
                          "id": 89,
                          "name": "OutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 43,
                    "name": "Option.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 89,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 215,
          "name": "unzip",
          "source": {
            "line": 744,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L744"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 216,
              "name": "unzip",
              "comment": {
                "description": "Unzips an option containing a tuple of two options.\n\nIf self is `Some([a, b])` this method returns `[Some(a), Some(b)]`. Otherwise, `[None, None]` is returned.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<[number, string]> = some([1, 'hi']);\nassert.equal(x.unzip(), [some(1), some('hi')]);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<[number, string]> = none;\nassert.equal(x.unzip(), [none, none]);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.unzip}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 217,
                  "name": "Value0",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 218,
                  "name": "Value1",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 219,
                  "name": "Exists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 220,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "typeOperator",
                        "operator": "readonly",
                        "type": {
                          "kind": "tuple",
                          "types": [
                            {
                              "kind": "reference",
                              "id": 217,
                              "name": "Value0",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": 218,
                              "name": "Value1",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          ]
                        }
                      },
                      {
                        "kind": "reference",
                        "id": 219,
                        "name": "Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 217,
                        "name": "Value0",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 219,
                        "name": "Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 218,
                        "name": "Value1",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 219,
                        "name": "Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 178,
          "name": "xor",
          "source": {
            "line": 602,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L602"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 179,
              "name": "xor",
              "comment": {
                "description": "Returns `Some` if exactly one of self or `option` is `Some`, otherwise returns `None`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<number> = none;\nassert.equal(x.xor(y), some(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<number> = some(2);\nassert.equal(x.xor(y), some(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = some(2);\nconst y: Option<number> = some(2);\nassert.equal(x.xor(y), none);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Option<number> = none;\nconst y: Option<number> = none;\nassert.equal(x.xor(y), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.xor}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 180,
                  "name": "OtherValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 181,
                  "name": "OtherExists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 182,
                  "name": "option",
                  "comment": {
                    "description": "The option to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 180,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 181,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 44,
                    "name": "Option.Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "If",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 181,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 288,
                        "name": "None",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 286,
                        "name": "Some",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 43,
                            "name": "Option.T",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 180,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 181,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 199,
          "name": "zip",
          "source": {
            "line": 683,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L683"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 200,
              "name": "zip",
              "comment": {
                "description": "Zips self with another `Option`.\n\nIf self is `Some(s)` and `other` is `Some(o)`, this method returns `Some([s, o])`. Otherwise, `None` is returned.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = some(1);\nconst y = some('hi');\nconst z = none;\n\nassert.equal(x.zip(y), some([1, 'hi']));\nassert.equal(x.zip(z), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.zip}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 201,
                  "name": "OtherValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 202,
                  "name": "OtherExists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 203,
                  "name": "other",
                  "comment": {
                    "description": "The option to zip self with.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 201,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 202,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 43,
                        "name": "Option.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 201,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "If",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "Option.Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 202,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "literal",
                        "value": "false"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 204,
          "name": "zipWith",
          "source": {
            "line": 718,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L718"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 205,
              "name": "zipWith",
              "comment": {
                "description": "Zips self and another `Option` with function `f`.\n\nIf self is `Some(s)` and other is `Some(o)`, this method returns `Some(f(s, o))`. Otherwise, `None` is returned.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nclass Point {\n  public readonly x: number;\n  public readonly y: number;\n\n  public constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nconst x = some(17.5);\nconst y = some(42.7);\n\nassert.equal(x.zipWith(y, (s, o) => new Point(s, o)), some(new Point(17.5, 42.7)));\nassert.equal(x.zipWith(none, (s, o) => new Point(s, o)), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/option/enum.Option.html#method.zip_with}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 206,
                  "name": "OtherValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 207,
                  "name": "OtherExists",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                },
                {
                  "id": 208,
                  "name": "ReturnValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 209,
                  "name": "other",
                  "comment": {
                    "description": "The option to zip self with.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 206,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 207,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                },
                {
                  "id": 210,
                  "name": "f",
                  "comment": {
                    "description": "The function that computes the returned value.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 212,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 213,
                            "name": "value0",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 43,
                              "name": "Option.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          },
                          {
                            "id": 214,
                            "name": "value1",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 206,
                              "name": "OtherValue",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 208,
                          "name": "ReturnValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 208,
                    "name": "ReturnValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "If",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "Option.Exists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 207,
                        "name": "OtherExists",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "literal",
                        "value": "false"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 38,
          "name": "[hasInstance]",
          "source": {
            "line": 929,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L929"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 39,
              "name": "[hasInstance]",
              "comment": {
                "description": "Checks if the `instance` object is an instance of `Option`, or if it is a `Option`-like object. This override\nexists to interoperate with other versions of this class, such as the one coming from another version of this\nlibrary or from a different build.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Whether or not the instance is a `Option`."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Option } from '@sapphire/result';\nconst { some } = require('@sapphire/result');\n\nsome(2) instanceof Option; // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 40,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 28,
          "name": "all",
          "source": {
            "line": 1009,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1009"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 29,
              "name": "all",
              "comment": {
                "description": "Creates an {@link Ok} that is the combination of all collected {@link Ok} values as an array, or the first\n{@link Err} encountered.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A new {@link Result}."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 30,
                  "name": "Entries",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 269,
                        "name": "Option.Any",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 31,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 32,
                  "name": "results",
                  "comment": {
                    "description": "An array of {@link Result}s.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 30,
                    "name": "Entries",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 275,
                    "name": "Option.UnwrapSomeArray",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 30,
                        "name": "Entries",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "any",
          "source": {
            "line": 1027,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1027"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 34,
              "name": "any",
              "comment": {
                "description": "Returns the first encountered {@link Some}, or a {@link None} if none was found.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A new {@link Option}."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 35,
                  "name": "Entries",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 269,
                        "name": "Option.Any",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 36,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 37,
                  "name": "results",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 35,
                    "name": "Entries",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 273,
                    "name": "Option.UnwrapSome",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "indexedAccess",
                        "objectType": {
                          "kind": "reference",
                          "id": 35,
                          "name": "Entries",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        },
                        "indexType": {
                          "kind": "intrinsic",
                          "type": "number"
                        }
                      }
                    ]
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 14,
          "name": "from",
          "source": {
            "line": 978,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L978"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 15,
              "name": "from",
              "comment": {
                "description": "Creates a {@link Result} out of a callback.",
                "blockTags": [
                  {
                    "name": "typeparam",
                    "text": "T The result's type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error's type."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 16,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 17,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 18,
                  "name": "op",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 283,
                        "name": "OptionResolvable",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 16,
                            "name": "T",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reflection",
                        "properties": null,
                        "signatures": [
                          {
                            "id": 20,
                            "name": "__type",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [],
                            "returnType": {
                              "kind": "reference",
                              "id": 283,
                              "name": "OptionResolvable",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 16,
                                  "name": "T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "boolean"
                                }
                              ]
                            }
                          }
                        ],
                        "methods": null
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 16,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 21,
          "name": "fromAsync",
          "source": {
            "line": 993,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L993"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 22,
              "name": "fromAsync",
              "comment": {
                "description": "Creates a {@link Result} out of a promise or async callback.",
                "blockTags": [
                  {
                    "name": "typeparam",
                    "text": "T The result's type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error's type."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 23,
                  "name": "T",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 24,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 25,
                  "name": "op",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Awaitable",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 283,
                            "name": "OptionResolvable",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": 23,
                                "name": "T",
                                "packageName": "@sapphire/result",
                                "packageVersion": null,
                                "typeArguments": []
                              },
                              {
                                "kind": "intrinsic",
                                "type": "boolean"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "reflection",
                        "properties": null,
                        "signatures": [
                          {
                            "id": 27,
                            "name": "__type",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [],
                            "returnType": {
                              "kind": "reference",
                              "id": null,
                              "name": "Awaitable",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 283,
                                  "name": "OptionResolvable",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 23,
                                      "name": "T",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "methods": null
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 23,
                        "name": "T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 8,
          "name": "is",
          "source": {
            "line": 949,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L949"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 9,
              "name": "is",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "deprecated",
                    "text": "Use {@link Option.isOption} instead.\n\nChecks if the `instance` object is an instance of `Option`, or if it is a `Option`-like object."
                  },
                  {
                    "name": "returns",
                    "text": "true if the instance is a `Option` or a `Option`-like object, false otherwise."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Option } from '@sapphire/result';\nconst { some } = require('@sapphire/result');\n\nOption.isOption(some(2)); // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 10,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "instance",
                "type": {
                  "kind": "reference",
                  "id": 269,
                  "name": "Option.Any",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 11,
          "name": "isOption",
          "source": {
            "line": 967,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L967"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 12,
              "name": "isOption",
              "comment": {
                "description": "Checks if the `instance` object is an instance of `Option`, or if it is a `Option`-like object.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "true if the instance is a `Option` or a `Option`-like object, false otherwise."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Option } from '@sapphire/result';\nconst { some } = require('@sapphire/result');\n\nOption.isOption(some(2)); // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 13,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "instance",
                "type": {
                  "kind": "reference",
                  "id": 269,
                  "name": "Option.Any",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 3,
          "name": "some",
          "source": {
            "line": 907,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L907"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 4,
              "name": "some",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 5,
                  "name": "T",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "undefined"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 6,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 7,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": 5,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 286,
                "name": "Some",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 5,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 295,
      "name": "OptionError",
      "source": {
        "line": 1,
        "file": "OptionError.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/OptionError.ts#L1"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Error",
        "packageName": "typescript",
        "packageVersion": null,
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 305,
        "name": "constructor",
        "source": {
          "line": 1082,
          "file": "lib.es5.d.ts",
          "path": "node_modules/typescript/lib",
          "url": null
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 295,
        "accessibility": "public",
        "parameters": [
          {
            "id": 307,
            "name": "message",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": true,
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        ]
      },
      "properties": [
        {
          "id": 315,
          "name": "cause",
          "source": {
            "line": 24,
            "file": "lib.es2022.error.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 313,
          "name": "message",
          "source": {
            "line": 1077,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 314,
          "name": "stack",
          "source": {
            "line": 1078,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 304,
          "name": "stackTraceLimit",
          "source": {
            "line": 68,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The `Error.stackTraceLimit` property specifies the number of stack frames\ncollected by a stack trace (whether generated by `new Error().stack` or\n`Error.captureStackTrace(obj)`).\n\nThe default value is `10` but may be set to any valid JavaScript number. Changes\nwill affect any stack trace captured _after_ the value has been changed.\n\nIf set to a non-number value, or set to a negative number, stack traces will\nnot capture any frames.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 312,
          "name": "name",
          "source": {
            "line": 2,
            "file": "OptionError.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/OptionError.ts#L2"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": [
        {
          "id": 296,
          "name": "captureStackTrace",
          "source": {
            "line": 52,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 297,
              "name": "captureStackTrace",
              "comment": {
                "description": "Creates a `.stack` property on `targetObject`, which when accessed returns\na string representing the location in the code at which\n`Error.captureStackTrace()` was called.\n\n```js\nconst myObject = {};\nError.captureStackTrace(myObject);\nmyObject.stack;  // Similar to `new Error().stack`\n```\n\nThe first line of the trace will be prefixed with\n`${myObject.name}: ${myObject.message}`.\n\nThe optional `constructorOpt` argument accepts a function. If given, all frames\nabove `constructorOpt`, including `constructorOpt`, will be omitted from the\ngenerated stack trace.\n\nThe `constructorOpt` argument is useful for hiding implementation\ndetails of error generation from the user. For instance:\n\n```js\nfunction a() {\n  b();\n}\n\nfunction b() {\n  c();\n}\n\nfunction c() {\n  // Create an error without stack trace to avoid calculating the stack trace twice.\n  const { stackTraceLimit } = Error;\n  Error.stackTraceLimit = 0;\n  const error = new Error();\n  Error.stackTraceLimit = stackTraceLimit;\n\n  // Capture the stack trace above function b\n  Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace\n  throw error;\n}\n\na();\n```",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 298,
                  "name": "targetObject",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  }
                },
                {
                  "id": 299,
                  "name": "constructorOpt",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 300,
          "name": "prepareStackTrace",
          "source": {
            "line": 56,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 295,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 301,
              "name": "prepareStackTrace",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "see",
                    "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 302,
                  "name": "err",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 303,
                  "name": "stackTraces",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "NodeJS.CallSite",
                      "packageName": "@types/node",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ]
        }
      ]
    },
    {
      "id": 316,
      "name": "Result",
      "source": {
        "line": 19,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L19"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "A type used to express computations that can fail, it can be used for returning and propagating errors. This is a\ntype union with the variants `Ok(T)`, representing success and containing a value, and `Err(E)`, representing error\nand containing an error value.",
        "blockTags": [
          {
            "name": "typeparam",
            "text": "T The result's type."
          },
          {
            "name": "typeparam",
            "text": "E The error's type."
          },
          {
            "name": "see",
            "text": "{@link https://doc.rust-lang.org/std/result/index.html}"
          }
        ],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "typeParameters": [
        {
          "id": 602,
          "name": "T",
          "constraint": null,
          "default": null
        },
        {
          "id": 603,
          "name": "E",
          "constraint": null,
          "default": null
        },
        {
          "id": 604,
          "name": "Success",
          "constraint": {
            "kind": "intrinsic",
            "type": "boolean"
          },
          "default": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "construct": {
        "id": 379,
        "name": "constructor",
        "source": {
          "line": 29,
          "file": "Result.ts",
          "path": "packages/result/src/lib",
          "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L29"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 316,
        "accessibility": "private",
        "parameters": [
          {
            "id": 384,
            "name": "value",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "If",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 383,
                  "name": "Result.Success",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": 381,
                  "name": "Result.T",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                },
                {
                  "kind": "reference",
                  "id": 382,
                  "name": "Result.E",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                }
              ]
            }
          },
          {
            "id": 385,
            "name": "success",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 383,
              "name": "Result.Success",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 386,
          "name": "__STATUS__",
          "source": {
            "line": 24,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L24"
          },
          "comment": {
            "description": "Branded value to ensure `Success` is typed correctly.",
            "blockTags": [],
            "modifierTags": [
              "@internal"
            ]
          },
          "parentId": 316,
          "accessibility": "protected",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 383,
            "name": "Result.Success",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        },
        {
          "id": 595,
          "name": "[SuccessProperty]",
          "source": {
            "line": 27,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L27"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 316,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 383,
            "name": "Result.Success",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        },
        {
          "id": 594,
          "name": "[ValueProperty]",
          "source": {
            "line": 26,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L26"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 316,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "If",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 383,
                "name": "Result.Success",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 381,
                "name": "Result.T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 382,
                "name": "Result.E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 599,
          "name": "[toStringTag]",
          "source": {
            "line": 1030,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1030"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "If",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 383,
                "name": "Result.Success",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "Ok"
              },
              {
                "kind": "literal",
                "value": "Err"
              }
            ]
          }
        },
        {
          "id": 601,
          "name": "[UnwrapSafeProperty]",
          "source": {
            "line": 1041,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1041"
          },
          "comment": {
            "description": "This function, in combination with `[$]`, is intended to emulate\nRust's ? operator.",
            "blockTags": [
              {
                "name": "see",
                "text": " - {@link Result.safeTry}\n - {@link https://doc.rust-lang.org/std/result/enum.Result.html#method.safeTry}\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Generator",
            "packageName": "typescript",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 644,
                "name": "Err",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              },
              {
                "kind": "reference",
                "id": 381,
                "name": "Result.T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "intrinsic",
                "type": "unknown"
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 596,
          "name": "[iterator]",
          "source": {
            "line": 1026,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1026"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 597,
              "name": "[iterator]",
              "comment": {
                "description": "Returns an iterator over the possibly contained value.\n\nThe iterator yields one value if the result is `Ok`, otherwise none.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(7);\nfor (const value of x) {\n  console.log(value);\n}\n// Logs 7\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Nothing!');\nfor (const value of x) {\n  console.log(value);\n}\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": " - {@link IResult.iter}\n - {@link https://doc.rust-lang.org/std/result/enum.Result.html#method.iter}\n"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Generator",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 521,
          "name": "and",
          "source": {
            "line": 715,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L715"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 522,
              "name": "and",
              "comment": {
                "description": "Returns `result` if the result is `Ok`, otherwise returns the `Err` value of itself.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nconst y: Result<string, string> = err('Late error');\nassert.equal(x.and(y), err('Late error'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Early error');\nconst y: Result<string, string> = err('Late error');\nassert.equal(x.and(y), err('Early error'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nconst y: Result<string, string> = ok('Hello');\nassert.equal(x.and(y), ok('Hello'));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.and}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 523,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 524,
                  "name": "result",
                  "comment": {
                    "description": "The result to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 523,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 523,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 525,
          "name": "andThen",
          "source": {
            "line": 738,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L738"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 526,
              "name": "andThen",
              "comment": {
                "description": "Calls `cb` if the result is `Ok`, otherwise returns the `Err` value of self.\n\nThis function can be used for control flow based on `Result` values.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nfunction fractionOf4(value: number) {\n  return value === 0 ? err('overflowed') : ok(4 / value);\n}\n\nassert.equal(ok(2).andThen(fractionOf4), ok(4));\nassert.equal(ok(0).andThen(fractionOf4), err('overflowed'));\nassert.equal(err('not a number').andThen(fractionOf4), err('not a number'));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 527,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 528,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 530,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 531,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 381,
                              "name": "Result.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 527,
                          "name": "OutputResult",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 527,
                "name": "OutputResult",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 543,
          "name": "contains",
          "source": {
            "line": 826,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L826"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 544,
              "name": "contains",
              "comment": {
                "description": "Returns `true` if the result is an `Ok` and the given value strict equals it.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.contains(2), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(3);\nassert.equal(x.contains(2), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.contains(2), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.contains}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 545,
                  "name": "Value",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 546,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 547,
                  "name": "value",
                  "comment": {
                    "description": "The value to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 545,
                    "name": "Value",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 641,
                  "name": "Ok",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 545,
                      "name": "Value",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  ]
                }
              }
            },
            {
              "id": 548,
              "name": "contains",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 549,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 550,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "literal",
                "value": "false"
              }
            }
          ]
        },
        {
          "id": 551,
          "name": "containsErr",
          "source": {
            "line": 854,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L854"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 552,
              "name": "containsErr",
              "comment": {
                "description": "Returns `true` if the result is an `Err` and the given error strict equals it.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.containsErr('Some error message'), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.containsErr('Some error message'), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some other error message');\nassert.equal(x.containsErr('Some error message'), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.contains_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 553,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 554,
                  "name": "error",
                  "comment": {
                    "description": "The error to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "literal",
                "value": "false"
              }
            },
            {
              "id": 555,
              "name": "containsErr",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 556,
                  "name": "Value",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 557,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                },
                {
                  "id": 558,
                  "name": "error",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 556,
                    "name": "Value",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 644,
                  "name": "Err",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 556,
                      "name": "Value",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "intrinsic",
                      "type": "any"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 571,
          "name": "eq",
          "source": {
            "line": 955,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L955"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 572,
              "name": "eq",
              "comment": {
                "description": "Checks whether or not `other` equals with self.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 573,
                  "name": "OtherValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 574,
                  "name": "OtherError",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 575,
                  "name": "OtherSuccess",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 576,
                  "name": "other",
                  "comment": {
                    "description": "The other result to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 573,
                        "name": "OtherValue",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 574,
                        "name": "OtherError",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 575,
                        "name": "OtherSuccess",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 316,
                  "name": "Result",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 573,
                      "name": "OtherValue",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 574,
                      "name": "OtherError",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 575,
                      "name": "OtherSuccess",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 419,
          "name": "err",
          "source": {
            "line": 169,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L169"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 420,
              "name": "err",
              "comment": {
                "description": "Converts from `Result<T, E>` to `Option<E>`.\n\nConverts itself into an `Option<E>`, and discarding the successful value, if any.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.err(), none);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.err(), 'Some error message');\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 288,
                    "name": "None",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 496,
          "name": "expect",
          "source": {
            "line": 485,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L485"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 497,
              "name": "expect",
              "comment": {
                "description": "Returns the contained `Ok` value.\n\nIf the value is an `Err`, it throws a {@link ResultError} with the given message and the content of the `Err`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.equal(x.expect('Whoops!'), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Emergency failure');\nassert.throws(() => x.expect('Whoops!'), {\n  name: 'ResultError',\n  message: 'Whoops',\n  value: 'Emergency failure'\n});\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.expect}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 498,
                  "name": "message",
                  "comment": {
                    "description": "The message for the error.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 499,
          "name": "expectErr",
          "source": {
            "line": 513,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L513"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 500,
              "name": "expectErr",
              "comment": {
                "description": "Returns the contained `Err` value.\n\nIf the value is an `Ok`, it throws a {@link ResultError} with the given message and the content of the `Ok`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.throws(() => x.expectErr('Whoops!'), {\n  name: 'ResultError',\n  message: 'Whoops',\n  value: 2\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Emergency failure');\nassert.equal(x.expectErr('Whoops!'), 'Emergency failure');\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.expect_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 501,
                  "name": "message",
                  "comment": {
                    "description": "The message for the error.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  },
                  {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 563,
          "name": "flatten",
          "source": {
            "line": 904,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L904"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 564,
              "name": "flatten",
              "comment": {
                "description": "Converts from `Result<Result<T, E>, E>` to `Result<T, E>`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<Result<string, number>, number> = ok(ok('Hello'));\nassert.equal(x.flatten(), ok('Hello'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<Result<string, number>, number> = ok(err(6));\nassert.equal(x.flatten(), err(6));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<Result<string, number>, number> = err(6);\nassert.equal(x.flatten(), err(6));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.flatten}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 565,
                  "name": "InnerResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 566,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 565,
                        "name": "InnerResult",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 383,
                        "name": "Result.Success",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 565,
                    "name": "InnerResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 470,
          "name": "inspect",
          "source": {
            "line": 360,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L360"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 471,
              "name": "inspect",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained value (if `Ok`).",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspectAsync} for the awaitable version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nok(2).inspect(console.log);\n// Logs: 2\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nerr('Some error message').inspect(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.inspect}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 472,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 474,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 475,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 381,
                              "name": "Result.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "unknown"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "this"
              }
            }
          ]
        },
        {
          "id": 476,
          "name": "inspectAsync",
          "source": {
            "line": 383,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L383"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 477,
              "name": "inspectAsync",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained value (if `Ok`) and awaits it.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspect} for the sync version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait ok(2).inspectAsync(console.log);\n// Logs: 2\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait err('Some error message').inspectAsync(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 478,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 480,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 481,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 381,
                              "name": "Result.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "unknown"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 383,
                        "name": "Result.Success",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 482,
          "name": "inspectErr",
          "source": {
            "line": 406,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L406"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 483,
              "name": "inspectErr",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained error (if `Err`).",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspectErrAsync} for the awaitable version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nok(2).inspectErr(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nerr('Some error message').inspectErr(console.log);\n// Logs: Some error message\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.inspect_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 484,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 486,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 487,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "unknown"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "this"
              }
            }
          ]
        },
        {
          "id": 488,
          "name": "inspectErrAsync",
          "source": {
            "line": 429,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L429"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 489,
              "name": "inspectErrAsync",
              "comment": {
                "description": "Calls the provided closure with a reference to the contained error (if `Err`) and awaits it.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link inspectErr} for the sync version."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait ok(2).inspectErrAsync(console.log);\n// Doesn't log\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nawait err('Some error message').inspectErrAsync(console.log);\n// Logs: Some error message\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 490,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 492,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 493,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "intrinsic",
                          "type": "unknown"
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 383,
                        "name": "Result.Success",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 567,
          "name": "intoOkOrErr",
          "source": {
            "line": 924,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L924"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 568,
              "name": "intoOkOrErr",
              "comment": {
                "description": "Returns the `Ok` value if self is `Ok`, and the `Err` value if self is `Err`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nlet x: Result<number, number> = ok(3);\nassert.equal(x.intoOkOrErr(), 3);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nlet x: Result<number, number> = err(4);\nassert.equal(x.intoOkOrErr(), 4);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.into_ok_or_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 569,
          "name": "intoPromise",
          "source": {
            "line": 939,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L939"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 570,
              "name": "intoPromise",
              "comment": {
                "description": "Returns a `Promise` object with the awaited value (if `Ok`) or the awaited error (if `Err`).",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nlet x = ok(Promise.resolve(3));\nassert.equal(await x.intoPromise(), ok(3));\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "If",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 383,
                        "name": "Result.Success",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 641,
                        "name": "Ok",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "Awaited",
                            "packageName": "typescript",
                            "packageVersion": null,
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": 381,
                                "name": "Result.T",
                                "packageName": "@sapphire/result",
                                "packageVersion": null,
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 644,
                        "name": "Err",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": null,
                            "name": "Awaited",
                            "packageName": "typescript",
                            "packageVersion": null,
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": 382,
                                "name": "Result.E",
                                "packageName": "@sapphire/result",
                                "packageVersion": null,
                                "typeArguments": []
                              }
                            ]
                          },
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 402,
          "name": "isErr",
          "source": {
            "line": 97,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L97"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 403,
              "name": "isErr",
              "comment": {
                "description": "Returns `true` if the result is `Err`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(-3);\nassert.equal(x.isErr(), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Some error message');\nassert.equal(x.isErr(), true);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.is_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 644,
                  "name": "Err",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 382,
                      "name": "Result.E",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 381,
                      "name": "Result.T",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 404,
          "name": "isErrAnd",
          "source": {
            "line": 123,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L123"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 405,
              "name": "isErrAnd",
              "comment": {
                "description": "Returns `true` if the result is `Err` and the value inside of it matches a predicate.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.equal(x.isErrAnd((error) => error instanceof TypeError), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err(new Error('Some error message'));\nassert.equal(x.isErrAnd((error) => error instanceof TypeError), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err(new TypeError('Some error message'));\nassert.equal(x.isErrAnd((error) => error instanceof TypeError), true);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.is_err_and}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 406,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 407,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 409,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 410,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "predicate",
                          "asserts": false,
                          "name": "error",
                          "type": {
                            "kind": "reference",
                            "id": 406,
                            "name": "R",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 644,
                  "name": "Err",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 406,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 381,
                      "name": "Result.T",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 411,
              "name": "isErrAnd",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 412,
                  "name": "R",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 413,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 415,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 416,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 412,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "intersection",
                  "types": [
                    {
                      "kind": "reference",
                      "id": 644,
                      "name": "Err",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 382,
                          "name": "Result.E",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": 381,
                          "name": "Result.T",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      ]
                    },
                    {
                      "kind": "reference",
                      "id": 412,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 387,
          "name": "isOk",
          "source": {
            "line": 50,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L50"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 388,
              "name": "isOk",
              "comment": {
                "description": "Returns `true` if the result is `Ok`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(-3);\nassert.equal(x.isOk(), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Some error message');\nassert.equal(x.isOk(), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.is_ok}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 641,
                  "name": "Ok",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 381,
                      "name": "Result.T",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 382,
                      "name": "Result.E",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 389,
          "name": "isOkAnd",
          "source": {
            "line": 75,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L75"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 390,
              "name": "isOkAnd",
              "comment": {
                "description": "Returns `true` if the result is `Ok` and the value inside of it matches a predicate.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.equal(x.isOkAnd((value) => value > 1), true);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(0);\nassert.equal(x.isOkAnd((value) => value > 1), false);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Some error message');\nassert.equal(x.isOkAnd((value) => value > 1), false);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.is_ok_and}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 391,
                  "name": "R",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 392,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 394,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 395,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 381,
                              "name": "Result.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "predicate",
                          "asserts": false,
                          "name": "value",
                          "type": {
                            "kind": "reference",
                            "id": 391,
                            "name": "R",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          }
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "reference",
                  "id": 641,
                  "name": "Ok",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 391,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "reference",
                      "id": 382,
                      "name": "Result.E",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            },
            {
              "id": 396,
              "name": "isOkAnd",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 397,
                  "name": "R",
                  "constraint": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 398,
                  "name": "cb",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 400,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 401,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 381,
                              "name": "Result.T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 397,
                          "name": "R",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "this",
                "type": {
                  "kind": "intersection",
                  "types": [
                    {
                      "kind": "reference",
                      "id": 641,
                      "name": "Ok",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 381,
                          "name": "Result.T",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        },
                        {
                          "kind": "reference",
                          "id": 382,
                          "name": "Result.E",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      ]
                    },
                    {
                      "kind": "reference",
                      "id": 397,
                      "name": "R",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 494,
          "name": "iter",
          "source": {
            "line": 458,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L458"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 495,
              "name": "iter",
              "comment": {
                "description": "Returns an iterator over the possibly contained value.\n\nThe iterator yields one value if the result is `Ok`, otherwise none.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(7);\nfor (const value of x.iter()) {\n  console.log(value);\n}\n// Logs 7\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Nothing!');\nfor (const value of x.iter()) {\n  console.log(value);\n}\n// Doesn't log\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.iter}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Generator",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 421,
          "name": "map",
          "source": {
            "line": 191,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L191"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 422,
              "name": "map",
              "comment": {
                "description": "Maps a `Result<T, E>` to `Result<U, E>` by applying a function to a contained `Ok` value, leaving an `Err` value\nuntouched.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.map((value) => value * 2), ok(4));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.map((value) => value * 2), err('Some error message'));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.map}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 423,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 424,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 426,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 427,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 381,
                                  "name": "Result.T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 423,
                          "name": "OutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 423,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 456,
          "name": "mapErr",
          "source": {
            "line": 305,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L305"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 457,
              "name": "mapErr",
              "comment": {
                "description": "Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a contained `Err` value, leaving an `Ok` value\nuntouched.\n\nThis function can be used to pass through a successful result while handling an error.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, Error> = ok(2);\nassert.equal(x.mapErr((error) => error.message), ok(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, Error> = err(new Error('Some error message'));\nassert.equal(x.mapErr((error) => error.message), err('Some error message'));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.map_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 458,
                  "name": "OutputError",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 459,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 461,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 462,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                },
                                {
                                  "kind": "reference",
                                  "id": 382,
                                  "name": "Result.E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 458,
                          "name": "OutputError",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 458,
                    "name": "OutputError",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 463,
          "name": "mapErrInto",
          "source": {
            "line": 338,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L338"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 464,
              "name": "mapErrInto",
              "comment": {
                "description": "Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a contained `Err` value, leaving an `Ok` value\nuntouched.\n\nThis function can be used to pass through a successful result while handling an error.\n\nUnlike {@link mapErr}, this method does not wrap the returned value inside `Err`, but instead, it returns the\nreturned value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, Error> = ok(2);\nassert.equal(x.mapErrInto((error) => err(error.message)), ok(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, Error> = err(new Error('Some error message'));\nassert.equal(x.mapErrInto((error) => err(error.message)), err('Some error message'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, Error> = err(new Error('Some error message'));\nassert.equal(x.mapErrInto((error) => ok(4)), ok(4));\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 465,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 466,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 468,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 469,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                },
                                {
                                  "kind": "reference",
                                  "id": 382,
                                  "name": "Result.E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 465,
                          "name": "OutputResult",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 465,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 428,
          "name": "mapInto",
          "source": {
            "line": 225,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L225"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 429,
              "name": "mapInto",
              "comment": {
                "description": "Maps a `Result<T, E>` to `Result<T, F>` by applying a function to a contained `Ok` value, leaving an `Err` value\nuntouched.\n\nUnlike {@link map}, this method does not wrap the returned value inside `Ok`, but instead, it returns the\nreturned value.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.mapInto((value) => ok(value * value)), ok(4));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(0);\nassert.equal(\n  x.mapInto((value) => (value === 0 ? err('zero is not divisible') : ok(1 / value))),\n  err('zero is not divisible')\n);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.mapInto((value) => ok(4)), err('Some error message'));\n```"
                  },
                  {
                    "name": "note",
                    "text": "This is an extension not supported in Rust"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 430,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 431,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 433,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 434,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 381,
                                  "name": "Result.T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 430,
                          "name": "OutputResult",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 430,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 435,
          "name": "mapOr",
          "source": {
            "line": 250,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L250"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 436,
              "name": "mapOr",
              "comment": {
                "description": "Returns the provided default (if `Err`), or applies a function to the contained value (if `Ok`),\n\nArguments passed to `mapOr` are eagerly evaluated; if you are passing the result of a function call, it is\nrecommended to use `mapOrElse`, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok('hello');\nassert.equal(x.mapOr(42, (value) => value.length), 5);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Some error message');\nassert.equal(x.mapOr(42, (value) => value.length), 42);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 437,
                  "name": "MappedOutputValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 438,
                  "name": "DefaultOutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 439,
                  "name": "defaultValue",
                  "comment": {
                    "description": "The default value to use.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 438,
                    "name": "DefaultOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 440,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 442,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 443,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 381,
                                  "name": "Result.T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 437,
                          "name": "MappedOutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 437,
                    "name": "MappedOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 438,
                    "name": "DefaultOutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 444,
          "name": "mapOrElse",
          "source": {
            "line": 278,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L278"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 445,
              "name": "mapOrElse",
              "comment": {
                "description": "Maps a `Result<T, E>` to `U` by applying fallback function default to a contained `Err` value, or function `cb`\nto a contained `Ok` value.\n\nThis function can be used to unpack a successful result while handling an error.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<string, string> = ok('hello');\nassert.equal(x.mapOrElse((error) => error.length, (value) => value.length), 5);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<string, string> = err('Some error message');\nassert.equal(x.mapOrElse((error) => error.length, (value) => value.length), 18);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 446,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 447,
                  "name": "OutputError",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 448,
                  "name": "op",
                  "comment": {
                    "description": "The predicate that is run on `Err`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 450,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 451,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                },
                                {
                                  "kind": "reference",
                                  "id": 382,
                                  "name": "Result.E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 447,
                          "name": "OutputError",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                },
                {
                  "id": 452,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate that is run on `Ok`.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 454,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 455,
                            "name": "value",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": null,
                              "name": "If",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 383,
                                  "name": "Result.Success",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 381,
                                  "name": "Result.T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "never"
                                }
                              ]
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 446,
                          "name": "OutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 446,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 447,
                    "name": "OutputError",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 580,
          "name": "match",
          "source": {
            "line": 993,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L993"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 581,
              "name": "match",
              "comment": {
                "description": "Runs `ok` function if self is `Ok`, otherwise runs `err` function.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst result = ok(4).match({\n  ok: (v) => v,\n  err: () => 0\n});\nassert.equal(result, 4);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst result = err('Hello').match({\n  ok: (v) => v,\n  err: () => 0\n});\nassert.equal(result, 0);\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 582,
                  "name": "OkValue",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 583,
                  "name": "ErrValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 584,
                  "name": "branches",
                  "comment": {
                    "description": "The branches to match.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": null,
                    "methods": [
                      {
                        "id": 590,
                        "signatures": [
                          {
                            "id": 591,
                            "name": "err",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [
                              {
                                "id": 592,
                                "name": "this",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": 644,
                                  "name": "Err",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 382,
                                      "name": "Result.E",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "any"
                                    }
                                  ]
                                }
                              },
                              {
                                "id": 593,
                                "name": "error",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": null,
                                  "name": "If",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 383,
                                      "name": "Result.Success",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "never"
                                    },
                                    {
                                      "kind": "reference",
                                      "id": 382,
                                      "name": "Result.E",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    }
                                  ]
                                }
                              }
                            ],
                            "returnType": {
                              "kind": "reference",
                              "id": 583,
                              "name": "ErrValue",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ]
                      },
                      {
                        "id": 586,
                        "signatures": [
                          {
                            "id": 587,
                            "name": "ok",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [
                              {
                                "id": 588,
                                "name": "this",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": 641,
                                  "name": "Ok",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 381,
                                      "name": "Result.T",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "any"
                                    }
                                  ]
                                }
                              },
                              {
                                "id": 589,
                                "name": "value",
                                "comment": {
                                  "description": null,
                                  "blockTags": [],
                                  "modifierTags": []
                                },
                                "rest": false,
                                "optional": false,
                                "type": {
                                  "kind": "reference",
                                  "id": null,
                                  "name": "If",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 383,
                                      "name": "Result.Success",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "reference",
                                      "id": 381,
                                      "name": "Result.T",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "never"
                                    }
                                  ]
                                }
                              }
                            ],
                            "returnType": {
                              "kind": "reference",
                              "id": 582,
                              "name": "OkValue",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 582,
                    "name": "OkValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 583,
                    "name": "ErrValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 577,
          "name": "ne",
          "source": {
            "line": 968,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L968"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 578,
              "name": "ne",
              "comment": {
                "description": "Checks whether or not `other` doesn't equal with self.",
                "blockTags": [
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#method.ne}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 579,
                  "name": "other",
                  "comment": {
                    "description": "The other result to compare.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 417,
          "name": "ok",
          "source": {
            "line": 147,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L147"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 418,
              "name": "ok",
              "comment": {
                "description": "Converts from `Result<T, E>` to `Option<T>`.\n\nConverts itself into an `Option<T>`, and discarding the error, if any.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nassert.equal(x.ok(), some(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Some error message');\nassert.equal(x.ok(), none);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.ok}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 288,
                    "name": "None",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 532,
          "name": "or",
          "source": {
            "line": 777,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L777"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 533,
              "name": "or",
              "comment": {
                "description": "Return `result` if the result is `Err`, otherwise returns the `Ok` value of self.\n\nArguments passed to or are eagerly evaluated; if you are passing the result of a function call, it is recommended\nto use {@link orElse}, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nconst y: Result<number, string> = err('Late error');\nassert.equal(x.or(y), ok(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Early error');\nconst y: Result<number, string> = ok(2);\nassert.equal(x.or(y), ok(2));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Early error');\nconst y: Result<number, string> = err('Late error');\nassert.equal(x.or(y), err('Late error'));\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(2);\nconst y: Result<number, string> = ok(100);\nassert.equal(x.or(y), ok(2));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 534,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 535,
                  "name": "result",
                  "comment": {
                    "description": "The result to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 534,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 534,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 536,
          "name": "orElse",
          "source": {
            "line": 800,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L800"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 537,
              "name": "orElse",
              "comment": {
                "description": "Calls `cb` if the result is `Err`, otherwise returns the `Ok` value of self.\n\nThis function can be used for control flow based on result values.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst square = (x: number): Result<number, string> => ok(x * x);\nconst wrapErr = (x: number): Result<number, string> => err(x);\n\nassert.equal(ok(2).orElse(square).orElse(square), ok(2));\nassert.equal(ok(2).orElse(wrapErr).orElse(square), ok(2));\nassert.equal(err(3).orElse(square).orElse(wrapErr), ok(9));\nassert.equal(err(3).orElse(wrapErr).orElse(wrapErr), err(3));\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 538,
                  "name": "OutputResult",
                  "constraint": {
                    "kind": "reference",
                    "id": 612,
                    "name": "Result.Any",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 539,
                  "name": "cb",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 541,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 542,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 538,
                          "name": "OutputResult",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 641,
                    "name": "Ok",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "any"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 538,
                    "name": "OutputResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 559,
          "name": "transpose",
          "source": {
            "line": 874,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L874"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 560,
              "name": "transpose",
              "comment": {
                "description": "Transposes a `Result` of an `Option` into an `Option` of a `Result`.\n\n`ok(none)` will be mapped to `none`. `ok(some(v))` and `err(e)` will be mapped to `some(ok(v))` and `some(err(e))`.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<Option<number>, Error> = ok(some(5));\nconst y: Option<Result<number, Error>> = some(ok(5));\nassert.equal(x.transpose(), y);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.transpose}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 561,
                  "name": "InnerValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 562,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 1,
                        "name": "Option",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 561,
                            "name": "InnerValue",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 383,
                        "name": "Result.Success",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 1,
                    "name": "Option",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 641,
                        "name": "Ok",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 561,
                            "name": "InnerValue",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 286,
                    "name": "Some",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 644,
                        "name": "Err",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 382,
                            "name": "Result.E",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "intrinsic",
                            "type": "any"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 502,
          "name": "unwrap",
          "source": {
            "line": 545,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L545"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 503,
              "name": "unwrap",
              "comment": {
                "description": "Returns the contained `Ok` value.\n\nIf the value is an `Err`, it throws a {@link ResultError} with the message, and the content of the `Err`.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOrElse}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapErr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapRaw}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.equal(x.unwrap(), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Emergency failure');\nassert.throws(() => x.unwrap(), {\n  name: 'ResultError',\n  message: 'Unwrap failed',\n  value: 'Emergency failure'\n});\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 504,
          "name": "unwrapErr",
          "source": {
            "line": 577,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L577"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 505,
              "name": "unwrapErr",
              "comment": {
                "description": "Returns the contained `Err` value.\n\nIf the value is an `Ok`, it throws a {@link ResultError} with the message, and the content of the `Ok`.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrap}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOrElse}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapRaw}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.throws(() => x.unwrapErr(), {\n  name: 'ResultError',\n  message: 'Unwrap failed',\n  value: 2\n});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Emergency failure');\nassert.equal(x.unwrapErr(), 'Emergency failure');\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_err}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  },
                  {
                    "kind": "reference",
                    "id": 382,
                    "name": "Result.E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 506,
          "name": "unwrapOr",
          "source": {
            "line": 608,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L608"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 507,
              "name": "unwrapOr",
              "comment": {
                "description": "Returns the contained `Ok` value or the provided default.\n\nArguments passed to `unwrapOr` are eagerly evaluated; if you are passing the result of a function call, it is\nrecommended to use {@link unwrapOrElse}, which is lazily evaluated.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrap}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOrElse}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapErr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapRaw}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = ok(9);\nassert.equal(x.unwrapOr(2), 9);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x: Result<number, string> = err('Error');\nassert.equal(x.unwrapOr(2), 2);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 508,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 509,
                  "name": "defaultValue",
                  "comment": {
                    "description": "The default value.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 508,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 508,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 510,
          "name": "unwrapOrElse",
          "source": {
            "line": 632,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L632"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 511,
              "name": "unwrapOrElse",
              "comment": {
                "description": "Returns the contained `Ok` value or computes it from a closure.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrap}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapErr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapRaw}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst count = (x: string) => x.length;\n\nassert.equal(ok(2).unwrapOrElse(count), 2);\nassert.equal(err('hello').unwrapOrElse(count), 5);\n```"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_else}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 512,
                  "name": "OutputValue",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 513,
                  "name": "op",
                  "comment": {
                    "description": "The predicate.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 515,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 516,
                            "name": "error",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 382,
                              "name": "Result.E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": 512,
                          "name": "OutputValue",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 512,
                    "name": "OutputValue",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 517,
          "name": "unwrapRaw",
          "source": {
            "line": 661,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L661"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 518,
              "name": "unwrapRaw",
              "comment": {
                "description": "Returns the contained `Ok` value.\n\nIf the value is an `Err`, it throws the contained error.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrap}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOrElse}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapErr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = ok(2);\nassert.equal(x.unwrapRaw(), 2);\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst x = err('Emergency failure');\nassert.throws(() => x.unwrapRaw(), {\n  name: 'Error',\n  message: 'Unwrap failed',\n  value: 'Emergency failure'\n});\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "If",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 383,
                    "name": "Result.Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "never"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 519,
          "name": "unwrapSafe",
          "source": {
            "line": 681,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L681"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 520,
              "name": "unwrapSafe",
              "comment": {
                "description": "Returns the contained `Ok` value or yelds the contained `Err` value.\nEmulates Rust's `?` operator in `safeTry`'s body. See also {@link Result.safeTry}.\n\nIf used outside of a `safeTry`'s' body, throws the contained error.",
                "blockTags": [
                  {
                    "name": "seealso",
                    "text": "{@link unwrap}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapOr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapErr}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapRaw}"
                  },
                  {
                    "name": "seealso",
                    "text": "{@link unwrapSafe}"
                  },
                  {
                    "name": "see",
                    "text": "{@link https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_safe}"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Generator",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 644,
                    "name": "Err",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 382,
                        "name": "Result.E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 381,
                        "name": "Result.T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 381,
                    "name": "Result.T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 376,
          "name": "[hasInstance]",
          "source": {
            "line": 1075,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1075"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 377,
              "name": "[hasInstance]",
              "comment": {
                "description": "Checks if the `instance` object is an instance of `Result`, or if it is a `Result`-like object. This override\nexists to interoperate with other versions of this class, such as the one coming from another version of this\nlibrary or from a different build.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "Whether or not the instance is a `Result`."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Result } from '@sapphire/result';\nconst { ok } = require('@sapphire/result');\n\nok(2) instanceof Result; // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 378,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 351,
          "name": "all",
          "source": {
            "line": 1157,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1157"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 352,
              "name": "all",
              "comment": {
                "description": "Creates an {@link Ok} that is the combination of all collected {@link Ok} values as an array, or the first\n{@link Err} encountered.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A new {@link Result}."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 353,
                  "name": "Entries",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 612,
                        "name": "Result.Any",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 354,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 355,
                  "name": "results",
                  "comment": {
                    "description": "An array of {@link Result}s.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 353,
                    "name": "Entries",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 621,
                    "name": "Result.UnwrapOkArray",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 353,
                        "name": "Entries",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "indexedAccess",
                    "objectType": {
                      "kind": "reference",
                      "id": 623,
                      "name": "Result.UnwrapErrArray",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 353,
                          "name": "Entries",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        }
                      ]
                    },
                    "indexType": {
                      "kind": "intrinsic",
                      "type": "number"
                    }
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 356,
          "name": "any",
          "source": {
            "line": 1178,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1178"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 357,
              "name": "any",
              "comment": {
                "description": "Returns the first encountered {@link Ok}, or an {@link Err} that is the combination of all collected error values.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "A new {@link Result}."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 358,
                  "name": "Entries",
                  "constraint": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 612,
                        "name": "Result.Any",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 359,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 360,
                  "name": "results",
                  "comment": {
                    "description": "An array of {@link Result}s.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": 358,
                    "name": "Entries",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 617,
                    "name": "Result.UnwrapOk",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "indexedAccess",
                        "objectType": {
                          "kind": "reference",
                          "id": 358,
                          "name": "Entries",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        },
                        "indexType": {
                          "kind": "intrinsic",
                          "type": "number"
                        }
                      }
                    ]
                  },
                  {
                    "kind": "reference",
                    "id": 623,
                    "name": "Result.UnwrapErrArray",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 358,
                        "name": "Entries",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    ]
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 323,
          "name": "err",
          "source": {
            "line": 1053,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1053"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 324,
              "name": "err",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 325,
                  "name": "E",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "undefined"
                  }
                },
                {
                  "id": 326,
                  "name": "T",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 327,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 328,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": 325,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 644,
                "name": "Err",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 325,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 326,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 335,
          "name": "from",
          "source": {
            "line": 1124,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1124"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 336,
              "name": "from",
              "comment": {
                "description": "Creates a {@link Result} out of a callback.",
                "blockTags": [
                  {
                    "name": "typeparam",
                    "text": "T The result's type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error's type."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 337,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 338,
                  "name": "E",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 339,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 340,
                  "name": "op",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": 637,
                        "name": "ResultResolvable",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 337,
                            "name": "T",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "reference",
                            "id": 338,
                            "name": "E",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": []
                          },
                          {
                            "kind": "intrinsic",
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "kind": "reflection",
                        "properties": null,
                        "signatures": [
                          {
                            "id": 342,
                            "name": "__type",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [],
                            "returnType": {
                              "kind": "reference",
                              "id": 637,
                              "name": "ResultResolvable",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 337,
                                  "name": "T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 338,
                                  "name": "E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "boolean"
                                }
                              ]
                            }
                          }
                        ],
                        "methods": null
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 337,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 338,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 343,
          "name": "fromAsync",
          "source": {
            "line": 1138,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1138"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 344,
              "name": "fromAsync",
              "comment": {
                "description": "Creates a {@link Result} out of a promise or async callback.",
                "blockTags": [
                  {
                    "name": "typeparam",
                    "text": "T The result's type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error's type."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 345,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 346,
                  "name": "E",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 347,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 348,
                  "name": "op",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "reference",
                        "id": null,
                        "name": "Awaitable",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": [
                          {
                            "kind": "reference",
                            "id": 637,
                            "name": "ResultResolvable",
                            "packageName": "@sapphire/result",
                            "packageVersion": null,
                            "typeArguments": [
                              {
                                "kind": "reference",
                                "id": 345,
                                "name": "T",
                                "packageName": "@sapphire/result",
                                "packageVersion": null,
                                "typeArguments": []
                              },
                              {
                                "kind": "reference",
                                "id": 346,
                                "name": "E",
                                "packageName": "@sapphire/result",
                                "packageVersion": null,
                                "typeArguments": []
                              },
                              {
                                "kind": "intrinsic",
                                "type": "boolean"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "reflection",
                        "properties": null,
                        "signatures": [
                          {
                            "id": 350,
                            "name": "__type",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "typeParameters": [],
                            "parameters": [],
                            "returnType": {
                              "kind": "reference",
                              "id": null,
                              "name": "Awaitable",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 637,
                                  "name": "ResultResolvable",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": [
                                    {
                                      "kind": "reference",
                                      "id": 345,
                                      "name": "T",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "reference",
                                      "id": 346,
                                      "name": "E",
                                      "packageName": "@sapphire/result",
                                      "packageVersion": null,
                                      "typeArguments": []
                                    },
                                    {
                                      "kind": "intrinsic",
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "methods": null
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 345,
                        "name": "T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 346,
                        "name": "E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 329,
          "name": "is",
          "source": {
            "line": 1095,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1095"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 330,
              "name": "is",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "deprecated",
                    "text": "Use {@link Result.isResult} instead.\n\nChecks if the `instance` object is an instance of `Result`, or if it is a `Result`-like object."
                  },
                  {
                    "name": "returns",
                    "text": "true if the instance is a `Result` or a `Result`-like object, false otherwise."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Result } from '@sapphire/result';\nconst { ok } = require('@sapphire/result');\n\nResult.isResult(ok(2)); // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 331,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "instance",
                "type": {
                  "kind": "reference",
                  "id": 612,
                  "name": "Result.Any",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 332,
          "name": "isResult",
          "source": {
            "line": 1113,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1113"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 333,
              "name": "isResult",
              "comment": {
                "description": "Checks if the `instance` object is an instance of `Result`, or if it is a `Result`-like object.",
                "blockTags": [
                  {
                    "name": "returns",
                    "text": "true if the instance is a `Result` or a `Result`-like object, false otherwise."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nimport { Result } from '@sapphire/result';\nconst { ok } = require('@sapphire/result');\n\nResult.isResult(ok(2)); // true\n```"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 334,
                  "name": "instance",
                  "comment": {
                    "description": "The instance to check.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "returnType": {
                "kind": "predicate",
                "asserts": false,
                "name": "instance",
                "type": {
                  "kind": "reference",
                  "id": 612,
                  "name": "Result.Any",
                  "packageName": "@sapphire/result",
                  "packageVersion": null,
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 317,
          "name": "ok",
          "source": {
            "line": 1046,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1046"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 318,
              "name": "ok",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 319,
                  "name": "T",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "undefined"
                  }
                },
                {
                  "id": 320,
                  "name": "E",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 321,
                  "name": "this",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "void"
                  }
                },
                {
                  "id": 322,
                  "name": "value",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": 319,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 641,
                "name": "Ok",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 319,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 320,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 361,
          "name": "safeTry",
          "source": {
            "line": 1233,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1233"
          },
          "parentId": 316,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 362,
              "name": "safeTry",
              "comment": {
                "description": "Evaluates the given generator to a Result returned or an Err yielded from it,\nwhichever comes first.\n\nThis function, in combination with `[$]`, is intended to emulate\nRust's ? operator.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n\tconst result = Result.safeTry(function* ({ $ }) {\n\t  const first = yield* ok(1)[$];\n\t  const second = yield* ok(1)[$];\n\n\t  return ok(first + second);\n });\n\n\tresult.match({\n\t  ok: (value) => value, // 2\n\t  err: (error) => {}\n\t});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n\tconst resultAsync = Result.safeTry(async function* ({ $async }) {\n\t  const first = yield* $async(Result.fromAsync(() => Promise.resolve(1)));\n\t  const second = yield* ok(1)[$];\n\n\t  return ok(first + second);\n });\n\n\tresultAsync.match({\n\t  ok: (value) => value, // 2\n\t  err: (error) => {}\n\t});\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The first occurence of either an yielded Err or a returned Result."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 363,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 364,
                  "name": "E",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 365,
                  "name": "body",
                  "comment": {
                    "description": "What is evaluated. In body, `yield* result[$]` works as\nRust's `result?` expression.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 367,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 368,
                            "name": "options",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 656,
                              "name": "SafeTryOptions",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": null,
                          "name": "Generator",
                          "packageName": "typescript",
                          "packageVersion": null,
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": 644,
                              "name": "Err",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 364,
                                  "name": "E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "any"
                                }
                              ]
                            },
                            {
                              "kind": "reference",
                              "id": 316,
                              "name": "Result",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 363,
                                  "name": "T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 364,
                                  "name": "E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "boolean"
                                }
                              ]
                            },
                            {
                              "kind": "intrinsic",
                              "type": "unknown"
                            }
                          ]
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 363,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 364,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                ]
              }
            },
            {
              "id": 369,
              "name": "safeTry",
              "comment": {
                "description": "Evaluates the given generator to a Result returned or an Err yielded from it,\nwhichever comes first.\n\nThis function, in combination with `[$]`, is intended to emulate\nRust's ? operator.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n\tconst result = Result.safeTry(function* ({ $ }) {\n\t  const first = yield* ok(1)[$];\n\t  const second = yield* ok(1)[$];\n\n\t  return ok(first + second);\n });\n\n\tresult.match({\n\t  ok: (value) => value, // 2\n\t  err: (error) => {}\n\t});\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n\tconst resultAsync = Result.safeTry(async function* ({ $async }) {\n\t  const first = yield* $async(Result.fromAsync(() => Promise.resolve(1)));\n\t  const second = yield* ok(1)[$];\n\n\t  return ok(first + second);\n });\n\n\tresultAsync.match({\n\t  ok: (value) => value, // 2\n\t  err: (error) => {}\n\t});\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The first occurence of either an yielded Err or a returned Result."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 370,
                  "name": "T",
                  "constraint": null,
                  "default": null
                },
                {
                  "id": 371,
                  "name": "E",
                  "constraint": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 372,
                  "name": "body",
                  "comment": {
                    "description": "What is evaluated. In body, `yield* result[$]` works as\nRust's `result?` expression.",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "properties": null,
                    "signatures": [
                      {
                        "id": 374,
                        "name": "__type",
                        "comment": {
                          "description": null,
                          "blockTags": [],
                          "modifierTags": []
                        },
                        "typeParameters": [],
                        "parameters": [
                          {
                            "id": 375,
                            "name": "options",
                            "comment": {
                              "description": null,
                              "blockTags": [],
                              "modifierTags": []
                            },
                            "rest": false,
                            "optional": false,
                            "type": {
                              "kind": "reference",
                              "id": 656,
                              "name": "SafeTryOptions",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            }
                          }
                        ],
                        "returnType": {
                          "kind": "reference",
                          "id": null,
                          "name": "AsyncGenerator",
                          "packageName": "typescript",
                          "packageVersion": null,
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": 644,
                              "name": "Err",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 371,
                                  "name": "E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "any"
                                }
                              ]
                            },
                            {
                              "kind": "reference",
                              "id": 316,
                              "name": "Result",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": [
                                {
                                  "kind": "reference",
                                  "id": 370,
                                  "name": "T",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "reference",
                                  "id": 371,
                                  "name": "E",
                                  "packageName": "@sapphire/result",
                                  "packageVersion": null,
                                  "typeArguments": []
                                },
                                {
                                  "kind": "intrinsic",
                                  "type": "boolean"
                                }
                              ]
                            },
                            {
                              "kind": "intrinsic",
                              "type": "unknown"
                            }
                          ]
                        }
                      }
                    ],
                    "methods": null
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 316,
                    "name": "Result",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 370,
                        "name": "T",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "reference",
                        "id": 371,
                        "name": "E",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "intrinsic",
                        "type": "boolean"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 664,
      "name": "ResultError",
      "source": {
        "line": 1,
        "file": "ResultError.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/ResultError.ts#L1"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Error",
        "packageName": "typescript",
        "packageVersion": null,
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [
        {
          "id": 685,
          "name": "E",
          "constraint": null,
          "default": null
        }
      ],
      "construct": {
        "id": 674,
        "name": "constructor",
        "source": {
          "line": 4,
          "file": "ResultError.ts",
          "path": "packages/result/src/lib",
          "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/ResultError.ts#L4"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 664,
        "accessibility": "public",
        "parameters": [
          {
            "id": 677,
            "name": "message",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          },
          {
            "id": 678,
            "name": "value",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": 676,
              "name": "ResultError.E",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 684,
          "name": "cause",
          "source": {
            "line": 24,
            "file": "lib.es2022.error.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 682,
          "name": "message",
          "source": {
            "line": 1077,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 683,
          "name": "stack",
          "source": {
            "line": 1078,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 679,
          "name": "value",
          "source": {
            "line": 2,
            "file": "ResultError.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/ResultError.ts#L2"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 676,
            "name": "ResultError.E",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        },
        {
          "id": 673,
          "name": "stackTraceLimit",
          "source": {
            "line": 68,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "The `Error.stackTraceLimit` property specifies the number of stack frames\ncollected by a stack trace (whether generated by `new Error().stack` or\n`Error.captureStackTrace(obj)`).\n\nThe default value is `10` but may be set to any valid JavaScript number. Changes\nwill affect any stack trace captured _after_ the value has been changed.\n\nIf set to a non-number value, or set to a negative number, stack traces will\nnot capture any frames.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 681,
          "name": "name",
          "source": {
            "line": 9,
            "file": "ResultError.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/ResultError.ts#L9"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": [
        {
          "id": 665,
          "name": "captureStackTrace",
          "source": {
            "line": 52,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 666,
              "name": "captureStackTrace",
              "comment": {
                "description": "Creates a `.stack` property on `targetObject`, which when accessed returns\na string representing the location in the code at which\n`Error.captureStackTrace()` was called.\n\n```js\nconst myObject = {};\nError.captureStackTrace(myObject);\nmyObject.stack;  // Similar to `new Error().stack`\n```\n\nThe first line of the trace will be prefixed with\n`${myObject.name}: ${myObject.message}`.\n\nThe optional `constructorOpt` argument accepts a function. If given, all frames\nabove `constructorOpt`, including `constructorOpt`, will be omitted from the\ngenerated stack trace.\n\nThe `constructorOpt` argument is useful for hiding implementation\ndetails of error generation from the user. For instance:\n\n```js\nfunction a() {\n  b();\n}\n\nfunction b() {\n  c();\n}\n\nfunction c() {\n  // Create an error without stack trace to avoid calculating the stack trace twice.\n  const { stackTraceLimit } = Error;\n  Error.stackTraceLimit = 0;\n  const error = new Error();\n  Error.stackTraceLimit = stackTraceLimit;\n\n  // Capture the stack trace above function b\n  Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace\n  throw error;\n}\n\na();\n```",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 667,
                  "name": "targetObject",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  }
                },
                {
                  "id": 668,
                  "name": "constructorOpt",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 669,
          "name": "prepareStackTrace",
          "source": {
            "line": 56,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 664,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 670,
              "name": "prepareStackTrace",
              "comment": {
                "description": null,
                "blockTags": [
                  {
                    "name": "see",
                    "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 671,
                  "name": "err",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Error",
                    "packageName": "typescript",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                },
                {
                  "id": 672,
                  "name": "stackTraces",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "NodeJS.CallSite",
                      "packageName": "@types/node",
                      "packageVersion": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ]
        }
      ]
    }
  ],
  "enums": [],
  "functions": [
    {
      "id": 631,
      "name": "err",
      "source": {
        "line": 1304,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1304"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 632,
          "name": "err",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 633,
              "name": "E",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "undefined"
              }
            },
            {
              "id": 634,
              "name": "T",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ],
          "parameters": [
            {
              "id": 635,
              "name": "this",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "intrinsic",
                "type": "void"
              }
            },
            {
              "id": 636,
              "name": "value",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": true,
              "type": {
                "kind": "reference",
                "id": 325,
                "name": "E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 644,
            "name": "Err",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 325,
                "name": "E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 326,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 625,
      "name": "ok",
      "source": {
        "line": 1304,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1304"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 626,
          "name": "ok",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 627,
              "name": "T",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "undefined"
              }
            },
            {
              "id": 628,
              "name": "E",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ],
          "parameters": [
            {
              "id": 629,
              "name": "this",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "intrinsic",
                "type": "void"
              }
            },
            {
              "id": 630,
              "name": "value",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": true,
              "type": {
                "kind": "reference",
                "id": 319,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 641,
            "name": "Ok",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 319,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 320,
                "name": "E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    },
    {
      "id": 277,
      "name": "some",
      "source": {
        "line": 1047,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1047"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 278,
          "name": "some",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 279,
              "name": "T",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "undefined"
              }
            }
          ],
          "parameters": [
            {
              "id": 280,
              "name": "this",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "intrinsic",
                "type": "void"
              }
            },
            {
              "id": 281,
              "name": "value",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": true,
              "type": {
                "kind": "reference",
                "id": 5,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 286,
            "name": "Some",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 5,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 656,
      "name": "SafeTryOptions",
      "source": {
        "line": 1327,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1327"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 657,
          "name": "$",
          "source": {
            "line": 1328,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1328"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 656,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "query",
            "query": {
              "kind": "reference",
              "id": null,
              "name": "UnwrapSafeProperty",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 658,
          "name": "$async",
          "source": {
            "line": 1329,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1329"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 656,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reflection",
            "properties": null,
            "signatures": [
              {
                "id": 660,
                "name": "__type",
                "comment": {
                  "description": null,
                  "blockTags": [],
                  "modifierTags": []
                },
                "typeParameters": [
                  {
                    "id": 661,
                    "name": "T",
                    "constraint": null,
                    "default": null
                  },
                  {
                    "id": 662,
                    "name": "E",
                    "constraint": null,
                    "default": null
                  }
                ],
                "parameters": [
                  {
                    "id": 663,
                    "name": "result",
                    "comment": {
                      "description": null,
                      "blockTags": [],
                      "modifierTags": []
                    },
                    "rest": false,
                    "optional": false,
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "Promise",
                      "packageName": "typescript",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 316,
                          "name": "Result",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": [
                            {
                              "kind": "reference",
                              "id": 661,
                              "name": "T",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            },
                            {
                              "kind": "reference",
                              "id": 662,
                              "name": "E",
                              "packageName": "@sapphire/result",
                              "packageVersion": null,
                              "typeArguments": []
                            },
                            {
                              "kind": "intrinsic",
                              "type": "boolean"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "returnType": {
                  "kind": "reference",
                  "id": null,
                  "name": "AsyncGenerator",
                  "packageName": "typescript",
                  "packageVersion": null,
                  "typeArguments": [
                    {
                      "kind": "reference",
                      "id": 644,
                      "name": "Err",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": [
                        {
                          "kind": "reference",
                          "id": 662,
                          "name": "E",
                          "packageName": "@sapphire/result",
                          "packageVersion": null,
                          "typeArguments": []
                        },
                        {
                          "kind": "intrinsic",
                          "type": "any"
                        }
                      ]
                    },
                    {
                      "kind": "reference",
                      "id": 661,
                      "name": "T",
                      "packageName": "@sapphire/result",
                      "packageVersion": null,
                      "typeArguments": []
                    },
                    {
                      "kind": "intrinsic",
                      "type": "unknown"
                    }
                  ]
                }
              }
            ],
            "methods": null
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [
    {
      "id": 264,
      "name": "Option",
      "source": {
        "line": 8,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L8"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 269,
          "name": "Any",
          "source": {
            "line": 1039,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1039"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Option",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              }
            ]
          }
        },
        {
          "id": 267,
          "name": "None",
          "source": {
            "line": 1038,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1038"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 268,
              "name": "T",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Option",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 268,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "false"
              }
            ]
          }
        },
        {
          "id": 270,
          "name": "Resolvable",
          "source": {
            "line": 1040,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1040"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 271,
              "name": "T",
              "constraint": null,
              "default": null
            },
            {
              "id": 272,
              "name": "Exists",
              "constraint": {
                "kind": "intrinsic",
                "type": "boolean"
              },
              "default": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ],
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": 271,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "intrinsic",
                "type": "undefined"
              },
              {
                "kind": "reference",
                "id": 1,
                "name": "Option",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 271,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 272,
                    "name": "Exists",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 265,
          "name": "Some",
          "source": {
            "line": 1037,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1037"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 266,
              "name": "T",
              "constraint": null,
              "default": null
            }
          ],
          "type": {
            "kind": "reference",
            "id": 1,
            "name": "Option",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 266,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "true"
              }
            ]
          }
        },
        {
          "id": 273,
          "name": "UnwrapSome",
          "source": {
            "line": 1041,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1041"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 274,
              "name": "T",
              "constraint": {
                "kind": "reference",
                "id": 290,
                "name": "AnyOption",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              "default": null
            }
          ],
          "type": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 274,
              "name": "T",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": 265,
              "name": "Option.Some",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "inferred",
                  "type": "S"
                }
              ]
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "S",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "falseType": {
              "kind": "intrinsic",
              "type": "never"
            }
          }
        },
        {
          "id": 275,
          "name": "UnwrapSomeArray",
          "source": {
            "line": 1042,
            "file": "Option.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1042"
          },
          "namespaceParentId": 264,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 276,
              "name": "T",
              "constraint": {
                "kind": "union",
                "types": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 290,
                        "name": "AnyOption",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  {
                    "kind": "tuple",
                    "types": []
                  }
                ]
              },
              "default": null
            }
          ],
          "type": {
            "kind": "mapped",
            "parameter": "P",
            "parameterType": {
              "kind": "typeOperator",
              "operator": "keyof",
              "type": {
                "kind": "reference",
                "id": 276,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            },
            "nameType": null,
            "templateType": {
              "kind": "reference",
              "id": 273,
              "name": "Option.UnwrapSome",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 276,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "reference",
                    "id": null,
                    "name": "P",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ]
            },
            "readonly": "-",
            "optional": null
          }
        }
      ],
      "variables": []
    },
    {
      "id": 605,
      "name": "Result",
      "source": {
        "line": 19,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L19"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "classes": [],
      "enums": [],
      "functions": [],
      "interfaces": [],
      "namespaces": [],
      "typeAliases": [
        {
          "id": 612,
          "name": "Any",
          "source": {
            "line": 1291,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1291"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [],
          "type": {
            "kind": "reference",
            "id": 316,
            "name": "Result",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "any"
              },
              {
                "kind": "intrinsic",
                "type": "any"
              }
            ]
          }
        },
        {
          "id": 609,
          "name": "Err",
          "source": {
            "line": 1290,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1290"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 610,
              "name": "E",
              "constraint": null,
              "default": null
            },
            {
              "id": 611,
              "name": "T",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": 316,
            "name": "Result",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 611,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 610,
                "name": "E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "false"
              }
            ]
          }
        },
        {
          "id": 606,
          "name": "Ok",
          "source": {
            "line": 1289,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1289"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 607,
              "name": "T",
              "constraint": null,
              "default": null
            },
            {
              "id": 608,
              "name": "E",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ],
          "type": {
            "kind": "reference",
            "id": 316,
            "name": "Result",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": [
              {
                "kind": "reference",
                "id": 607,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 608,
                "name": "E",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "literal",
                "value": "true"
              }
            ]
          }
        },
        {
          "id": 613,
          "name": "Resolvable",
          "source": {
            "line": 1292,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1292"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 614,
              "name": "T",
              "constraint": null,
              "default": null
            },
            {
              "id": 615,
              "name": "E",
              "constraint": null,
              "default": {
                "kind": "intrinsic",
                "type": "any"
              }
            },
            {
              "id": 616,
              "name": "Success",
              "constraint": {
                "kind": "intrinsic",
                "type": "boolean"
              },
              "default": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ],
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": 614,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": 316,
                "name": "Result",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 614,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 615,
                    "name": "E",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": 616,
                    "name": "Success",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 619,
          "name": "UnwrapErr",
          "source": {
            "line": 1294,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1294"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 620,
              "name": "T",
              "constraint": {
                "kind": "reference",
                "id": 647,
                "name": "AnyResult",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              "default": null
            }
          ],
          "type": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 620,
              "name": "T",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": 609,
              "name": "Result.Err",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "inferred",
                  "type": "S"
                }
              ]
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "S",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "falseType": {
              "kind": "intrinsic",
              "type": "never"
            }
          }
        },
        {
          "id": 623,
          "name": "UnwrapErrArray",
          "source": {
            "line": 1299,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1299"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 624,
              "name": "T",
              "constraint": {
                "kind": "union",
                "types": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 647,
                        "name": "AnyResult",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  {
                    "kind": "tuple",
                    "types": []
                  }
                ]
              },
              "default": null
            }
          ],
          "type": {
            "kind": "mapped",
            "parameter": "P",
            "parameterType": {
              "kind": "typeOperator",
              "operator": "keyof",
              "type": {
                "kind": "reference",
                "id": 624,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            },
            "nameType": null,
            "templateType": {
              "kind": "reference",
              "id": 619,
              "name": "Result.UnwrapErr",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 624,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "reference",
                    "id": null,
                    "name": "P",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ]
            },
            "readonly": "-",
            "optional": null
          }
        },
        {
          "id": 617,
          "name": "UnwrapOk",
          "source": {
            "line": 1293,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1293"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 618,
              "name": "T",
              "constraint": {
                "kind": "reference",
                "id": 647,
                "name": "AnyResult",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              },
              "default": null
            }
          ],
          "type": {
            "kind": "conditional",
            "checkType": {
              "kind": "reference",
              "id": 618,
              "name": "T",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "extendsType": {
              "kind": "reference",
              "id": 606,
              "name": "Result.Ok",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "inferred",
                  "type": "S"
                }
              ]
            },
            "trueType": {
              "kind": "reference",
              "id": null,
              "name": "S",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": []
            },
            "falseType": {
              "kind": "intrinsic",
              "type": "never"
            }
          }
        },
        {
          "id": 621,
          "name": "UnwrapOkArray",
          "source": {
            "line": 1296,
            "file": "Result.ts",
            "path": "packages/result/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1296"
          },
          "namespaceParentId": 605,
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "external": false,
          "typeParameters": [
            {
              "id": 622,
              "name": "T",
              "constraint": {
                "kind": "union",
                "types": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": 647,
                        "name": "AnyResult",
                        "packageName": "@sapphire/result",
                        "packageVersion": null,
                        "typeArguments": []
                      }
                    }
                  },
                  {
                    "kind": "tuple",
                    "types": []
                  }
                ]
              },
              "default": null
            }
          ],
          "type": {
            "kind": "mapped",
            "parameter": "P",
            "parameterType": {
              "kind": "typeOperator",
              "operator": "keyof",
              "type": {
                "kind": "reference",
                "id": 622,
                "name": "T",
                "packageName": "@sapphire/result",
                "packageVersion": null,
                "typeArguments": []
              }
            },
            "nameType": null,
            "templateType": {
              "kind": "reference",
              "id": 617,
              "name": "Result.UnwrapOk",
              "packageName": "@sapphire/result",
              "packageVersion": null,
              "typeArguments": [
                {
                  "kind": "indexedAccess",
                  "objectType": {
                    "kind": "reference",
                    "id": 622,
                    "name": "T",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  },
                  "indexType": {
                    "kind": "reference",
                    "id": null,
                    "name": "P",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              ]
            },
            "readonly": "-",
            "optional": null
          }
        }
      ],
      "variables": []
    }
  ],
  "typeAliases": [
    {
      "id": 290,
      "name": "AnyOption",
      "source": {
        "line": 1059,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1059"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": 269,
        "name": "Option.Any",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": []
      }
    },
    {
      "id": 647,
      "name": "AnyResult",
      "source": {
        "line": 1319,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1319"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "reference",
        "id": 612,
        "name": "Result.Any",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": []
      }
    },
    {
      "id": 644,
      "name": "Err",
      "source": {
        "line": 1318,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1318"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 645,
          "name": "E",
          "constraint": null,
          "default": null
        },
        {
          "id": 646,
          "name": "T",
          "constraint": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      ],
      "type": {
        "kind": "reference",
        "id": 609,
        "name": "Result.Err",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 645,
            "name": "E",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 646,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 288,
      "name": "None",
      "source": {
        "line": 1058,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1058"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 289,
          "name": "T",
          "constraint": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      ],
      "type": {
        "kind": "reference",
        "id": 267,
        "name": "Option.None",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 289,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 641,
      "name": "Ok",
      "source": {
        "line": 1317,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1317"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 642,
          "name": "T",
          "constraint": null,
          "default": null
        },
        {
          "id": 643,
          "name": "E",
          "constraint": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        }
      ],
      "type": {
        "kind": "reference",
        "id": 606,
        "name": "Result.Ok",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 642,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 643,
            "name": "E",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 283,
      "name": "OptionResolvable",
      "source": {
        "line": 1055,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1055"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 284,
          "name": "T",
          "constraint": null,
          "default": null
        },
        {
          "id": 285,
          "name": "Exists",
          "constraint": {
            "kind": "intrinsic",
            "type": "boolean"
          },
          "default": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "type": {
        "kind": "reference",
        "id": 270,
        "name": "Option.Resolvable",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 284,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 285,
            "name": "Exists",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 637,
      "name": "ResultResolvable",
      "source": {
        "line": 1315,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1315"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 638,
          "name": "T",
          "constraint": null,
          "default": null
        },
        {
          "id": 639,
          "name": "E",
          "constraint": null,
          "default": {
            "kind": "intrinsic",
            "type": "any"
          }
        },
        {
          "id": 640,
          "name": "Success",
          "constraint": {
            "kind": "intrinsic",
            "type": "boolean"
          },
          "default": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "type": {
        "kind": "reference",
        "id": 613,
        "name": "Result.Resolvable",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 638,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 639,
            "name": "E",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 640,
            "name": "Success",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 286,
      "name": "Some",
      "source": {
        "line": 1057,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1057"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 287,
          "name": "T",
          "constraint": null,
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 265,
        "name": "Option.Some",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 287,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 650,
      "name": "UnwrapErr",
      "source": {
        "line": 1322,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1322"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 651,
          "name": "T",
          "constraint": {
            "kind": "reference",
            "id": 647,
            "name": "AnyResult",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 619,
        "name": "Result.UnwrapErr",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 651,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 654,
      "name": "UnwrapErrArray",
      "source": {
        "line": 1325,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1325"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 655,
          "name": "T",
          "constraint": {
            "kind": "union",
            "types": [
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 647,
                    "name": "AnyResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              },
              {
                "kind": "tuple",
                "types": []
              }
            ]
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 623,
        "name": "Result.UnwrapErrArray",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 655,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 648,
      "name": "UnwrapOk",
      "source": {
        "line": 1321,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1321"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 649,
          "name": "T",
          "constraint": {
            "kind": "reference",
            "id": 647,
            "name": "AnyResult",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 617,
        "name": "Result.UnwrapOk",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 649,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 652,
      "name": "UnwrapOkArray",
      "source": {
        "line": 1324,
        "file": "Result.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Result.ts#L1324"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 653,
          "name": "T",
          "constraint": {
            "kind": "union",
            "types": [
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 647,
                    "name": "AnyResult",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              },
              {
                "kind": "tuple",
                "types": []
              }
            ]
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 621,
        "name": "Result.UnwrapOkArray",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 653,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 291,
      "name": "UnwrapSome",
      "source": {
        "line": 1061,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1061"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 292,
          "name": "T",
          "constraint": {
            "kind": "reference",
            "id": 290,
            "name": "AnyOption",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 273,
        "name": "Option.UnwrapSome",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 292,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 293,
      "name": "UnwrapSomeArray",
      "source": {
        "line": 1062,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1062"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [
        {
          "id": 294,
          "name": "T",
          "constraint": {
            "kind": "union",
            "types": [
              {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 290,
                    "name": "AnyOption",
                    "packageName": "@sapphire/result",
                    "packageVersion": null,
                    "typeArguments": []
                  }
                }
              },
              {
                "kind": "tuple",
                "types": []
              }
            ]
          },
          "default": null
        }
      ],
      "type": {
        "kind": "reference",
        "id": 275,
        "name": "Option.UnwrapSomeArray",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "reference",
            "id": 294,
            "name": "T",
            "packageName": "@sapphire/result",
            "packageVersion": null,
            "typeArguments": []
          }
        ]
      }
    }
  ],
  "variables": [
    {
      "id": 282,
      "name": "none",
      "source": {
        "line": 1047,
        "file": "Option.ts",
        "path": "packages/result/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/82e33d5d9ed36a60053524d71a873a64f40d3545/packages/result/src/lib/Option.ts#L1047"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "type": {
        "kind": "reference",
        "id": 1,
        "name": "Option",
        "packageName": "@sapphire/result",
        "packageVersion": null,
        "typeArguments": [
          {
            "kind": "intrinsic",
            "type": "any"
          },
          {
            "kind": "literal",
            "value": "false"
          }
        ]
      }
    }
  ]
}