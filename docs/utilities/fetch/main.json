{
  "typeDocJsonParserVersion": "10.0.0",
  "id": 0,
  "name": "@sapphire/fetch",
  "version": "3.0.2",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://raw.githubusercontent.com/sapphiredev/assets/main/banners/SapphireCommunity.png)\n\n# @sapphire/fetch\n\n**Tiny wrapper around Node's global `fetch` for improved TypeScript and data type support**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/fetch?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/fetch)\n[![npm](https://img.shields.io/npm/v/@sapphire/fetch?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/fetch)\n\n</div>\n\n**Table of Contents**\n\n-   [Description](#description)\n-   [Features](#features)\n-   [Installation](#installation)\n-   [Usage](#usage)\n    -   [`GET`ting JSON data](#getting-json-data)\n    -   [`GET`ting Buffer data (images, etc.)](#getting-buffer-data-images-etc)\n    -   [`POST`ing JSON data](#posting-json-data)\n-   [Buy us some doughnuts](#buy-us-some-doughnuts)\n-   [Contributors](#contributors)\n\n## Description\n\nNode has a great global `fetch` (powered by [undici]) for making API calls, but because it focuses solely on bringing the [Fetch API][fetch-mdn] to Node.js, it doesn't provide specific error messages and handling for different return types (JSON, Buffer, plain text, etc). This is where `@sapphire/fetch` comes in. The syntax is more restrictive than that of [undici], but that makes it consistent and easier to use in TypeScript.\n\n## Features\n\n-   Written in TypeScript\n-   Fully tested\n-   Exported `enum` for the common return data types\n-   Throws distinctive errors when the API returns a \"not ok\" status code to make them easier to understand\n-   Enforces casting the return type when requesting JSON data, to ensure your return data is strictly typed\n-   Uses global `fetch`, which for NodeJS is [undici] and for browsers is the [Fetch API][fetch-mdn]\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/fetch\n```\n\n## Usage\n\n**Note:** While this section uses `import`, it maps 1:1 with CommonJS' require syntax. For example, `import { fetch } from '@sapphire/fetch'` is the same as `const { fetch } = require('@sapphire/fetch')`.\n\n**Note**: `fetch` can also be imported as a default import: `import fetch from '@sapphire/fetch'`.\n\n### `GET`ting JSON data\n\n```typescript\n// Import the fetch function\nimport { fetch, FetchResultTypes } from '@sapphire/fetch';\n\ninterface JsonPlaceholderResponse {\n\tuserId: number;\n\tid: number;\n\ttitle: string;\n\tcompleted: boolean;\n}\n\n// Fetch the data. No need to call `.json()` after making the request!\nconst data = await fetch<JsonPlaceholderResponse>('https://jsonplaceholder.typicode.com/todos/1', FetchResultTypes.JSON);\n\n// Do something with the data\nconsole.log(data.userId);\n```\n\n### `GET`ting Buffer data (images, etc.)\n\n```typescript\n// Import the fetch function\nimport { fetch, FetchResultTypes } from '@sapphire/fetch';\n\n// Fetch the data. No need to call `.buffer()` after making the request!\nconst sapphireLogo = await fetch('https://github.com/sapphiredev.png', FetchResultTypes.Buffer);\n\n// sapphireLogo is the `Buffer` of the image\nconsole.log(sapphireLogo);\n```\n\n### `POST`ing JSON data\n\n```typescript\n// Import the fetch function\nimport { fetch, FetchResultTypes, FetchMethods } from '@sapphire/fetch';\n\n// Post the data. No need to call `.json()` after making the request!\nconst responseData = await fetch(\n\t'https://jsonplaceholder.typicode.com/todos',\n\t{\n\t\tmethod: FetchMethods.Post,\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: 'John Doe'\n\t\t})\n\t},\n\tFetchResultTypes.JSON\n);\n\n// Do something with the response data\nconsole.log(responseData);\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, PayPal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/utilities/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/utilities\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n\n<!-- LINKS -->\n\n[fetch-mdn]: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n[undici]: https://github.com/nodejs/undici\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/fetch@3.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@3.0.2...@sapphire/fetch@3.0.2) - (2024-01-19)\n\n## üêõ Bug Fixes\n\n- Fixed commonjs typings export mapping (#707) ([216ff02](https://github.com/sapphiredev/utilities/commit/216ff0260d63a9590357f9a5069f1ae2b34eaf5d))\n\n# [@sapphire/fetch@3.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@3.0.1...@sapphire/fetch@3.0.1) - (2023-12-18)\n\n## üêõ Bug Fixes\n\n- **fetch:** Add additional reference lib comment (#695) ([83400f3](https://github.com/sapphiredev/utilities/commit/83400f3330ae4bb47a8e8174164fb9141eaeeec8))\n\n## üìù Documentation\n\n- **fetch:** README cleanup (#683) ([147b2d5](https://github.com/sapphiredev/utilities/commit/147b2d543ba26de6875f25e8800b4f02f7f505aa))\n\n# [@sapphire/fetch@3.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@3.0.0...@sapphire/fetch@3.0.0) - (2023-12-10)\n\n## üöÄ Features\n\n- **fetch:** Drop cross-fetch, always use global fetch ([c716bc2](https://github.com/sapphiredev/utilities/commit/c716bc2fba8f6e217113d9c13e5664753a2433a1))\n  - üí• **BREAKING CHANGE:** This version and all subsequent versions require\nNodeJS v18 or above, or v16 with the `--experimental-fetch` flag\n\n## üß™ Testing\n\n- Switch from nock to mfw ([5a5b3ff](https://github.com/sapphiredev/utilities/commit/5a5b3ff466e07edba6122705588ce5762a82ac31))\n\n# [@sapphire/fetch@2.4.2](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.4.2...@sapphire/fetch@2.4.2) - (2023-12-04)\n\n## üè† Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## üêõ Bug Fixes\n\n- **fetch:** Properly split CJS, ESM and IIFE ([4c6d808](https://github.com/sapphiredev/utilities/commit/4c6d808ebf89a93153c96919d00d1a36e644097a))\n- Update export mapping for proper ESM/CJS split ([dd0cff8](https://github.com/sapphiredev/utilities/commit/dd0cff8e9b03a15812f25f7a1180501a92422629))\n- **fetch:** Update cross-fetch to v4.0.0 ([e6ff4fc](https://github.com/sapphiredev/utilities/commit/e6ff4fc5ce90d6a21158e39b833e515833f968d0))\n- **deps:** Update all non-major dependencies (#607) ([9cc8bd0](https://github.com/sapphiredev/utilities/commit/9cc8bd0d4b5d650deab2c913e6c3d713861bae28))\n- **deps:** Update all non-major dependencies (#577) ([291dd67](https://github.com/sapphiredev/utilities/commit/291dd6783e57d8f075ce566218ba076ef6c4bbbd))\n- **deps:** Update all non-major dependencies (#545) ([40ca040](https://github.com/sapphiredev/utilities/commit/40ca040a21d8a0949682051a3a974538183a400e))\n- **deps:** Update all non-major dependencies (#544) ([cc78f17](https://github.com/sapphiredev/utilities/commit/cc78f17390c7f3db08af92bf46a5a70a9c11dd5f))\n- **deps:** Update all non-major dependencies (#532) ([8033d1f](https://github.com/sapphiredev/utilities/commit/8033d1ff7a5a1974134c61f424f171cccb2915e1))\n- **deps:** Update all non-major dependencies (#514) ([21b07d5](https://github.com/sapphiredev/utilities/commit/21b07d5db529a0d982647a60de98e46f36f1ac93))\n- **deps:** Update all non-major dependencies (#505) ([6178296](https://github.com/sapphiredev/utilities/commit/617829649e1e4deeee02b14533b5377cd5bc1fb3))\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## üìù Documentation\n\n- Add @06000208 as a contributor ([fa3349e](https://github.com/sapphiredev/utilities/commit/fa3349e55ce4ad008785211dec7bf8e2b5d933df))\n- Add @didinele as a contributor ([42ef7b6](https://github.com/sapphiredev/utilities/commit/42ef7b656c48fd0e720119db1d622c8bba2791e9))\n- Add @goestav as a contributor ([0e56a92](https://github.com/sapphiredev/utilities/commit/0e56a92a4e2d0942bfa207f81a8cb03b32312034))\n- Add @CitTheDev as a contributor ([34169ea](https://github.com/sapphiredev/utilities/commit/34169eae1dc0476ccf5a6c4f36e28602a204829e))\n- Add @legendhimslef as a contributor ([059b6f1](https://github.com/sapphiredev/utilities/commit/059b6f1ab5362d46d58624d06c1aa39192b0716f))\n- Add @r-priyam as a contributor ([fb278ba](https://github.com/sapphiredev/utilities/commit/fb278bacf627ec6fc88752eafeb12df5f3177a2c))\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n- Update @RealShadowNova as a contributor ([a869ba0](https://github.com/sapphiredev/utilities/commit/a869ba0abfad041610b9115187d426aebe671af6))\n- Add @muchnameless as a contributor ([a1221fe](https://github.com/sapphiredev/utilities/commit/a1221fea68506e99591d5d00ec552a07c26833f9))\n- Add @enxg as a contributor ([d2382f0](https://github.com/sapphiredev/utilities/commit/d2382f04e3909cb4ad11798a0a10e683f6cf5383))\n- Add @EvolutionX-10 as a contributor ([efc3a32](https://github.com/sapphiredev/utilities/commit/efc3a320a72ae258996dd62866d206c33f8d4961))\n\n## üß™ Testing\n\n- Update vitest to coverage v8 ([a4bc6e4](https://github.com/sapphiredev/utilities/commit/a4bc6e4f24ea60143a150ecc76fda6484f172ab9))\n\n# [@sapphire/fetch@2.4.1](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.4.0...@sapphire/fetch@2.4.1) - (2022-07-13)\n\n## üè† Refactor\n\n- Change `const enum` for regular `enum` (#394) ([960e973](https://github.com/sapphiredev/utilities/commit/960e973dc63aeccdc0012d72a4fef052bbd37b6f))\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([84af0db](https://github.com/sapphiredev/utilities/commit/84af0db2db749223b036aa99fe19a2e9af5681c6))\n\n## üß™ Testing\n\n- Migrate to vitest (#380) ([075ec73](https://github.com/sapphiredev/utilities/commit/075ec73c7a8e3374fad3ada612d37eb4ac36ec8d))\n\n# [@sapphire/fetch@2.4.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.3.1...@sapphire/fetch@2.4.0) - (2022-06-05)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([50cd8de](https://github.com/sapphiredev/utilities/commit/50cd8dea593b6f5ae75571209456b3421e2ca59a))\n\n## üìù Documentation\n\n- Add @MajesticString as a contributor ([295b3e9](https://github.com/sapphiredev/utilities/commit/295b3e9849a4b0fe64074bae02f6426378a303c3))\n- Add @Mzato0001 as a contributor ([c790ef2](https://github.com/sapphiredev/utilities/commit/c790ef25df2d7e22888fa9f8169167aa555e9e19))\n- Add @NotKaskus as a contributor ([00da8f1](https://github.com/sapphiredev/utilities/commit/00da8f199137b9277119823f322d1f2d168d928a))\n- Add @imranbarbhuiya as a contributor ([fb674c2](https://github.com/sapphiredev/utilities/commit/fb674c2c5594d41e71662263553dcb4bac9e37f4))\n- Add @axisiscool as a contributor ([ce1aa31](https://github.com/sapphiredev/utilities/commit/ce1aa316871a88d3663efbdf2a42d3d8dfe6a27f))\n- Add @dhruv-kaushikk as a contributor ([ebbf43f](https://github.com/sapphiredev/utilities/commit/ebbf43f63617daba96e72c50a234bf8b64f6ddc4))\n- Add @Commandtechno as a contributor ([f1d69fa](https://github.com/sapphiredev/utilities/commit/f1d69fabe1ee0abe4be08b19e63dbec03102f7ce))\n- Fix typedoc causing OOM crashes ([63ba41c](https://github.com/sapphiredev/utilities/commit/63ba41c4b6678554b1c7043a22d3296db4f59360))\n\n## üöÄ Features\n\n- **fetch:** Accept JS objects for the request body (#365) ([a3eee88](https://github.com/sapphiredev/utilities/commit/a3eee88f36192655c50bbde05ecca1e7d07c464d))\n\n## üß™ Testing\n\n- Fix fetch tests for Node 18 ([e92fb02](https://github.com/sapphiredev/utilities/commit/e92fb025cb1dcb5f33c1ea76fb25a4a1b5b37368))\n\n## [2.3.1](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.3.0...@sapphire/fetch@2.3.1) (2022-04-01)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n# [2.3.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.2.0...@sapphire/fetch@2.3.0) (2022-03-06)\n\n### Features\n\n-   allow module: NodeNext ([#306](https://github.com/sapphiredev/utilities/issues/306)) ([9dc6dd6](https://github.com/sapphiredev/utilities/commit/9dc6dd619efab879bb2b0b3c9e64304e10a67ed6))\n\n# [2.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.1.0...@sapphire/fetch@2.2.0) (2022-03-01)\n\n### Features\n\n-   **fetch:** add common media content types enum ([#303](https://github.com/sapphiredev/utilities/issues/303)) ([2f1c464](https://github.com/sapphiredev/utilities/commit/2f1c4640a9d4d12b1a22d0227172323d54eaed8f))\n-   **ts-config:** add multi-config structure ([#281](https://github.com/sapphiredev/utilities/issues/281)) ([b5191d7](https://github.com/sapphiredev/utilities/commit/b5191d7f2416dc5838590c4ff221454925553e37))\n\n# [2.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.0.4...@sapphire/fetch@2.1.0) (2022-01-28)\n\n### Features\n\n-   change build system to tsup ([#270](https://github.com/sapphiredev/utilities/issues/270)) ([365a53a](https://github.com/sapphiredev/utilities/commit/365a53a5517a01a0926cf28a83c96b63f32ed9f8))\n\n## [2.0.4](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.0.3...@sapphire/fetch@2.0.4) (2022-01-10)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n## [2.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.0.2...@sapphire/fetch@2.0.3) (2021-11-06)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n## [2.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.0.1...@sapphire/fetch@2.0.2) (2021-10-17)\n\n### Bug Fixes\n\n-   allow more node & npm versions in engines field ([5977d2a](https://github.com/sapphiredev/utilities/commit/5977d2a30a4b2cfdf84aff3f33af03ffde1bbec5))\n\n## [2.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@2.0.0...@sapphire/fetch@2.0.1) (2021-10-11)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n# [2.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.5...@sapphire/fetch@2.0.0) (2021-10-04)\n\n### Features\n\n-   **fetch:** migrate to using cross-fetch ([#149](https://github.com/sapphiredev/utilities/issues/149)) ([a8baab9](https://github.com/sapphiredev/utilities/commit/a8baab978814ca3aa18992120af7ad004ceaee80))\n-   **fetch:** set minimum NodeJS to v14 ([56889ab](https://github.com/sapphiredev/utilities/commit/56889abce158119adf1afcc1ec4cee8cbb411c79))\n\n### BREAKING CHANGES\n\n-   **fetch:** `fetch` is no longer on the default export. Use a named import instead.\n-   **fetch:** This package no longer depends on `node-fetch`\n-   **fetch:** This package no longer depends on `@types/node-fetch` for TypeScript users\n\n## [1.0.5](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.4...@sapphire/fetch@1.0.5) (2021-06-27)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n## [1.0.4](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.3...@sapphire/fetch@1.0.4) (2021-06-27)\n\n**Note:** Version bump only for package @sapphire/fetch\n\n## [1.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.2...@sapphire/fetch@1.0.3) (2021-06-06)\n\n### Bug Fixes\n\n-   remove peer deps, update dev deps, update READMEs ([#124](https://github.com/sapphiredev/utilities/issues/124)) ([67256ed](https://github.com/sapphiredev/utilities/commit/67256ed43b915b02a8b5c68230ba82d6210c5032))\n\n## [1.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.1...@sapphire/fetch@1.0.2) (2021-05-20)\n\n### Bug Fixes\n\n-   **fetch:** mark package as side effect free ([8e3e470](https://github.com/sapphiredev/utilities/commit/8e3e470e7803f67593f18d2454cb1f95a8a35f18))\n\n## [1.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/fetch@1.0.0...@sapphire/fetch@1.0.1) (2021-05-02)\n\n### Bug Fixes\n\n-   drop the `www.` from the SapphireJS URL ([494d89f](https://github.com/sapphiredev/utilities/commit/494d89ffa04f78c195b93d7905b3232884f7d7e2))\n-   update all the SapphireJS URLs from `.com` to `.dev` ([f59b46d](https://github.com/sapphiredev/utilities/commit/f59b46d1a0ebd39cad17b17d71cd3b9da808d5fd))\n\n# 1.0.0 (2021-04-21)\n\n### Features\n\n-   add fetch package ([#107](https://github.com/sapphiredev/utilities/issues/107)) ([891034c](https://github.com/sapphiredev/utilities/commit/891034cf5f9e6f2c700999fd39a71e490c5dc766))\n",
  "classes": [
    {
      "id": 44,
      "name": "QueryError",
      "source": {
        "line": 7,
        "file": "QueryError.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L7"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The QueryError class which is thrown by the `fetch` method",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": null,
        "name": "Error",
        "packageName": "typescript",
        "typeArguments": []
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 55,
        "name": "constructor",
        "source": {
          "line": 19,
          "file": "QueryError.ts",
          "path": "packages/fetch/src/lib",
          "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L19"
        },
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 44,
        "accessibility": "public",
        "parameters": [
          {
            "id": 57,
            "name": "url",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          },
          {
            "id": 58,
            "name": "code",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "number"
            }
          },
          {
            "id": 59,
            "name": "response",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Response",
              "packageName": "typescript",
              "typeArguments": []
            }
          },
          {
            "id": 60,
            "name": "body",
            "comment": {
              "description": null,
              "blockTags": [],
              "modifierTags": []
            },
            "rest": false,
            "optional": false,
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        ]
      },
      "properties": [
        {
          "id": 65,
          "name": "#json",
          "source": {
            "line": 17,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L17"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 63,
          "name": "body",
          "source": {
            "line": 13,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L13"
          },
          "comment": {
            "description": "The returned response body as a string",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 71,
          "name": "cause",
          "source": {
            "line": 24,
            "file": "lib.es2022.error.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "unknown"
          }
        },
        {
          "id": 62,
          "name": "code",
          "source": {
            "line": 11,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L11"
          },
          "comment": {
            "description": "The HTTP status code.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 69,
          "name": "message",
          "source": {
            "line": 1077,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 68,
          "name": "name",
          "source": {
            "line": 1076,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 64,
          "name": "response",
          "source": {
            "line": 15,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L15"
          },
          "comment": {
            "description": "The original {@link Response} object",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Response",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 70,
          "name": "stack",
          "source": {
            "line": 1078,
            "file": "lib.es5.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 61,
          "name": "url",
          "source": {
            "line": 9,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L9"
          },
          "comment": {
            "description": "The requested url.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 49,
          "name": "prepareStackTrace",
          "source": {
            "line": 28,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": "Optional override for formatting stack traces",
            "blockTags": [
              {
                "name": "see",
                "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
              }
            ],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reflection",
            "properties": null,
            "signatures": [
              {
                "id": 51,
                "name": "__type",
                "comment": {
                  "description": null,
                  "blockTags": [],
                  "modifierTags": []
                },
                "typeParameters": [],
                "parameters": [
                  {
                    "id": 52,
                    "name": "err",
                    "comment": {
                      "description": null,
                      "blockTags": [],
                      "modifierTags": []
                    },
                    "rest": false,
                    "optional": false,
                    "type": {
                      "kind": "reference",
                      "id": null,
                      "name": "Error",
                      "packageName": "typescript",
                      "typeArguments": []
                    }
                  },
                  {
                    "id": 53,
                    "name": "stackTraces",
                    "comment": {
                      "description": null,
                      "blockTags": [],
                      "modifierTags": []
                    },
                    "rest": false,
                    "optional": false,
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "reference",
                        "id": null,
                        "name": "__global.NodeJS.CallSite",
                        "packageName": "@types/node",
                        "typeArguments": []
                      }
                    }
                  }
                ],
                "returnType": {
                  "kind": "intrinsic",
                  "type": "any"
                }
              }
            ],
            "methods": null
          }
        },
        {
          "id": 54,
          "name": "stackTraceLimit",
          "source": {
            "line": 30,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": [
        {
          "id": 66,
          "name": "toJSON",
          "source": {
            "line": 28,
            "file": "QueryError.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/QueryError.ts#L28"
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 67,
              "name": "toJSON",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "any"
              }
            }
          ]
        },
        {
          "id": 45,
          "name": "captureStackTrace",
          "source": {
            "line": 21,
            "file": "globals.d.ts",
            "path": "node_modules/@types/node",
            "url": null
          },
          "parentId": 44,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 46,
              "name": "captureStackTrace",
              "comment": {
                "description": "Create .stack property on a target object",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 47,
                  "name": "targetObject",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "object"
                  }
                },
                {
                  "id": 48,
                  "name": "constructorOpt",
                  "comment": {
                    "description": null,
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": true,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Function",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        }
      ]
    }
  ],
  "enums": [
    {
      "id": 88,
      "name": "FetchMediaContentTypes",
      "source": {
        "line": 92,
        "file": "types.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L92"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "A list of common [Media Content Types](https://www.iana.org/assignments/media-types/media-types.xhtml) as defined by the [IANA](https://www.iana.org/).\nMedia Content Types are also known as a Multipurpose Internet Mail Extensions or MIME type\nMedia Content Types are defined and standardized in IETF's [RFC 6838](https://datatracker.ietf.org/doc/html/rfc6838).",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 89,
          "name": "AudioAac",
          "source": {
            "line": 97,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L97"
          },
          "comment": {
            "description": "The `audio/aac` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / audio / aac](https://www.iana.org/assignments/media-types/audio/aac)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/aac"
        },
        {
          "id": 90,
          "name": "AudioMp4",
          "source": {
            "line": 103,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L103"
          },
          "comment": {
            "description": "The `audio/mp4` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / audio / mp4](https://www.iana.org/assignments/media-types/audio/mp4)\n - [[RFC4337](https://www.iana.org/go/rfc4337)] [[RFC6381](https://www.iana.org/go/rfc6381)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/mp4"
        },
        {
          "id": 91,
          "name": "AudioMpeg",
          "source": {
            "line": 109,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L109"
          },
          "comment": {
            "description": "The `audio/mpeg` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / audio / mpeg](https://www.iana.org/assignments/media-types/audio/mpeg)\n - [[RFC3003](https://www.iana.org/go/rfc3003)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/mpeg"
        },
        {
          "id": 92,
          "name": "AudioOgg",
          "source": {
            "line": 115,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L115"
          },
          "comment": {
            "description": "The `audio/ogg` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / audio / ogg](https://www.iana.org/assignments/media-types/audio/ogg)\n - [[RFC5334](https://www.iana.org/go/rfc5334)] [[RFC7845](https://www.iana.org/go/rfc7845)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/ogg"
        },
        {
          "id": 93,
          "name": "AudioOpus",
          "source": {
            "line": 121,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L121"
          },
          "comment": {
            "description": "The `audio/opus` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / audio / opus](https://www.iana.org/assignments/media-types/audio/opus)\n - [[RFC7587](https://www.iana.org/go/rfc7587)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/opus"
        },
        {
          "id": 94,
          "name": "AudioVorbis",
          "source": {
            "line": 127,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L127"
          },
          "comment": {
            "description": "The `audio/vorbis` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / audio / vorbis](https://www.iana.org/assignments/media-types/audio/vorbis)\n - [[RFC5215](https://www.iana.org/go/rfc5215)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/vorbis"
        },
        {
          "id": 95,
          "name": "AudioWav",
          "source": {
            "line": 131,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L131"
          },
          "comment": {
            "description": "The `audio/wav` media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/wav"
        },
        {
          "id": 96,
          "name": "AudioWebm",
          "source": {
            "line": 135,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L135"
          },
          "comment": {
            "description": "The `audio/webm` media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "audio/webm"
        },
        {
          "id": 97,
          "name": "FontOtf",
          "source": {
            "line": 141,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L141"
          },
          "comment": {
            "description": "The `font/otf` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / font / otf](https://www.iana.org/assignments/media-types/font/otf)\n - [[RFC8081](https://www.iana.org/go/rfc8081)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "font/otf"
        },
        {
          "id": 98,
          "name": "FontTtf",
          "source": {
            "line": 147,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L147"
          },
          "comment": {
            "description": "The `font/ttf` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / font / ttf](https://www.iana.org/assignments/media-types/font/ttf)\n - [[RFC8081](https://www.iana.org/go/rfc8081)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "font/ttf"
        },
        {
          "id": 99,
          "name": "FontWoff",
          "source": {
            "line": 153,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L153"
          },
          "comment": {
            "description": "The `font/woff` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / font / woff](https://www.iana.org/assignments/media-types/font/woff)\n - [[RFC8081](https://www.iana.org/go/rfc8081)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "font/woff"
        },
        {
          "id": 100,
          "name": "FontWoff2",
          "source": {
            "line": 159,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L159"
          },
          "comment": {
            "description": "The `font/woff2` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / font / woff2](https://www.iana.org/assignments/media-types/font/woff2)\n - [[RFC8081](https://www.iana.org/go/rfc8081)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "font/woff2"
        },
        {
          "id": 101,
          "name": "FormData",
          "source": {
            "line": 165,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L165"
          },
          "comment": {
            "description": "The `multipart/form-data` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / multipart / form-data](https://www.iana.org/assignments/media-types/multipart/form-data)\n - [[RFC7578](https://www.iana.org/go/rfc7578)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "multipart/form-data"
        },
        {
          "id": 102,
          "name": "FormURLEncoded",
          "source": {
            "line": 170,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L170"
          },
          "comment": {
            "description": "The `x-www-form-urlencoded` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / application / x-www-form-urlencoded](https://www.iana.org/assignments/media-types/application/x-www-form-urlencoded)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "application/x-www-form-urlencoded"
        },
        {
          "id": 103,
          "name": "ImageAPNG",
          "source": {
            "line": 175,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L175"
          },
          "comment": {
            "description": "The `image/apng` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / apng](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#apng_animated_portable_network_graphics)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "image/apng"
        },
        {
          "id": 104,
          "name": "ImageGIF",
          "source": {
            "line": 181,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L181"
          },
          "comment": {
            "description": "The `image/gif` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / image / gif](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#gif_graphics_interchange_format)\n - [[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046](https://www.iana.org/go/rfc2046)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "image/gif"
        },
        {
          "id": 105,
          "name": "ImageJPEG",
          "source": {
            "line": 187,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L187"
          },
          "comment": {
            "description": "The `image/jpeg` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / image / jpeg](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#jpeg_joint_photographic_experts_group_image)\n - [[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046](https://www.iana.org/go/rfc2046)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "image/jpeg"
        },
        {
          "id": 106,
          "name": "ImagePNG",
          "source": {
            "line": 192,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L192"
          },
          "comment": {
            "description": "The `image/png` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / png](https://www.iana.org/assignments/media-types/image/png)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "image/png"
        },
        {
          "id": 107,
          "name": "ImageWEBP",
          "source": {
            "line": 197,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L197"
          },
          "comment": {
            "description": "The `image/webp` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / image / webp](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "image/webp"
        },
        {
          "id": 108,
          "name": "JSON",
          "source": {
            "line": 203,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L203"
          },
          "comment": {
            "description": "The `application/json` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / application / json](https://www.iana.org/assignments/media-types/application/json)\n - [[RFC8259](https://www.iana.org/go/rfc8259)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "application/json"
        },
        {
          "id": 109,
          "name": "JavaScript",
          "source": {
            "line": 209,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L209"
          },
          "comment": {
            "description": "The `application/javascript` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / application / javascript](https://www.iana.org/assignments/media-types/application/javascript)\n - [[RFC4329](https://www.iana.org/go/rfc4329)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "application/javascript"
        },
        {
          "id": 110,
          "name": "OctetStream",
          "source": {
            "line": 215,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L215"
          },
          "comment": {
            "description": "The `application/octet-stream` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / application / octet-stream](https://www.iana.org/assignments/media-types/application/octet-stream)\n - [[RFC2045](https://www.iana.org/go/rfc2045)] [[RFC2046(https://www.iana.org/go/rfc2046)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "application/octet-stream"
        },
        {
          "id": 111,
          "name": "TextCSS",
          "source": {
            "line": 221,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L221"
          },
          "comment": {
            "description": "The `text/css` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / text / css](https://www.iana.org/assignments/media-types/text/css)\n - [[RFC2318](https://www.iana.org/go/rfc2318)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "text/css"
        },
        {
          "id": 112,
          "name": "TextHTML",
          "source": {
            "line": 226,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L226"
          },
          "comment": {
            "description": "The `text/HTML` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": "[Media-Types / text / html](https://www.iana.org/assignments/media-types/text/html)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "text/html"
        },
        {
          "id": 113,
          "name": "TextPlain",
          "source": {
            "line": 232,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L232"
          },
          "comment": {
            "description": "The `text/plain` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / text / plain](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#textplain)\n - [[RFC2046](https://www.iana.org/go/rfc2046)] [[RFC3676](https://www.iana.org/go/rfc3676)] [[RFC5147](https://www.iana.org/go/rfc5147)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "text/plain"
        },
        {
          "id": 114,
          "name": "VideoH264",
          "source": {
            "line": 238,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L238"
          },
          "comment": {
            "description": "The `video/h264` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / video / h264](https://www.iana.org/assignments/media-types/video/H264)\n - [[RFC6184](https://www.iana.org/go/rfc6184)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "video/h264"
        },
        {
          "id": 115,
          "name": "VideoH265",
          "source": {
            "line": 244,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L244"
          },
          "comment": {
            "description": "The `video/h265` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / video / h265](https://www.iana.org/assignments/media-types/video/H265)\n - [[RFC7798](https://www.iana.org/go/rfc7798)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "video/h265"
        },
        {
          "id": 116,
          "name": "VideoMp4",
          "source": {
            "line": 250,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L250"
          },
          "comment": {
            "description": "The `video/mp4` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / video / mp4](https://www.iana.org/assignments/media-types/video/mp4)\n - [[RFC4337](https://www.iana.org/go/rfc4337)] [[RFC6381](https://www.iana.org/go/rfc6381)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "video/mp4"
        },
        {
          "id": 117,
          "name": "VideoOgg",
          "source": {
            "line": 256,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L256"
          },
          "comment": {
            "description": "The `video/ogg` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / video / ogg](https://www.iana.org/assignments/media-types/video/ogg)\n - [[RFC5334](https://www.iana.org/go/rfc5334)] [[RFC7845](https://www.iana.org/go/rfc7845)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "video/ogg"
        },
        {
          "id": 118,
          "name": "VideoWebm",
          "source": {
            "line": 260,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L260"
          },
          "comment": {
            "description": "The `video/webm` media content type.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "video/webm"
        },
        {
          "id": 119,
          "name": "XML",
          "source": {
            "line": 266,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L266"
          },
          "comment": {
            "description": "The `application/xml` media content type.",
            "blockTags": [
              {
                "name": "see",
                "text": " - [Media-Types / application / xml](https://www.iana.org/assignments/media-types/application/xml)\n - [[RFC7303](https://www.iana.org/go/rfc7303)]\n"
              }
            ],
            "modifierTags": []
          },
          "parentId": 88,
          "value": "application/xml"
        }
      ]
    },
    {
      "id": 78,
      "name": "FetchMethods",
      "source": {
        "line": 39,
        "file": "types.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L39"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The list of [HTTP Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 84,
          "name": "Connect",
          "source": {
            "line": 69,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L69"
          },
          "comment": {
            "description": "The `CONNECT` method establishes a tunnel to the server identified by the target resource",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / CONNECT](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "CONNECT"
        },
        {
          "id": 83,
          "name": "Delete",
          "source": {
            "line": 64,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L64"
          },
          "comment": {
            "description": "The `DELETE` method deletes the specified resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / DELETE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "DELETE"
        },
        {
          "id": 79,
          "name": "Get",
          "source": {
            "line": 44,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L44"
          },
          "comment": {
            "description": "The `GET` method requests a representation of the specified resource. Requests using `GET` should only retrieve data.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / GET](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "GET"
        },
        {
          "id": 80,
          "name": "Head",
          "source": {
            "line": 49,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L49"
          },
          "comment": {
            "description": "The `HEAD` method asks for a response identical to that of a {@link `GET`} request, but without the response body.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / HEAD](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "HEAD"
        },
        {
          "id": 85,
          "name": "Options",
          "source": {
            "line": 74,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L74"
          },
          "comment": {
            "description": "The `OPTIONS` method is used to describe the communication options for the target resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / OPTIONS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "OPTIONS"
        },
        {
          "id": 87,
          "name": "Patch",
          "source": {
            "line": 84,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L84"
          },
          "comment": {
            "description": "The `PATCH` method is used to apply partial modifications to a resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / PATCH](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "PATCH"
        },
        {
          "id": 81,
          "name": "Post",
          "source": {
            "line": 54,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L54"
          },
          "comment": {
            "description": "The `POST` method is used to submit an entity to the specified resource, often causing a change in state or side effects on the server.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / POST](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "POST"
        },
        {
          "id": 82,
          "name": "Put",
          "source": {
            "line": 59,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L59"
          },
          "comment": {
            "description": "The `PUT` method replaces all current representations of the target resource with the request payload.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / PUT](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "PUT"
        },
        {
          "id": 86,
          "name": "Trace",
          "source": {
            "line": 79,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L79"
          },
          "comment": {
            "description": "The `TRACE` method performs a message loop-back test along the path to the target resource.",
            "blockTags": [
              {
                "name": "see",
                "text": "[MDN / Web / HTTP / Methods / TRACE](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE)"
              }
            ],
            "modifierTags": []
          },
          "parentId": 78,
          "value": "TRACE"
        }
      ]
    },
    {
      "id": 72,
      "name": "FetchResultTypes",
      "source": {
        "line": 7,
        "file": "types.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L7"
      },
      "namespaceParentId": null,
      "comment": {
        "description": "The supported return types for the `fetch` method",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 75,
          "name": "Blob",
          "source": {
            "line": 25,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L25"
          },
          "comment": {
            "description": "Returns only the body, as a [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob).",
            "blockTags": [
              {
                "name": "remark",
                "text": "For NodeJS environment other `FetchResultTypes` are recommended, but you can use a Blob if you want to."
              }
            ],
            "modifierTags": []
          },
          "parentId": 72,
          "value": "blob"
        },
        {
          "id": 74,
          "name": "Buffer",
          "source": {
            "line": 20,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L20"
          },
          "comment": {
            "description": "Returns only the body, as a [Buffer](https://nodejs.org/api/buffer.html).",
            "blockTags": [
              {
                "name": "remark",
                "text": "Does not work in a Browser environment. For browsers use {@link FetchResultTypes.Blob} instead.\nIf you use this type in a Browsers environment a {@link ReferenceError `ReferenceError: Buffer is not defined`} will be thrown!"
              }
            ],
            "modifierTags": []
          },
          "parentId": 72,
          "value": "buffer"
        },
        {
          "id": 73,
          "name": "JSON",
          "source": {
            "line": 14,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L14"
          },
          "comment": {
            "description": "Returns only the body, as JSON. Similar to [`Body.json()`](https://developer.mozilla.org/en-US/docs/Web/API/Body/json).\n\nYou should provide your own type cast (either through the generic return type, or with `as <type>`) to the response to define\nthe JSON structure, otherwise the result will be `unknown`.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 72,
          "value": "json"
        },
        {
          "id": 77,
          "name": "Result",
          "source": {
            "line": 33,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L33"
          },
          "comment": {
            "description": "Returns the entire response and doesn't parse the `body` in any way.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 72,
          "value": "result"
        },
        {
          "id": 76,
          "name": "Text",
          "source": {
            "line": 29,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L29"
          },
          "comment": {
            "description": "Returns only the body, as plain text. Similar to [`Body.text()`](https://developer.mozilla.org/en-US/docs/Web/API/Body/text).",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 72,
          "value": "text"
        }
      ]
    }
  ],
  "functions": [
    {
      "id": 1,
      "name": "fetch",
      "source": {
        "line": 16,
        "file": "fetch.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/fetch.ts#L16"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 2,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A JSON of the response body. Defaults to `unknown`, with the type set by passing the generic type of this function, or casting the result."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 3,
              "name": "R",
              "constraint": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 4,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 5,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": true,
              "type": {
                "kind": "reference",
                "id": 73,
                "name": "FetchResultTypes.JSON",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 3,
                "name": "R",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 6,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A JSON of the response body. Defaults to `unknown`, with the type set by passing the generic type of this function, or casting the result."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 7,
              "name": "R",
              "constraint": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 8,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 9,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 10,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": true,
              "type": {
                "kind": "reference",
                "id": 73,
                "name": "FetchResultTypes.JSON",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 7,
                "name": "R",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 11,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A {@linkplain `Buffer`} of the response body"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 12,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 13,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 74,
                "name": "FetchResultTypes.Buffer",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "__global.Buffer",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 14,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A {@linkplain `Buffer`} of the response body"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 15,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 16,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 17,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 74,
                "name": "FetchResultTypes.Buffer",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "__global.Buffer",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 18,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A {@linkplain `Blob`} of the response body"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 19,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 20,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 75,
                "name": "FetchResultTypes.Blob",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Blob",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 21,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "A {@linkplain `Blob`} of the response body"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 22,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 23,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 24,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 75,
                "name": "FetchResultTypes.Blob",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Blob",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 25,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The response body as a raw `string`."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 26,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 27,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 76,
                "name": "FetchResultTypes.Text",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 28,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The response body as a raw `string`."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 29,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 30,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 31,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 76,
                "name": "FetchResultTypes.Text",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 32,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The raw {@linkplain `Response`} ({@link Response} in typescript)."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 33,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 34,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 77,
                "name": "FetchResultTypes.Result",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Response",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 35,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The raw {@linkplain `Response`} ({@link Response} in typescript)."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 36,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 37,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 38,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 77,
                "name": "FetchResultTypes.Result",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "Response",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 39,
          "name": "fetch",
          "comment": {
            "description": "Performs an HTTP(S) fetch",
            "blockTags": [
              {
                "name": "returns",
                "text": "The return type is determined by the provided `type`.\n- When using `FetchResultTypes.JSON` then the return type is `unknown` by default. The type should be specified by filling in the generic type of the function, or casting the result.\n- When using `FetchResultTypes.Buffer` the return type will be {@linkplain `Buffer`}.\n- When using `FetchResultTypes.Blob` the return type will be a {@linkplain `Blob`}.\n- When using `FetchResultTypes.Text` the return type will be a `string`\n- When using `FetchResultTypes.Result` the return type will be a {@linkplain `Response`} ({@link Response} in typescript)"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 40,
              "name": "R",
              "constraint": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 41,
              "name": "url",
              "comment": {
                "description": "The URL to send the request to. Can be either a `string` or an `URL` object.\n`url` should be an absolute url, such as `https://example.com/`. A path-relative URL (`/file/under/root`) or protocol-relative URL (`//can-be-http-or-https.com/`) will result in a rejected `Promise`.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "URL",
                    "packageName": "typescript",
                    "typeArguments": []
                  }
                ]
              }
            },
            {
              "id": 42,
              "name": "options",
              "comment": {
                "description": "The {@linkplain `Request`} ({@link RequestInit} for TypeScript)",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 120,
                "name": "RequestOptions",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            },
            {
              "id": 43,
              "name": "type",
              "comment": {
                "description": "The {@link FetchResultTypes}",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 72,
                "name": "FetchResultTypes",
                "packageName": "@sapphire/fetch",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "Promise",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Response",
                    "packageName": "typescript",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Blob",
                    "packageName": "typescript",
                    "typeArguments": []
                  },
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "__global.Buffer",
                    "packageName": "@types/node",
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "reference",
                    "id": 40,
                    "name": "R",
                    "packageName": "@sapphire/fetch",
                    "typeArguments": []
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 120,
      "name": "RequestOptions",
      "source": {
        "line": 269,
        "file": "types.ts",
        "path": "packages/fetch/src/lib",
        "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L269"
      },
      "namespaceParentId": null,
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 121,
          "name": "body",
          "source": {
            "line": 270,
            "file": "types.ts",
            "path": "packages/fetch/src/lib",
            "url": "https://github.com/sapphiredev/utilities/blob/bedc937eef56b9e88305784bb19d635a1208f599/packages/fetch/src/lib/types.ts#L270"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": null,
                "name": "BodyInit",
                "packageName": "typescript",
                "typeArguments": []
              },
              {
                "kind": "reference",
                "id": null,
                "name": "Record",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 127,
          "name": "cache",
          "source": {
            "line": 1675,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string indicating how the request will interact with the browser's cache to set request's cache.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestCache",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 128,
          "name": "credentials",
          "source": {
            "line": 1677,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestCredentials",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 129,
          "name": "headers",
          "source": {
            "line": 1679,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "HeadersInit",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 130,
          "name": "integrity",
          "source": {
            "line": 1681,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 131,
          "name": "keepalive",
          "source": {
            "line": 1683,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A boolean to set request's keepalive.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 126,
          "name": "method",
          "source": {
            "line": 1685,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string to set request's method.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 132,
          "name": "mode",
          "source": {
            "line": 1687,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestMode",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 124,
          "name": "priority",
          "source": {
            "line": 1688,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestPriority",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 133,
          "name": "redirect",
          "source": {
            "line": 1690,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "RequestRedirect",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 125,
          "name": "referrer",
          "source": {
            "line": 1692,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 134,
          "name": "referrerPolicy",
          "source": {
            "line": 1694,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "A referrer policy to set request's referrerPolicy.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "ReferrerPolicy",
            "packageName": "typescript",
            "typeArguments": []
          }
        },
        {
          "id": 122,
          "name": "signal",
          "source": {
            "line": 1696,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "An AbortSignal to set request's signal.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "union",
            "types": [
              {
                "kind": "literal",
                "value": "null"
              },
              {
                "kind": "reference",
                "id": null,
                "name": "AbortSignal",
                "packageName": "typescript",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 123,
          "name": "window",
          "source": {
            "line": 1698,
            "file": "lib.dom.d.ts",
            "path": "node_modules/typescript/lib",
            "url": null
          },
          "comment": {
            "description": "Can only be null. Used to disassociate request from any Window.",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 120,
          "readonly": false,
          "optional": true,
          "type": {
            "kind": "literal",
            "value": "null"
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [],
  "typeAliases": [],
  "variables": []
}