{
  "typeDocJsonParserVersion": "7.2.0",
  "id": 0,
  "name": "@sapphire/timer-manager",
  "version": "1.0.0",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://raw.githubusercontent.com/sapphiredev/assets/main/banners/SapphireCommunity.png)\n\n# @sapphire/timer-manager\n\n**Timer manager utilities for JavaScript.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/timer-manager?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/timer-manager)\n[![npm](https://img.shields.io/npm/v/@sapphire/timer-manager?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/timer-manager)\n\n</div>\n\n**Table of Contents**\n\n-   [Features](#features)\n-   [Installation](#installation)\n-   [Usage](#usage)\n    -   [Basic Usage](#basic-usage)\n-   [Buy us some doughnuts](#buy-us-some-doughnuts)\n-   [Contributors ‚ú®](#contributors-%E2%9C%A8)\n\n## Features\n\n-   Written in TypeScript\n-   Bundled with esbuild so it can be used in NodeJS and browsers\n-   Offers CommonJS, ESM and UMD bundles\n-   Fully tested\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/timer-manager\n```\n\n## Usage\n\n**Note:** While this section uses `require`, the imports match 1:1 with ESM imports. For example `const { TimerManager } = require('@sapphire/timer-manager')` equals `import { TimerManager } from '@sapphire/timer-manager'`.\n\n### Basic Usage\n\n```typescript\n// Import the TimerManager class\nconst { TimerManager } = require('@sapphire/timer-manager');\n\n// Use the class for timeouts\nconst timeout = TimerManager.setTimeout(() => console.log('Hello, world!'), 1000);\nTimerManager.clearTimeout(timeout);\n\n// Use the class for intervals\nconst interval = TimerManager.setInterval(() => console.log('Hello, world!'), 1000);\nTimerManager.clearInterval(interval);\n\n// Destroy all running timeouts and intervals so that NodeJS can gracefully exit\nTimerManager.destroy();\n```\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, PayPal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/utilities/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/utilities\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/timer-manager@1.0.0](https://github.com/sapphiredev/utilities/tree/@sapphire/timer-manager@1.0.0) - (2022-09-18)\n\n## üè† Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n",
  "classes": [
    {
      "id": 1,
      "name": "TimerManager",
      "source": {
        "line": 4,
        "file": "TimerManager.ts",
        "path": "lib",
        "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L4"
      },
      "comment": {
        "description": "Manages timers so that this application can be cleanly exited",
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "intrinsic",
        "type": "any"
      },
      "implementsType": [],
      "typeParameters": [],
      "construct": {
        "id": 30,
        "name": "constructor",
        "source": null,
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "parentId": 1,
        "accessibility": "public",
        "parameters": []
      },
      "properties": [
        {
          "id": 3,
          "name": "storedIntervals",
          "source": {
            "line": 13,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L13"
          },
          "comment": {
            "description": "A set of intervals to clear on destroy",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "global.NodeJS.Timeout",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        },
        {
          "id": 2,
          "name": "storedTimeouts",
          "source": {
            "line": 8,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L8"
          },
          "comment": {
            "description": "A set of timeouts to clear on destroy",
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 1,
          "accessibility": "private",
          "abstract": false,
          "static": true,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": null,
                "name": "global.NodeJS.Timeout",
                "packageName": "@types/node",
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 25,
          "name": "clearInterval",
          "source": {
            "line": 55,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L55"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 26,
              "name": "clearInterval",
              "comment": {
                "description": "Clears an internal created through this class",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 27,
                  "name": "interval",
                  "comment": {
                    "description": "The interval to clear",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "global.NodeJS.Timeout",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 13,
          "name": "clearTimeout",
          "source": {
            "line": 34,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L34"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 14,
              "name": "clearTimeout",
              "comment": {
                "description": "Clears a timeout created through this class",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 15,
                  "name": "timeout",
                  "comment": {
                    "description": "The timeout to clear",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "global.NodeJS.Timeout",
                    "packageName": "@types/node",
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 28,
          "name": "destroy",
          "source": {
            "line": 63,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L63"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 29,
              "name": "destroy",
              "comment": {
                "description": "Clears running timeouts and intervals created through this class so NodeJS can gracefully exit",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "setInterval",
          "source": {
            "line": 45,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L45"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 17,
              "name": "setInterval",
              "comment": {
                "description": "Creates an interval gets cleared when destroyed",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 18,
                  "name": "A",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 19,
                  "name": "fn",
                  "comment": {
                    "description": "callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 20,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/TimerManager.ts",
                          "line": 45,
                          "character": 44,
                          "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L45"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 21,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 22,
                              "name": "args",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 18,
                                  "name": "A"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 23,
                  "name": "delay",
                  "comment": {
                    "description": "amount of time before running the callback",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 24,
                  "name": "args",
                  "comment": {
                    "description": "additional arguments to pass back to the callback",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 18,
                      "name": "A",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "global.NodeJS.Timeout",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 4,
          "name": "setTimeout",
          "source": {
            "line": 21,
            "file": "TimerManager.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L21"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": true,
          "signatures": [
            {
              "id": 5,
              "name": "setTimeout",
              "comment": {
                "description": "Creates a timeout gets cleared when destroyed",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 6,
                  "name": "A",
                  "constraint": null,
                  "default": {
                    "kind": "intrinsic",
                    "type": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 7,
                  "name": "fn",
                  "comment": {
                    "description": "callback function",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 8,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/TimerManager.ts",
                          "line": 21,
                          "character": 43,
                          "url": "https://github.com/sapphiredev/utilities/blob/a494cb1/packages/timer-manager/src/lib/TimerManager.ts#L21"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 9,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 10,
                              "name": "args",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 6,
                                  "name": "A"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 11,
                  "name": "delay",
                  "comment": {
                    "description": "amount of time before running the callback",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": false,
                  "optional": false,
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 12,
                  "name": "args",
                  "comment": {
                    "description": "additional arguments to pass back to the callback",
                    "blockTags": [],
                    "modifierTags": []
                  },
                  "rest": true,
                  "optional": false,
                  "type": {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 6,
                      "name": "A",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "global.NodeJS.Timeout",
                "packageName": "@types/node",
                "typeArguments": []
              }
            }
          ]
        }
      ]
    }
  ],
  "enums": [],
  "functions": [],
  "interfaces": [],
  "namespaces": [],
  "typeAliases": [],
  "variables": []
}