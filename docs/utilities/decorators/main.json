{
  "typeDocJsonParserVersion": "7.2.0",
  "id": 0,
  "name": "@sapphire/decorators",
  "version": "6.0.0",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://cdn.skyra.pw/gh-assets/sapphire-banner.png)\n\n# @sapphire/decorators\n\n**Useful TypeScript decorators for Sapphire Framework bots.**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/decorators?logo=webpack&style=flat-square)](https://bundlephobia.com/result?p=@sapphire/decorators)\n[![npm](https://img.shields.io/npm/v/@sapphire/decorators?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/decorators)\n\n</div>\n\n## Description\n\nDecorators can add a lot of functionality with very minimal code. This package provides some common decorators that can be used with projects using the [Sapphire Framework][].\n\n## Installation\n\n`@sapphire/decorators` depends on the following packages. Be sure to install these along with this package!\n\n-   [`@sapphire/discord.js-utilities`](https://www.npmjs.com/package/@sapphire/discord.js-utilities)\n-   [`@sapphire/utilities`](https://www.npmjs.com/package/@sapphire/utilities)\n-   [`@sapphire/framework`](https://www.npmjs.com/package/@sapphire/framework)\n-   [`discord.js`](https://www.npmjs.com/package/discord.js)\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/decorators @sapphire/discord.js-utilities @sapphire/utilities @sapphire/framework discord.js\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors\n\nPlease make sure to read the [Contributing Guide][contributing] before making a pull request.\n\nThank you to all the people who already contributed to Sapphire!\n\n<a href=\"https://github.com/sapphiredev/utilities/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=sapphiredev/utilities\" />\n</a>\n\n[contributing]: https://github.com/sapphiredev/.github/blob/main/.github/CONTRIBUTING.md\n[sapphire framework]: https://github.com/sapphiredev/framework\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/decorators@6.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@5.0.0...@sapphire/decorators@6.0.0) - (2023-01-08)\n\n## üöÄ Features\n\n- **deps:** Support for djs v14 (#434) ([2e2c3e9](https://github.com/sapphiredev/utilities/commit/2e2c3e93c90e20895c49e944796d4244823cc078))\n\n# [@sapphire/decorators@5.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.8...@sapphire/decorators@5.0.0) - (2022-08-20)\n\n## üêõ Bug Fixes\n\n- Manually set version to 5.0.0 to cover @sapphire/framework@3.0.0 ([48e083f](https://github.com/sapphiredev/utilities/commit/48e083f9d4cbdb7e6c204ce75a6d2d387662dfae))\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n## üìù Documentation\n\n- Add @muchnameless as a contributor ([a1221fe](https://github.com/sapphiredev/utilities/commit/a1221fea68506e99591d5d00ec552a07c26833f9))\n- Add @enxg as a contributor ([d2382f0](https://github.com/sapphiredev/utilities/commit/d2382f04e3909cb4ad11798a0a10e683f6cf5383))\n- Add @EvolutionX-10 as a contributor ([efc3a32](https://github.com/sapphiredev/utilities/commit/efc3a320a72ae258996dd62866d206c33f8d4961))\n\n# [@sapphire/decorators@4.3.7](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.6...@sapphire/decorators@4.3.7) - (2022-07-13)\n\n## üè† Refactor\n\n- Change `const enum` for regular `enum` (#394) ([960e973](https://github.com/sapphiredev/utilities/commit/960e973dc63aeccdc0012d72a4fef052bbd37b6f))\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([84af0db](https://github.com/sapphiredev/utilities/commit/84af0db2db749223b036aa99fe19a2e9af5681c6))\n\n## üß™ Testing\n\n- Migrate to vitest (#380) ([075ec73](https://github.com/sapphiredev/utilities/commit/075ec73c7a8e3374fad3ada612d37eb4ac36ec8d))\n\n# [@sapphire/decorators@4.3.5](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.4...@sapphire/decorators@4.3.5) - (2022-06-10)\n\n## üêõ Bug Fixes\n\n- **deps:** Update all non-major dependencies ([50cd8de](https://github.com/sapphiredev/utilities/commit/50cd8dea593b6f5ae75571209456b3421e2ca59a))\n\n## üìù Documentation\n\n- Add @MajesticString as a contributor ([295b3e9](https://github.com/sapphiredev/utilities/commit/295b3e9849a4b0fe64074bae02f6426378a303c3))\n- Add @Mzato0001 as a contributor ([c790ef2](https://github.com/sapphiredev/utilities/commit/c790ef25df2d7e22888fa9f8169167aa555e9e19))\n- Add @NotKaskus as a contributor ([00da8f1](https://github.com/sapphiredev/utilities/commit/00da8f199137b9277119823f322d1f2d168d928a))\n- Add @imranbarbhuiya as a contributor ([fb674c2](https://github.com/sapphiredev/utilities/commit/fb674c2c5594d41e71662263553dcb4bac9e37f4))\n- Add @axisiscool as a contributor ([ce1aa31](https://github.com/sapphiredev/utilities/commit/ce1aa316871a88d3663efbdf2a42d3d8dfe6a27f))\n- Add @dhruv-kaushikk as a contributor ([ebbf43f](https://github.com/sapphiredev/utilities/commit/ebbf43f63617daba96e72c50a234bf8b64f6ddc4))\n- Add @Commandtechno as a contributor ([f1d69fa](https://github.com/sapphiredev/utilities/commit/f1d69fabe1ee0abe4be08b19e63dbec03102f7ce))\n- Fix typedoc causing OOM crashes ([63ba41c](https://github.com/sapphiredev/utilities/commit/63ba41c4b6678554b1c7043a22d3296db4f59360))\n\n## [4.3.4](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.3...@sapphire/decorators@4.3.4) (2022-04-01)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.3.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.2...@sapphire/decorators@4.3.3) (2022-03-20)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.3.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.1...@sapphire/decorators@4.3.2) (2022-03-20)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.3.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.3.0...@sapphire/decorators@4.3.1) (2022-03-11)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# [4.3.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.6...@sapphire/decorators@4.3.0) (2022-03-06)\n\n### Features\n\n-   allow module: NodeNext ([#306](https://github.com/sapphiredev/utilities/issues/306)) ([9dc6dd6](https://github.com/sapphiredev/utilities/commit/9dc6dd619efab879bb2b0b3c9e64304e10a67ed6))\n\n## [4.2.6](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.5...@sapphire/decorators@4.2.6) (2022-03-01)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.2.5](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.4...@sapphire/decorators@4.2.5) (2022-02-18)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.2.4](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.3...@sapphire/decorators@4.2.4) (2022-02-15)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.2.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.2...@sapphire/decorators@4.2.3) (2022-02-11)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.2.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.1...@sapphire/decorators@4.2.2) (2022-02-07)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.2.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.2.0...@sapphire/decorators@4.2.1) (2022-02-06)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# [4.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.1.0...@sapphire/decorators@4.2.0) (2022-02-03)\n\n### Features\n\n-   **ts-config:** add multi-config structure ([#281](https://github.com/sapphiredev/utilities/issues/281)) ([b5191d7](https://github.com/sapphiredev/utilities/commit/b5191d7f2416dc5838590c4ff221454925553e37))\n\n# [4.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.0.2...@sapphire/decorators@4.1.0) (2022-01-28)\n\n### Features\n\n-   change build system to tsup ([#270](https://github.com/sapphiredev/utilities/issues/270)) ([365a53a](https://github.com/sapphiredev/utilities/commit/365a53a5517a01a0926cf28a83c96b63f32ed9f8))\n\n## [4.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.0.1...@sapphire/decorators@4.0.2) (2022-01-21)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [4.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@4.0.0...@sapphire/decorators@4.0.1) (2022-01-21)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# [4.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.6...@sapphire/decorators@4.0.0) (2022-01-16)\n\n### Features\n\n-   **decorators:** add container to `ApplyOptions` callback ([#258](https://github.com/sapphiredev/utilities/issues/258)) ([d2876b8](https://github.com/sapphiredev/utilities/commit/d2876b83ce2356424e12e63cfe9f9e14c6ce52e0))\n-   **decorators:** remove `enumerable` and `enumerableMethod`. Use their PascalCased variants instead. ([38e2977](https://github.com/sapphiredev/utilities/commit/38e2977b8dc061d0d62f076b12808b196e92b73a))\n\n### BREAKING CHANGES\n\n-   **decorators:** The previously deprecated enumerable`and`enumerableMethod` decorators have been removed. Use their PascalCased variants instead.\n-   **decorators:** When using `@ApplyOptions` with a callback function, the single parameter of `PieceContex` been changed to an object, which also has a property of `Container`. Migration change is `@ApplyOptions<Listener.Options>(({ context }) => ({`\n\n## [3.1.6](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.5...@sapphire/decorators@3.1.6) (2022-01-12)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [3.1.5](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.4...@sapphire/decorators@3.1.5) (2022-01-10)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [3.1.4](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.3...@sapphire/decorators@3.1.4) (2021-11-06)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [3.1.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.2...@sapphire/decorators@3.1.3) (2021-10-26)\n\n### Bug Fixes\n\n-   **docs:** replace command usage of `run` to `messageRun` ([#204](https://github.com/sapphiredev/utilities/issues/204)) ([8279ec0](https://github.com/sapphiredev/utilities/commit/8279ec01e9037fb12e37e872979966c1c2e264e1))\n\n## [3.1.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.1...@sapphire/decorators@3.1.2) (2021-10-17)\n\n### Bug Fixes\n\n-   allow more node & npm versions in engines field ([5977d2a](https://github.com/sapphiredev/utilities/commit/5977d2a30a4b2cfdf84aff3f33af03ffde1bbec5))\n\n## [3.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.1.0...@sapphire/decorators@3.1.1) (2021-10-11)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# [3.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.0.1...@sapphire/decorators@3.1.0) (2021-10-10)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [3.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@3.0.0...@sapphire/decorators@3.0.1) (2021-10-08)\n\n### Bug Fixes\n\n-   **decorators:** properly run postbuild scripts ([b71b7a5](https://github.com/sapphiredev/utilities/commit/b71b7a52ac2f2d64b49dc5835d08c8c6a3625752))\n\n# [3.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.2.0...@sapphire/decorators@3.0.0) (2021-10-04)\n\n### Bug Fixes\n\n-   **discord.js-utilities:** fixed permission error messages grammar ([ea9840b](https://github.com/sapphiredev/utilities/commit/ea9840b258770be20eb576b59d470fb03293f694))\n\n### Features\n\n-   **decorators:** add `RequiresUserPermissions` ([688e39f](https://github.com/sapphiredev/utilities/commit/688e39f26507a81fcf8be7c9e55d6290f38da460))\n-   **decorators:** add default messages to errors thrown by `RequiresPermissions` ([13d89a3](https://github.com/sapphiredev/utilities/commit/13d89a3e4e37664e59d8a7b722df95786c5fdf1b))\n-   **decorators:** set minimum NodeJS to v14 ([46c0f68](https://github.com/sapphiredev/utilities/commit/46c0f68a4b4f8ec5cff221183a1a620954be84be))\n\n### BREAKING CHANGES\n\n-   **decorators:** `RequiresPermissions` has been renamed to `RequiresClientPermissions`\n-   **decorators:** enum entry `DecoratorIdentifiers.RequiresPermissionsGuildOnly` has been changed to `DecoratorIdentifiers.RequiresClientPermissionsGuildOnly`\n-   **decorators:** enum entry `DecoratorIdentifiers.RequiresPermissionsMissingPermissions` has been changed to `DecoratorIdentifiers.RequiresClientPermissionsMissingPermissions`\n-   **decorators:** i18n identifier `requiresPermissionsGuildOnly` has been changed to `requiresClientPermissionsGuildOnly`\n-   **decorators:** i18n identifier `requiresPermissionsMissingPermissions` has been changed to `requiresClientPermissionsMissingPermissions`\n\n# [2.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.5...@sapphire/decorators@2.2.0) (2021-07-20)\n\n### Features\n\n-   **decorators:** add new permission decorators ([#138](https://github.com/sapphiredev/utilities/issues/138)) ([60ab0ca](https://github.com/sapphiredev/utilities/commit/60ab0cabcc768950909b0a35c2924edff13cec0e))\n\n## [2.1.5](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.4...@sapphire/decorators@2.1.5) (2021-06-27)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [2.1.4](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.3...@sapphire/decorators@2.1.4) (2021-06-19)\n\n### Bug Fixes\n\n-   **docs:** update-tsdoc-for-vscode-may-2021 ([#126](https://github.com/sapphiredev/utilities/issues/126)) ([f8581bf](https://github.com/sapphiredev/utilities/commit/f8581bfe97a1b2f8aac3a3d3ed342d8ba92d730b))\n\n## [2.1.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.2...@sapphire/decorators@2.1.3) (2021-06-06)\n\n### Bug Fixes\n\n-   remove peer deps, update dev deps, update READMEs ([#124](https://github.com/sapphiredev/utilities/issues/124)) ([67256ed](https://github.com/sapphiredev/utilities/commit/67256ed43b915b02a8b5c68230ba82d6210c5032))\n\n## [2.1.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.1...@sapphire/decorators@2.1.2) (2021-05-20)\n\n### Bug Fixes\n\n-   **decorators:** mark package as side effect free ([d42dadf](https://github.com/sapphiredev/utilities/commit/d42dadfbc76cf6613479e03f1216d35fc247af30))\n\n## [2.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.1.0...@sapphire/decorators@2.1.1) (2021-05-02)\n\n### Bug Fixes\n\n-   drop the `www.` from the SapphireJS URL ([494d89f](https://github.com/sapphiredev/utilities/commit/494d89ffa04f78c195b93d7905b3232884f7d7e2))\n-   update all the SapphireJS URLs from `.com` to `.dev` ([f59b46d](https://github.com/sapphiredev/utilities/commit/f59b46d1a0ebd39cad17b17d71cd3b9da808d5fd))\n\n# [2.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.10...@sapphire/decorators@2.1.0) (2021-04-21)\n\n### Features\n\n-   add @sapphire/embed-jsx ([#100](https://github.com/sapphiredev/utilities/issues/100)) ([7277a23](https://github.com/sapphiredev/utilities/commit/7277a236015236ed8e81b7882875410facc4ce17))\n\n## [2.0.10](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.9...@sapphire/decorators@2.0.10) (2021-04-19)\n\n### Bug Fixes\n\n-   change all Sapphire URLs from \"project\"->\"community\" & use our domain where applicable üë®‚Äçüåæüöú ([#102](https://github.com/sapphiredev/utilities/issues/102)) ([835b408](https://github.com/sapphiredev/utilities/commit/835b408e8e57130c3787aca2e32613346ff23e4d))\n\n## [2.0.9](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.8...@sapphire/decorators@2.0.9) (2021-04-03)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [2.0.8](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.7...@sapphire/decorators@2.0.8) (2021-03-16)\n\n### Bug Fixes\n\n-   **decorators:** bump framework dependency to v1.0.0 ([33dc61d](https://github.com/sapphiredev/utilities/commit/33dc61d9d0455cbe2f1385728fb8a2dd425dcc2a))\n\n## [2.0.7](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.6...@sapphire/decorators@2.0.7) (2021-03-16)\n\n### Bug Fixes\n\n-   **decorators:** add tslib dependency ([3085f1d](https://github.com/sapphiredev/utilities/commit/3085f1dadcd84fc8f7aa9c39a7f23333c1d4eb14))\n\n## [2.0.6](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.5...@sapphire/decorators@2.0.6) (2021-03-16)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [2.0.5](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.4...@sapphire/decorators@2.0.5) (2021-02-22)\n\n### Bug Fixes\n\n-   **decorators:** clean up required peer dependencies ([b29e8a7](https://github.com/sapphiredev/utilities/commit/b29e8a7c2adb7c6beff392291fd5f2bc8587271c))\n\n## [2.0.4](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.3...@sapphire/decorators@2.0.4) (2021-02-16)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [2.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.2...@sapphire/decorators@2.0.3) (2021-01-18)\n\n### Bug Fixes\n\n-   **decorators:** change `ApplyOptions`'s callback parameter from Client to PieceContext ([#61](https://github.com/sapphiredev/utilities/issues/61)) ([d8b916b](https://github.com/sapphiredev/utilities/commit/d8b916bb0f90b40499f7d6315bfec3cfd6642968))\n\n## [2.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.1...@sapphire/decorators@2.0.2) (2021-01-16)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [2.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@2.0.0...@sapphire/decorators@2.0.1) (2021-01-09)\n\n### Bug Fixes\n\n-   **decorators:** assign proper homepage url in package ([495fffc](https://github.com/sapphiredev/utilities/commit/495fffc3424335bd481ba684c29b2193194f2545))\n\n# [2.0.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.2.1...@sapphire/decorators@2.0.0) (2021-01-08)\n\n### Features\n\n-   **{ts,eslint}-config,decorators:** remove TypeScript v3 from peer dependencies ([a211f0b](https://github.com/sapphiredev/utilities/commit/a211f0b1d07c634cf80701a6685537c14e35586e))\n\n### BREAKING CHANGES\n\n-   **{ts,eslint}-config,decorators:** TypeScript v3 removed from peer dependencies, it may still work, however we\n    strongly recommend updating.\n\n## [1.2.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.2.0...@sapphire/decorators@1.2.1) (2021-01-01)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# [1.2.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.1.0...@sapphire/decorators@1.2.0) (2020-12-26)\n\n### Bug Fixes\n\n-   **utilities,time-utilities:** set published versions of dependencies in peerDependencies ([adee6fc](https://github.com/sapphiredev/utilities/commit/adee6fcbd1f7d85e5abee2630aeaa3a192e2a29f))\n\n### Features\n\n-   **decorators:** add createFunctionPrecondition, fixed build ([#51](https://github.com/sapphiredev/utilities/issues/51)) ([c87d5db](https://github.com/sapphiredev/utilities/commit/c87d5db8e29bbfcf96a29e34e4e4186426bac304))\n\n# [1.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.0.3...@sapphire/decorators@1.1.0) (2020-12-22)\n\n### Features\n\n-   added time-utilities package ([#26](https://github.com/sapphiredev/utilities/issues/26)) ([f17a333](https://github.com/sapphiredev/utilities/commit/f17a3339667a452e8745fad7884272176e5d65e8))\n\n## [1.0.3](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.0.2...@sapphire/decorators@1.0.3) (2020-11-04)\n\n### Bug Fixes\n\n-   **decorators:** properly specify ESM and CommonJS exports ([8bf3ec7](https://github.com/sapphiredev/utilities/commit/8bf3ec7a025574244e232fae93f31e67b1689cf9))\n\n## [1.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.0.1...@sapphire/decorators@1.0.2) (2020-10-11)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n## [1.0.1](https://github.com/sapphiredev/utilities/compare/@sapphire/decorators@1.0.0...@sapphire/decorators@1.0.1) (2020-09-20)\n\n**Note:** Version bump only for package @sapphire/decorators\n\n# 1.0.0 (2020-09-05)\n\n### Features\n\n-   **decorators:** add enumerableMethod decorator ([aa60625](https://github.com/sapphiredev/utilities/commit/aa606251336eb983e7a37e10bc69bb2ba232683a))\n-   implement snowflake ([5ba4e2d](https://github.com/sapphiredev/utilities/commit/5ba4e2d82557dd4ff60ffe891a7b46e46373bea2))\n-   **decorators:** add decorators package ([#4](https://github.com/sapphiredev/utilities/issues/4)) ([677b3e5](https://github.com/sapphiredev/utilities/commit/677b3e59d5c6160cbe6fb410821cadd7c0f00e3c))\n-   **decorators:** add enumerable decorator ([cbdd445](https://github.com/sapphiredev/utilities/commit/cbdd445dbe9341691ed706357bbcdd8636078a1b))\n\n# Changelog\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n## [2.3.0](https://github.com/skyra-project/decorators/compare/v2.2.0...v2.3.0) (2020-07-26)\n\n### Features\n\n-   rename master branch to main ([ea05734](https://github.com/skyra-project/decorators/commit/ea05734f32db0ea475e699e27658fb2749b40d5f))\n\n## [2.2.0](https://github.com/skyra-project/decorators/compare/v2.1.2...v2.2.0) (2020-07-02)\n\n### Features\n\n-   allow ApplyOptions to take a function ([#24](https://github.com/skyra-project/decorators/issues/24)) ([cbcabdc](https://github.com/skyra-project/decorators/commit/cbcabdc03cb937364cde72a3d4d393cfbf474e55))\n-   **apply-options:** add extendables support ([#26](https://github.com/skyra-project/decorators/issues/26)) ([39421bb](https://github.com/skyra-project/decorators/commit/39421bb69042a75d2b0257c6726436f432448281))\n\n### [2.1.2](https://github.com/skyra-project/decorators/compare/v2.1.1...v2.1.2) (2020-06-14)\n\n### Bug Fixes\n\n-   **core:** properly pass rest options for ApplyOptions ([e7c68d2](https://github.com/skyra-project/decorators/commit/e7c68d2613c16a4438b9a816a71d0c20de71cac5))\n\n### [2.1.1](https://github.com/skyra-project/decorators/compare/v2.1.0...v2.1.1) (2020-06-14)\n\n### Bug Fixes\n\n-   remove unnecessary optional chain ([bd7f3ec](https://github.com/skyra-project/decorators/commit/bd7f3ec347edd57c681b2283425569f3df4b5f32))\n\n## [2.1.0](https://github.com/skyra-project/decorators/compare/v2.0.0...v2.1.0) (2020-06-13)\n\n### Features\n\n-   add CreateResolvers & requiredPermissions decorators ([3bdc4bd](https://github.com/skyra-project/decorators/commit/3bdc4bd4066a1e1112307c15c69fc80c790584f0))\n\n## [2.0.0](https://github.com/skyra-project/decorators/compare/v1.0.0...v2.0.0) (2020-05-30)\n\n### ‚ö† BREAKING CHANGES\n\n-   NodeJS version 12 is no longer supported. Install NodeJS 14 or higher.\n-   Discord.JS is no longer supported. This library now targets @klasa/core and the new\n    klasa\n\n### Features\n\n-   rework to using @klasa/core and the new klasa ([5100e86](https://github.com/skyra-project/decorators/commit/5100e869bc11e932350f97846942a8eb7b141c37))\n\n### Bug Fixes\n\n-   target NodeJS version 14 and higher ([a678765](https://github.com/skyra-project/decorators/commit/a678765ff28c2d16e12489512ac1d3d0d79e10fb))\n\n## 1.0.0 (2020-03-01)\n\n### Features\n\n-   add ApplyOptions + move to Jest ([#19](https://github.com/skyra-project/decorators/issues/19)) ([972e164](https://github.com/skyra-project/decorators/commit/972e164a40b5bb6f1296ea8a3d1f8312a3c8de23))\n-   update license ([d2366be](https://github.com/skyra-project/decorators/commit/d2366be6207c3794858d7255274b4c83fe14503d))\n",
  "classes": [],
  "enums": [
    {
      "id": 17,
      "name": "DecoratorIdentifiers",
      "source": {
        "line": 6,
        "file": "djs-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L6"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "members": [
        {
          "id": 18,
          "name": "RequiresClientPermissionsGuildOnly",
          "source": {
            "line": 7,
            "file": "djs-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L7"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 17,
          "value": "requiresClientPermissionsGuildOnly"
        },
        {
          "id": 19,
          "name": "RequiresClientPermissionsMissingPermissions",
          "source": {
            "line": 8,
            "file": "djs-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L8"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 17,
          "value": "requiresClientPermissionsMissingPermissions"
        },
        {
          "id": 20,
          "name": "RequiresUserPermissionsGuildOnly",
          "source": {
            "line": 9,
            "file": "djs-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L9"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 17,
          "value": "requiresUserPermissionsGuildOnly"
        },
        {
          "id": 21,
          "name": "RequiresUserPermissionsMissingPermissions",
          "source": {
            "line": 10,
            "file": "djs-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L10"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 17,
          "value": "requiresUserPermissionsMissingPermissions"
        }
      ]
    }
  ],
  "functions": [
    {
      "id": 28,
      "name": "ApplyOptions",
      "source": {
        "line": 52,
        "file": "piece-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/piece-decorators.ts#L52"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 29,
          "name": "ApplyOptions",
          "comment": {
            "description": "Decorator function that applies given options to any Sapphire piece",
            "blockTags": [
              {
                "name": "example",
                "text": "```typescript\nimport { ApplyOptions } from '@sapphire/decorators';\nimport { Command } from '@sapphire/framework';\nimport type { Message } from 'discord.js';\n\n@ApplyOptions<Command.Options>({\n  description: 'ping pong',\n  enabled: true\n})\nexport class UserCommand extends Command {\n  public override async messageRun(message: Message) {\n    const msg = await message.channel.send('Ping?');\n\n    return msg.edit(\n      `Pong! Client Latency ${Math.round(this.container.client.ws.ping)}ms. API Latency ${msg.createdTimestamp - message.createdTimestamp}ms.`\n    );\n  }\n}\n```"
              },
              {
                "name": "example",
                "text": "```typescript\nimport { ApplyOptions } from '@sapphire/decorators';\nimport { Listener } from '@sapphire/framework';\nimport { GatewayDispatchEvents, GatewayMessageDeleteDispatch } from 'discord.js';\n\n@ApplyOptions<Listener.Options>(({ container }) => ({\n  description: 'Handle Raw Message Delete events',\n  emitter: container.client.ws,\n  event: GatewayDispatchEvents.MessageDelete\n}))\nexport class UserListener extends Listener {\n  public override run(data: GatewayMessageDeleteDispatch['d']): void {\n    if (!data.guild_id) return;\n\n    const guild = this.container.client.guilds.cache.get(data.guild_id);\n    if (!guild || !guild.channels.cache.has(data.channel_id)) return;\n\n    // Do something with the data\n  }\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 30,
              "name": "T",
              "constraint": {
                "kind": "reference",
                "id": null,
                "name": "PieceOptions",
                "packageName": "@sapphire/pieces",
                "typeArguments": []
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 31,
              "name": "optionsOrFn",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "union",
                "types": [
                  {
                    "kind": "reference",
                    "id": 30,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "reflection",
                    "reflection": {
                      "id": 32,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "piece-decorators.ts",
                          "line": 52,
                          "character": 72,
                          "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/piece-decorators.ts#L52"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 33,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 34,
                              "name": "parameters",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 35,
                                "name": "ApplyOptionsCallbackParameters"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 30,
                            "name": "T"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "ClassDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 1,
      "name": "Enumerable",
      "source": {
        "line": 8,
        "file": "base-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/base-decorators.ts#L8"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 2,
          "name": "Enumerable",
          "comment": {
            "description": "Decorator that sets the enumerable property of a class field to the desired value.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 3,
              "name": "value",
              "comment": {
                "description": "Whether the property should be enumerable or not",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ],
          "returnType": {
            "kind": "reflection",
            "reflection": {
              "id": 4,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "base-decorators.ts",
                  "line": 9,
                  "character": 8,
                  "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/base-decorators.ts#L9"
                }
              ],
              "signatures": [
                {
                  "id": 5,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 6,
                      "name": "target",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 7,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 8,
      "name": "EnumerableMethod",
      "source": {
        "line": 28,
        "file": "base-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/base-decorators.ts#L28"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 9,
          "name": "EnumerableMethod",
          "comment": {
            "description": "Decorator that sets the enumerable property of a class method to the desired value.",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 10,
              "name": "value",
              "comment": {
                "description": "Whether the method should be enumerable or not",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 22,
      "name": "RequiresClientPermissions",
      "source": {
        "line": 79,
        "file": "djs-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L79"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 23,
          "name": "RequiresClientPermissions",
          "comment": {
            "description": "Allows you to set permissions required for individual methods. This is particularly useful for subcommands that require specific permissions.",
            "blockTags": [
              {
                "name": "remark",
                "text": "This decorator applies to the client that is to execute the command. For setting permissions required user of the command see {@link RequiresUserPermissions}"
              },
              {
                "name": "remark",
                "text": "This decorator makes the decorated function asynchronous, so any result should be `await`ed."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { ApplyOptions, RequiresClientPermissions } from '@sapphire/decorators';\nimport { Subcommand } from '@sapphire/plugin-subcommands';\nimport type { Message } from 'discord.js';\n\n(at)ApplyOptions<Subcommand.Options>({\n\taliases: ['cws'],\n\tdescription: 'A basic command with some subcommands',\n\tsubCommands: ['add', 'remove', 'reset', { input: 'show', default: true }]\n})\nexport default class extends Subcommand {\n    // Anyone should be able to view the result, but not modify\n\tpublic async show(message: Message) {\n\t\treturn message.channel.send('Showing!');\n\t}\n\n\t(at)RequiresClientPermissions('BAN_MEMBERS') // This subcommand requires the client to be able to ban members.\n\tpublic async add(message: Message) {\n\t\treturn message.channel.send('Adding!');\n\t}\n\n\t(at)RequiresClientPermissions('BAN_MEMBERS') // This subcommand requires the client to be able to ban members.\n\tpublic async remove(message: Message) {\n\t\treturn message.channel.send('Removing!');\n\t}\n\n\t(at)RequiresClientPermissions('BAN_MEMBERS') // This subcommand requires the client to be able to ban members.\n\tpublic async reset(message: Message) {\n\t\treturn message.channel.send('Resetting!');\n\t}\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 24,
              "name": "permissionsResolvable",
              "comment": {
                "description": "Permissions that the method should have.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": true,
              "optional": false,
              "type": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "PermissionResolvable",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 14,
      "name": "RequiresDMContext",
      "source": {
        "line": 192,
        "file": "djs-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L192"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 15,
          "name": "RequiresDMContext",
          "comment": {
            "description": "Requires the message to be run in a dm context, this decorator requires the first argument to be a `Message` instance",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 16,
              "name": "fallback",
              "comment": {
                "description": "The fallback value passed to `createFunctionInhibitor`",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 60,
                "name": "FunctionFallback",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 11,
      "name": "RequiresGuildContext",
      "source": {
        "line": 183,
        "file": "djs-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L183"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 12,
          "name": "RequiresGuildContext",
          "comment": {
            "description": "Requires the message to be run in a guild context, this decorator requires the first argument to be a `Message` instance",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 13,
              "name": "fallback",
              "comment": {
                "description": "The fallback value passed to `createFunctionInhibitor`",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 60,
                "name": "FunctionFallback",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 25,
      "name": "RequiresUserPermissions",
      "source": {
        "line": 148,
        "file": "djs-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/djs-decorators.ts#L148"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 26,
          "name": "RequiresUserPermissions",
          "comment": {
            "description": "Allows you to set permissions required for individual methods. This is particularly useful for subcommands that require specific permissions.",
            "blockTags": [
              {
                "name": "remark",
                "text": "This decorator applies to the user of the command. For setting permissions required for the client see {@link RequiresClientPermissions}"
              },
              {
                "name": "remark",
                "text": "This decorator makes the decorated function asynchronous, so any result should be `await`ed."
              },
              {
                "name": "example",
                "text": "```typescript\nimport { ApplyOptions, RequiresUserPermissions } from '@sapphire/decorators';\nimport { Subcommand } from '@sapphire/plugin-subcommands';\nimport type { Message } from 'discord.js';\n\n(at)ApplyOptions<Subcommand.Options>({\n\taliases: ['cws'],\n\tdescription: 'A basic command with some subcommands',\n\tsubCommands: ['add', 'remove', 'reset', { input: 'show', default: true }]\n})\nexport default class extends Subcommand {\n    // Anyone should be able to view the result, but not modify\n\tpublic async show(message: Message) {\n\t\treturn message.channel.send('Showing!');\n\t}\n\n\t(at)RequiresUserPermissions('BAN_MEMBERS') // This subcommand requires the user of the command to be able to ban members.\n\tpublic async add(message: Message) {\n\t\treturn message.channel.send('Adding!');\n\t}\n\n\t(at)RequiresUserPermissions('BAN_MEMBERS') // This subcommand requires the user of the command to be able to ban members.\n\tpublic async remove(message: Message) {\n\t\treturn message.channel.send('Removing!');\n\t}\n\n\t(at)RequiresUserPermissions('BAN_MEMBERS') // This subcommand requires the user of the command to be able to ban members.\n\tpublic async reset(message: Message) {\n\t\treturn message.channel.send('Resetting!');\n\t}\n}\n```"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 27,
              "name": "permissionsResolvable",
              "comment": {
                "description": "Permissions that the method should have.",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": true,
              "optional": false,
              "type": {
                "kind": "array",
                "type": {
                  "kind": "reference",
                  "id": null,
                  "name": "PermissionResolvable",
                  "packageName": "discord.js",
                  "typeArguments": []
                }
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 41,
      "name": "createClassDecorator",
      "source": {
        "line": 43,
        "file": "utils.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L43"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 42,
          "name": "createClassDecorator",
          "comment": {
            "description": "Utility to make a class decorator with lighter syntax and inferred types.",
            "blockTags": [
              {
                "name": "see",
                "text": "{@link ApplyOptions}"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 46,
              "name": "TFunction",
              "constraint": {
                "kind": "reflection",
                "reflection": {
                  "id": 43,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "utils.ts",
                      "line": 43,
                      "character": 55,
                      "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L43"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 44,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 45,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              },
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 47,
              "name": "fn",
              "comment": {
                "description": "The class to decorate",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 46,
                "name": "TFunction",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "ClassDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 48,
      "name": "createFunctionPrecondition",
      "source": {
        "line": 73,
        "file": "utils.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L73"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 49,
          "name": "createFunctionPrecondition",
          "comment": {
            "description": "Utility to make function preconditions.\n\n```typescript\n// No fallback (returns undefined)\nfunction requireGuild(value: number) {\n  return createFunctionPrecondition((message: Message) =>\n    message.guild !== null\n  );\n}\n\n// With fallback\nfunction requireGuild(\n  value: number,\n  fallback: () => unknown = () => undefined\n) {\n  return createFunctionPrecondition(\n    (message: Message) => message.guild !== null,\n    fallback\n  );\n}\n```",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 50,
              "name": "precondition",
              "comment": {
                "description": "The function that defines whether or not the function should be run, returning the returned value from fallback",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 57,
                "name": "FunctionPrecondition",
                "packageName": null,
                "typeArguments": []
              }
            },
            {
              "id": 51,
              "name": "fallback",
              "comment": {
                "description": "The fallback value that defines what the method should return in case the precondition fails",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": 60,
                "name": "FunctionFallback",
                "packageName": null,
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 38,
      "name": "createMethodDecorator",
      "source": {
        "line": 34,
        "file": "utils.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L34"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "signatures": [
        {
          "id": 39,
          "name": "createMethodDecorator",
          "comment": {
            "description": "Utility to make a method decorator with lighter syntax and inferred types.\n\n```typescript\n// Enumerable function\n\tfunction enumerableMethod(value: boolean) {\n\t\treturn createMethodDecorator((_target, _propertyKey, descriptor) => {\n\t\t\tdescriptor.enumerable = value;\n\t\t});\n\t}\n```",
            "blockTags": [],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 40,
              "name": "fn",
              "comment": {
                "description": "The method to decorate",
                "blockTags": [],
                "modifierTags": []
              },
              "rest": false,
              "optional": false,
              "type": {
                "kind": "reference",
                "id": null,
                "name": "MethodDecorator",
                "packageName": "typescript",
                "typeArguments": []
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": null,
            "name": "MethodDecorator",
            "packageName": "typescript",
            "typeArguments": []
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 35,
      "name": "ApplyOptionsCallbackParameters",
      "source": {
        "line": 64,
        "file": "piece-decorators.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/piece-decorators.ts#L64"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [
        {
          "id": 36,
          "name": "container",
          "source": {
            "line": 65,
            "file": "piece-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/piece-decorators.ts#L65"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 35,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Container",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        },
        {
          "id": 37,
          "name": "context",
          "source": {
            "line": 66,
            "file": "piece-decorators.ts",
            "path": ".",
            "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/piece-decorators.ts#L66"
          },
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "parentId": 35,
          "readonly": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "PieceContext",
            "packageName": "@sapphire/pieces",
            "typeArguments": []
          }
        }
      ],
      "methods": []
    },
    {
      "id": 60,
      "name": "FunctionFallback",
      "source": {
        "line": 14,
        "file": "utils.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L14"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [],
      "methods": []
    },
    {
      "id": 57,
      "name": "FunctionPrecondition",
      "source": {
        "line": 4,
        "file": "utils.ts",
        "path": ".",
        "url": "https://github.com/sapphiredev/utilities/blob/7d6ef74/packages/decorators/src/utils.ts#L4"
      },
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "external": false,
      "typeParameters": [],
      "properties": [],
      "methods": []
    }
  ],
  "namespaces": [],
  "typeAliases": [],
  "variables": []
}