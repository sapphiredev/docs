{
  "typeDocJsonParserVersion": "5.2.0",
  "id": 0,
  "name": "@sapphire/lexure",
  "version": "1.1.1",
  "readme": "<div align=\"center\">\n\n![Sapphire Logo](https://cdn.skyra.pw/gh-assets/sapphire-banner.png)\n\n# @sapphire/lexure\n\n**A powerful and fast parser for non-technical user input**\n\n[![GitHub](https://img.shields.io/github/license/sapphiredev/utilities)](https://github.com/sapphiredev/utilities/blob/main/LICENSE.md)\n[![codecov](https://codecov.io/gh/sapphiredev/utilities/branch/main/graph/badge.svg?token=OEGIV6RFDO)](https://codecov.io/gh/sapphiredev/utilities)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/@sapphire/lexure?logo=webpack&style=flat-square)](https://bundlephobia.com/lexure?p=@sapphire/lexure)\n[![npm](https://img.shields.io/npm/v/@sapphire/lexure?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/@sapphire/lexure)\n\n</div>\n\n## Description\n\nA powerful and fast parser and utilities for non-technical user input, inspired by [`lexure`](https://www.npmjs.com/package/lexure), powered by [`@sapphire/result`](https://www.npmjs.com/package/@sapphire/result).\n\nThe code in this package has been greatly inspired by [lexure] from [1Computer1].\n\n## Features\n\n-   Written in TypeScript\n-   Bundled with esbuild so it can be used in NodeJS and browsers\n-   Offers CommonJS, ESM and UMD bundles\n-   Fully tested\n-   Parses quoted input with multiple quote styles\n-   Parses flags and options with a customizable strategy system\n-   Keeps leading whitespace\n-   Includes a convenient wrapper to retrieve the parsed arguments\n-   Includes custom argument delimiter\n\n## Installation\n\nYou can use the following command to install this package, or replace `npm install` with your package manager of choice.\n\n```sh\nnpm install @sapphire/lexure\n```\n\n## Usage\n\n**Note:** While this section uses `require`, the imports match 1:1 with ESM imports. For example `const { Parser } = require('@sapphire/lexure')` equals `import { Parser } from '@sapphire/lexure'`.\n\n```typescript\nconst parser = new Parser(new PrefixedStrategy(['--', '/'], ['=', ':']));\nconst lexer = new Lexer({\n\tquotes: [\n\t\t['\"', '\"'],\n\t\t['“', '”'],\n\t\t['「', '」']\n\t]\n});\n\nconst content = 'foo bar';\nconst stream = new ArgumentStream(parser.run(lexer.run(content)));\n\nconsole.log(stream.single()); // Some { value: 'foo' }\nconsole.log(stream.single()); // Some { value: 'bar' }\nconsole.log(stream.single()); // None\n```\n\n---\n\n## Buy us some doughnuts\n\nSapphire Community is and always will be open source, even if we don't get donations. That being said, we know there are amazing people who may still want to donate just to show their appreciation. Thank you very much in advance!\n\nWe accept donations through Open Collective, Ko-fi, Paypal, Patreon and GitHub Sponsorships. You can use the buttons below to donate through your method of choice.\n\n|   Donate With   |                       Address                       |\n| :-------------: | :-------------------------------------------------: |\n| Open Collective | [Click Here](https://sapphirejs.dev/opencollective) |\n|      Ko-fi      |      [Click Here](https://sapphirejs.dev/kofi)      |\n|     Patreon     |    [Click Here](https://sapphirejs.dev/patreon)     |\n|     PayPal      |     [Click Here](https://sapphirejs.dev/paypal)     |\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://favware.tech/\"><img src=\"https://avatars3.githubusercontent.com/u/4019718?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeroen Claassens</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Code\">💻</a> <a href=\"#infra-favna\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#projectManagement-favna\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Documentation\">📖</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=favna\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/kyranet\"><img src=\"https://avatars0.githubusercontent.com/u/24852502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aura Román</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=kyranet\" title=\"Code\">💻</a> <a href=\"#projectManagement-kyranet\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3Akyranet\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=kyranet\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/PyroTechniac\"><img src=\"https://avatars2.githubusercontent.com/u/39341355?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gryffon Bellish</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=PyroTechniac\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3APyroTechniac\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=PyroTechniac\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/vladfrangu\"><img src=\"https://avatars3.githubusercontent.com/u/17960496?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vlad Frangu</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=vladfrangu\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3Avladfrangu\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/sapphiredev/utilities/pulls?q=is%3Apr+reviewed-by%3Avladfrangu\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#userTesting-vladfrangu\" title=\"User Testing\">📓</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=vladfrangu\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Stitch07\"><img src=\"https://avatars0.githubusercontent.com/u/29275227?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stitch07</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Stitch07\" title=\"Code\">💻</a> <a href=\"#projectManagement-Stitch07\" title=\"Project Management\">📆</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=Stitch07\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/depfu\"><img src=\"https://avatars3.githubusercontent.com/in/715?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>depfu[bot]</b></sub></a><br /><a href=\"#maintenance-depfu[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/allcontributors\"><img src=\"https://avatars0.githubusercontent.com/in/23186?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>allcontributors[bot]</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=allcontributors[bot]\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Nytelife26\"><img src=\"https://avatars1.githubusercontent.com/u/22531310?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tyler J Russell</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Nytelife26\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Alcremie\"><img src=\"https://avatars0.githubusercontent.com/u/54785334?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ivan Lieder</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Alcremie\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3AAlcremie\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://github.com/RealShadowNova\"><img src=\"https://avatars3.githubusercontent.com/u/46537907?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hezekiah Hendry</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=RealShadowNova\" title=\"Code\">💻</a> <a href=\"#tool-RealShadowNova\" title=\"Tools\">🔧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Vetlix\"><img src=\"https://avatars.githubusercontent.com/u/31412314?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vetlix</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Vetlix\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ethamitc\"><img src=\"https://avatars.githubusercontent.com/u/27776796?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ethan Mitchell</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=ethamitc\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/noftaly\"><img src=\"https://avatars.githubusercontent.com/u/34779161?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Elliot</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=noftaly\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://jurien.dev\"><img src=\"https://avatars.githubusercontent.com/u/5418114?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jurien Hamaker</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=jurienhamaker\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://fanoulis.dev/\"><img src=\"https://avatars.githubusercontent.com/u/38255093?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Charalampos Fanoulis</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=cfanoulis\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/dependabot\"><img src=\"https://avatars.githubusercontent.com/in/29110?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>dependabot[bot]</b></sub></a><br /><a href=\"#maintenance-dependabot[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://kaname.netlify.app/\"><img src=\"https://avatars.githubusercontent.com/u/56084970?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kaname</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=kaname-png\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nandhagk\"><img src=\"https://avatars.githubusercontent.com/u/62976649?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>nandhagk</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3Anandhagk\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://megatank58.me/\"><img src=\"https://avatars.githubusercontent.com/u/51410502?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>megatank58</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=megatank58\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/UndiedGamer\"><img src=\"https://avatars.githubusercontent.com/u/84702365?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>UndiedGamer</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=UndiedGamer\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Lioness100\"><img src=\"https://avatars.githubusercontent.com/u/65814829?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lioness100</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Lioness100\" title=\"Documentation\">📖</a> <a href=\"https://github.com/sapphiredev/utilities/commits?author=Lioness100\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://gitlab.com/DavidPH/\"><img src=\"https://avatars.githubusercontent.com/u/44669930?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>David</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=DavidPHH\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/apps/renovate\"><img src=\"https://avatars.githubusercontent.com/in/2740?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>renovate[bot]</b></sub></a><br /><a href=\"#maintenance-renovate[bot]\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://renovate.whitesourcesoftware.com/\"><img src=\"https://avatars.githubusercontent.com/u/25180681?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>WhiteSource Renovate</b></sub></a><br /><a href=\"#maintenance-renovate-bot\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://fc5570.me/\"><img src=\"https://avatars.githubusercontent.com/u/68158483?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>FC</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=FC5570\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Tokipudi\"><img src=\"https://avatars.githubusercontent.com/u/29551076?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jérémy de Saint Denis</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Tokipudi\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ItsMrCube\"><img src=\"https://avatars.githubusercontent.com/u/25201357?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>MrCube</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=ItsMrCube\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bitomic\"><img src=\"https://avatars.githubusercontent.com/u/35199700?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>bitomic</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=bitomic\" title=\"Code\">💻</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://c43721.dev/\"><img src=\"https://avatars.githubusercontent.com/u/55610086?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>c43721</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=c43721\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://commandtechno.com/\"><img src=\"https://avatars.githubusercontent.com/u/68407783?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Commandtechno</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Commandtechno\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/dhruv-kaushikk\"><img src=\"https://avatars.githubusercontent.com/u/73697546?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aura</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=dhruv-kaushikk\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://axis.moe/\"><img src=\"https://avatars.githubusercontent.com/u/54381371?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonathan</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=axisiscool\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/imranbarbhuiya\"><img src=\"https://avatars.githubusercontent.com/u/74945038?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Parbez</b></sub></a><br /><a href=\"#maintenance-imranbarbhuiya\" title=\"Maintenance\">🚧</a></td>\n    <td align=\"center\"><a href=\"https://github.com/NotKaskus\"><img src=\"https://avatars.githubusercontent.com/u/75168528?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Andrew</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=NotKaskus\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://linktr.ee/mzato0001\"><img src=\"https://avatars.githubusercontent.com/u/62367547?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mzato</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=Mzato0001\" title=\"Code\">💻</a> <a href=\"https://github.com/sapphiredev/utilities/issues?q=author%3AMzato0001\" title=\"Bug reports\">🐛</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/MajesticString\"><img src=\"https://avatars.githubusercontent.com/u/66224939?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Harry Allen</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=MajesticString\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/EvolutionX-10\"><img src=\"https://avatars.githubusercontent.com/u/85353424?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Evo</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=EvolutionX-10\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://enes.ovh/\"><img src=\"https://avatars.githubusercontent.com/u/61084101?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Enes Genç</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=enxg\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/muchnameless\"><img src=\"https://avatars.githubusercontent.com/u/12682826?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>muchnameless</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=muchnameless\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/r-priyam\"><img src=\"https://avatars.githubusercontent.com/u/50884372?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Priyam</b></sub></a><br /><a href=\"https://github.com/sapphiredev/utilities/commits?author=r-priyam\" title=\"Code\">💻</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n[lexure]: https://github.com/1Computer1/lexure\n[1computer1]: https://github.com/1Computer1\n",
  "changelog": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n# [@sapphire/lexure@1.1.1](https://github.com/sapphiredev/utilities/compare/@sapphire/lexure@1.1.0...@sapphire/lexure@1.1.1) - (2022-10-02)\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies (#466) ([dc08606](https://github.com/sapphiredev/utilities/commit/dc08606a97154e47c65536123ac5f8b1262f7bd2))\n\n# [@sapphire/lexure@1.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/lexure@1.0.2...@sapphire/lexure@1.1.0) - (2022-09-18)\n\n## 🏠 Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## 📝 Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n- Update @RealShadowNova as a contributor ([a869ba0](https://github.com/sapphiredev/utilities/commit/a869ba0abfad041610b9115187d426aebe671af6))\n\n## 🚀 Features\n\n- Add `join` and `joinRaw` (#458) ([4dc8e53](https://github.com/sapphiredev/utilities/commit/4dc8e533cae7fc89faaf972aef0047638c696ff4))\n\n# [@sapphire/lexure@1.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/lexure@1.0.1...@sapphire/lexure@1.0.2) - (2022-08-29)\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n# [@sapphire/lexure@1.1.0](https://github.com/sapphiredev/utilities/compare/@sapphire/lexure@1.0.2...@sapphire/lexure@1.1.0) - (2022-09-18)\n\n## 🏠 Refactor\n\n- Split `@sapphire/time-utilities` into 4 sub-packages (#462) ([574299a](https://github.com/sapphiredev/utilities/commit/574299a99e658f6500a2a7efa587a0919b2d1313))\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([e20f299](https://github.com/sapphiredev/utilities/commit/e20f29906e83cee000aaba9c6827e3bec5173d28))\n\n## 📝 Documentation\n\n- Change name of @kyranet (#451) ([df4fdef](https://github.com/sapphiredev/utilities/commit/df4fdefce18659975a4ebc224723638507d02d35))\n- Update @RealShadowNova as a contributor ([a869ba0](https://github.com/sapphiredev/utilities/commit/a869ba0abfad041610b9115187d426aebe671af6))\n\n## 🚀 Features\n\n- Add `join` and `joinRaw` (#458) ([4dc8e53](https://github.com/sapphiredev/utilities/commit/4dc8e533cae7fc89faaf972aef0047638c696ff4))\n\n# [@sapphire/lexure@1.0.2](https://github.com/sapphiredev/utilities/compare/@sapphire/lexure@1.0.1...@sapphire/lexure@1.0.2) - (2022-08-29)\n\n## 🐛 Bug Fixes\n\n- **deps:** Update all non-major dependencies ([2308bd7](https://github.com/sapphiredev/utilities/commit/2308bd74356b6b2e0c12995b25f4d8ade4803fe9))\n\n# [@sapphire/lexure@1.0.0](https://github.com/sapphiredev/utilities/tree/@sapphire/lexure@1.0.0) - (2022-07-22)\n\n## 🚀 Features\n\n- Add `@sapphire/lexure` package (#388) ([1fec581](https://github.com/sapphiredev/utilities/commit/1fec581dedca26aa07766b57b9724011320a2b8b))\n\n",
  "classes": [
    {
      "id": 1,
      "name": "ArgumentStream",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "ArgumentStream.ts",
        "path": "lib",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L5"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 2,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 9,
          "file": "ArgumentStream.ts",
          "path": "lib",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L9"
        },
        "parentId": 1,
        "parameters": [
          {
            "id": 4,
            "name": "results",
            "type": {
              "kind": "reference",
              "id": 257,
              "name": "ParserResult",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 5,
          "name": "results",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L6"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 257,
            "name": "ParserResult",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 6,
          "name": "state",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L7"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 150,
            "name": "State",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 8,
          "name": "finished",
          "comment": {
            "description": "Whether or not all ordered parameters were used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L17"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        },
        {
          "id": 10,
          "name": "length",
          "comment": {
            "description": "The amount of ordered parameters.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 24,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L24"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 12,
          "name": "remaining",
          "comment": {
            "description": "The remaining amount of ordered parameters.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 31,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L31"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 14,
          "name": "used",
          "comment": {
            "description": "The amount of ordered parameters that have been used.",
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 38,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L38"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        }
      ],
      "methods": [
        {
          "id": 103,
          "name": "filter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 497,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L497"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 104,
              "name": "filter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 105,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 106,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 497,
                          "character": 26,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L497"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 107,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 108,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 109,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 110,
          "name": "filterAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 514,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L514"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 111,
              "name": "filterAsync",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 112,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 113,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 514,
                          "character": 37,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L514"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 114,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 115,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 116,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Option",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 117,
          "name": "filterMap",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 531,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L531"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 118,
              "name": "filterMap",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 119,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 120,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 121,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 531,
                          "character": 32,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L531"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 122,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 123,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 119,
                                "name": "T"
                              }
                            ],
                            "name": "Option"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 124,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 119,
                      "name": "T",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 125,
          "name": "filterMapAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 549,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L549"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 126,
              "name": "filterMapAsync",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 127,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 128,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 129,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 549,
                          "character": 43,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L549"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 130,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 131,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 127,
                                    "name": "T"
                                  }
                                ],
                                "name": "Option"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 132,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Option",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": 127,
                          "name": "T",
                          "packageName": null,
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 51,
          "name": "find",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 248,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L248"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 52,
              "name": "find",
              "comment": {
                "description": "Returns the value of the first element in the array within `Option.some` where `predicate` returns `true`, and\n`Option.none` otherwise.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This does not support asynchronous results, refer to {@link findAsync}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n// Suppose args are from 'ba aa cc'.\n\nconsole.log(args.find((value) => value.startsWith('a')));\n// Some { value: 'aa' }\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 53,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 54,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 248,
                          "character": 24,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L248"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 55,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 56,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 57,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 58,
          "name": "findAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 282,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L282"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 59,
              "name": "findAsync",
              "comment": {
                "description": "Returns the value of the first element in the array within `Option.some` where `predicate` returns `true`, and\n`Option.none` otherwise.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is an asynchronous variant of {@link find}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n// Suppose args are from 'ba aa cc'.\n\nconsole.log(args.find((value) => value.startsWith('a')));\n// Some { value: 'aa' }\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 60,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 61,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 282,
                          "character": 35,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L282"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 62,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 63,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 64,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Option",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 65,
          "name": "findMap",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 317,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L317"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 66,
              "name": "findMap",
              "comment": {
                "description": "Returns the value of the first element in the array within `Option.some` where `predicate` returns `Some`, and\n`Option.none` otherwise.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This does not support asynchronous results, refer to {@link findMapAsync}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n// Suppose args are from 'ba aa cc'.\n\nconsole.log(args.find((value) => value.startsWith('a')));\n// Some { value: 'aa' }\n```"
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 67,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 68,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 69,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 317,
                          "character": 30,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L317"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 70,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 71,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 67,
                                "name": "T"
                              }
                            ],
                            "name": "Option"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 72,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 67,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 73,
          "name": "findMapAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 353,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L353"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 74,
              "name": "findMapAsync",
              "comment": {
                "description": "Returns the value of the first element in the array within `Option.some` where `predicate` returns `Some`, and\n`Option.none` otherwise.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is an asynchronous variant of {@link findMap}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n// Suppose args are from 'ba aa cc'.\n\nconsole.log(args.find((value) => value.startsWith('a')));\n// Some { value: 'aa' }\n```"
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 75,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 76,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 77,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 353,
                          "character": 41,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L353"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 78,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 79,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 75,
                                    "name": "T"
                                  }
                                ],
                                "name": "Option"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 80,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Option",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 75,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "findParse",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 405,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L405"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 82,
              "name": "findParse",
              "comment": {
                "description": "Finds and retrieves the first unused parameter that could be transformed.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is a variant of {@link findMap} that returns the errors on failure."
                  },
                  {
                    "name": "note",
                    "text": "This does not support asynchronous results, refer to {@link findParseAsync}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst parse = (value) => {\n  const number = Number(value);\n  return Number.isNaN(number)\n    ? Result.err(`Could not parse ${value} to a number`)\n    : Result.ok(number);\n};\n\n// Suppose args are from 'ba 1 cc'.\n\nconsole.log(args.findParse(parse));\n// Ok { value: 1 }\n\nconsole.log(args.findParse(parse));\n// Err {\n//   error: [\n//     'Could not parse ba to a number',\n//     'Could not parse cc to a number'\n//   ]\n// }\n```"
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error type."
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 83,
                  "name": "T",
                  "type": null,
                  "default": null
                },
                {
                  "id": 84,
                  "name": "E",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 85,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 86,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 405,
                          "character": 35,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L405"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 87,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 88,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 83,
                                "name": "T"
                              },
                              {
                                "type": "reference",
                                "id": 84,
                                "name": "E"
                              }
                            ],
                            "name": "Result"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 89,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Result",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 83,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 84,
                      "name": "E",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 90,
          "name": "findParseAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 437,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L437"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 91,
              "name": "findParseAsync",
              "comment": {
                "description": "Finds and retrieves the first unused parameter that could be transformed.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is a variant of {@link findMapAsync} that returns the errors on failure."
                  },
                  {
                    "name": "note",
                    "text": "This is an asynchronous variant of {@link findParse}."
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error type."
                  },
                  {
                    "name": "returns",
                    "text": "The found parameter's value."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 92,
                  "name": "T",
                  "type": null,
                  "default": null
                },
                {
                  "id": 93,
                  "name": "E",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 94,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 95,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 437,
                          "character": 46,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L437"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 96,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 97,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 92,
                                    "name": "T"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 93,
                                    "name": "E"
                                  }
                                ],
                                "name": "Result"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 98,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Result",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 92,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "array",
                        "type": {
                          "kind": "reference",
                          "id": 93,
                          "name": "E",
                          "packageName": null,
                          "typeArguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 133,
          "name": "flag",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 587,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L587"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 134,
              "name": "flag",
              "comment": {
                "description": "Checks whether any of the flags were given.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '--f --g':\n\nconsole.log(args.flag('f'));\n// true\n\nconsole.log(args.flag('g', 'h'));\n// true\n\nconsole.log(args.flag('h'));\n// false\n```"
                  },
                  {
                    "name": "returns",
                    "text": "Whether or not any of the flags were given."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 135,
                  "name": "keys",
                  "type": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 99,
          "name": "many",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 478,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L478"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 100,
              "name": "many",
              "comment": {
                "description": "Retrieves multiple unused parameters.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '1 2 3':\n\nconsole.log(join(args.many().unwrap()));\n// '1 2 3'\n```"
                  },
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '1 2 3':\n\nconsole.log(join(args.many(2).unwrap()));\n// '1 2'\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The unused parameters within the range."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 101,
                  "name": "limit",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                },
                {
                  "id": 102,
                  "name": "from",
                  "type": {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "array",
                    "type": {
                      "kind": "reference",
                      "id": 210,
                      "name": "Parameter",
                      "packageName": null,
                      "typeArguments": []
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 136,
          "name": "option",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 610,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L610"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 137,
              "name": "option",
              "comment": {
                "description": "Gets the last value of any option. When there are multiple names, the last value of the last found name is given.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '--a=1 --b=2 --c=3'.\nconsole.log(args.option('a'));\n// Some { value: '1' }\n\nconsole.log(args.option('b', 'c'));\n// Some { value: '3' }\n\nconsole.log(args.option('d'));\n// None {}\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The last value of the option, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 138,
                  "name": "keys",
                  "type": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 139,
          "name": "options",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 633,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L633"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 140,
              "name": "options",
              "comment": {
                "description": "Gets all values from all options.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '--a=1 --a=1 --b=2 --c=3'.\nconsole.log(args.option('a'));\n// Some { value: ['1', '1'] }\n\nconsole.log(args.option('b', 'c'));\n// Some { value: ['2', '3'] }\n\nconsole.log(args.option('d'));\n// None {}\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The values from all the options concatenated, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 141,
                  "name": "keys",
                  "type": {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    }
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "array",
                      "type": {
                        "kind": "intrinsic",
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 147,
          "name": "reset",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 654,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L654"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 148,
              "name": "reset",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 144,
          "name": "restore",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 650,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L650"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 145,
              "name": "restore",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 146,
                  "name": "state",
                  "type": {
                    "kind": "reference",
                    "id": 150,
                    "name": "State",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "void"
              }
            }
          ]
        },
        {
          "id": 142,
          "name": "save",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 643,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L643"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 143,
              "name": "save",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 150,
                "name": "State",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 15,
          "name": "single",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 64,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L64"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 16,
              "name": "single",
              "comment": {
                "description": "Retrieves the value of the next unused ordered token.",
                "blockTags": [
                  {
                    "name": "example",
                    "text": "```typescript\n// Assume args are '1 2 3':\n\nconsole.log(args.single());\n// Ok { value: '1' }\n\nconsole.log(args.single());\n// Ok { value: '2' }\n\nconsole.log(args.single());\n// Ok { value: '3' }\n\nconsole.log(args.single());\n// None\n```"
                  },
                  {
                    "name": "returns",
                    "text": "The value, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 17,
          "name": "singleMap",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 107,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L107"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 18,
              "name": "singleMap",
              "comment": {
                "description": "Retrieves the value of the next unused ordered token, but only if it could be transformed.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This does not support asynchronous results, refer to {@link singleMapAsync}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst parse = (value) => {\n  const number = Number(value);\n  return Number.isNaN(number) ? Option.none : Option.some(number);\n};\n\n// Assume args are '1 2 3':\n\nconsole.log(args.singleMap(parse));\n// Some { value: 1 }\n\nconsole.log(args.singleMap(parse));\n// Some { value: 2 }\n\nconsole.log(args.singleMap(parse));\n// Some { value: 3 }\n\nconsole.log(args.singleMap(parse));\n// None\n```"
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "returns",
                    "text": "The mapped value, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 19,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 20,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 21,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 107,
                          "character": 32,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L107"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 22,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 23,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 19,
                                "name": "T"
                              }
                            ],
                            "name": "Option"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 24,
                  "name": "useAnyways",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 19,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 25,
          "name": "singleMapAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 133,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L133"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 26,
              "name": "singleMapAsync",
              "comment": {
                "description": "Retrieves the value of the next unused ordered token, but only if it could be transformed.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is an asynchronous variant of {@link singleMap}."
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "returns",
                    "text": "The mapped value, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 27,
                  "name": "T",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 28,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 29,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 133,
                          "character": 43,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L133"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 30,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 31,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 27,
                                    "name": "T"
                                  }
                                ],
                                "name": "Option"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 32,
                  "name": "useAnyways",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Option",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 27,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "singleParse",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 185,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L185"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 34,
              "name": "singleParse",
              "comment": {
                "description": "Finds and retrieves the next unused parameter and transforms it.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is a variant of {@link findMap} that returns the errors on failure."
                  },
                  {
                    "name": "note",
                    "text": "This does not support asynchronous results, refer to {@link singleParseAsync}."
                  },
                  {
                    "name": "example",
                    "text": "```typescript\nconst parse = (value) => {\n  const number = Number(value);\n  return Number.isNaN(number)\n    ? Result.err(`Could not parse ${value} to a number`)\n    : Result.ok(number);\n};\n\n// Assume args are '1 2 3':\n\nconsole.log(args.singleParse(parse));\n// Ok { value: 1 }\n\nconsole.log(args.singleParse(parse));\n// Ok { value: 2 }\n\nconsole.log(args.singleParse(parse));\n// Ok { value: 3 }\n\nconsole.log(args.singleParse(parse));\n// Err { error: null }\n```"
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error type."
                  },
                  {
                    "name": "returns",
                    "text": "The transformed value, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 35,
                  "name": "T",
                  "type": null,
                  "default": null
                },
                {
                  "id": 36,
                  "name": "E",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 37,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 38,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 185,
                          "character": 37,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L185"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 39,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 40,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 35,
                                "name": "T"
                              },
                              {
                                "type": "reference",
                                "id": 36,
                                "name": "E"
                              }
                            ],
                            "name": "Result"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 41,
                  "name": "useAnyways",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Result",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 35,
                    "name": "T",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "union",
                    "types": [
                      {
                        "kind": "literal",
                        "value": "null"
                      },
                      {
                        "kind": "reference",
                        "id": 36,
                        "name": "E",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 42,
          "name": "singleParseAsync",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 212,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L212"
          },
          "parentId": 1,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 43,
              "name": "singleParseAsync",
              "comment": {
                "description": "Retrieves the value of the next unused ordered token, but only if it could be transformed.",
                "blockTags": [
                  {
                    "name": "note",
                    "text": "This is an asynchronous variant of {@link singleParse}."
                  },
                  {
                    "name": "typeparam",
                    "text": "T The output type."
                  },
                  {
                    "name": "typeparam",
                    "text": "E The error type."
                  },
                  {
                    "name": "returns",
                    "text": "The mapped value, if any."
                  }
                ],
                "modifierTags": []
              },
              "typeParameters": [
                {
                  "id": 44,
                  "name": "T",
                  "type": null,
                  "default": null
                },
                {
                  "id": 45,
                  "name": "E",
                  "type": null,
                  "default": null
                }
              ],
              "parameters": [
                {
                  "id": 46,
                  "name": "predicate",
                  "type": {
                    "kind": "reflection",
                    "reflection": {
                      "id": 47,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "lib/ArgumentStream.ts",
                          "line": 212,
                          "character": 48,
                          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L212"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 48,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 49,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 44,
                                    "name": "T"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 45,
                                    "name": "E"
                                  }
                                ],
                                "name": "Result"
                              }
                            ],
                            "name": "Promise",
                            "qualifiedName": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 50,
                  "name": "useAnyways",
                  "type": {
                    "kind": "intrinsic",
                    "type": "boolean"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Promise",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": null,
                    "name": "Result",
                    "packageName": null,
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 44,
                        "name": "T",
                        "packageName": null,
                        "typeArguments": []
                      },
                      {
                        "kind": "union",
                        "types": [
                          {
                            "kind": "literal",
                            "value": "null"
                          },
                          {
                            "kind": "reference",
                            "id": 45,
                            "name": "E",
                            "packageName": null,
                            "typeArguments": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 169,
      "name": "BaseParameter",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 1,
        "file": "BaseParameter.ts",
        "path": "lib/lexer/streams/parameters",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L1"
      },
      "external": false,
      "abstract": true,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 170,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 4,
          "file": "BaseParameter.ts",
          "path": "lib/lexer/streams/parameters",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L4"
        },
        "parentId": 169,
        "parameters": [
          {
            "id": 172,
            "name": "separators",
            "type": {
              "kind": "typeOperator",
              "operator": "readonly",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "properties": [
        {
          "id": 173,
          "name": "separators",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L2"
          },
          "parentId": 169,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 175,
          "name": "leading",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L8"
          },
          "parentId": 169,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 177,
          "name": "raw",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L12"
          },
          "parentId": 169,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 277,
      "name": "EmptyStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "EmptyStrategy.ts",
        "path": "lib/parser/strategies",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/EmptyStrategy.ts#L4"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [
        {
          "kind": "reference",
          "id": 284,
          "name": "IUnorderedStrategy",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 278,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": null,
        "parentId": 277,
        "parameters": []
      },
      "properties": [],
      "methods": [
        {
          "id": 280,
          "name": "matchFlag",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "EmptyStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/EmptyStrategy.ts#L5"
          },
          "parentId": 277,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 281,
              "name": "matchFlag",
              "comment": {
                "description": "Matches a flag.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 282,
          "name": "matchOption",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "EmptyStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/EmptyStrategy.ts#L9"
          },
          "parentId": 277,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 283,
              "name": "matchOption",
              "comment": {
                "description": "Matches an option.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "tuple",
                      "types": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 153,
      "name": "Lexer",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "Lexer.ts",
        "path": "lib/lexer",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L4"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 154,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 8,
          "file": "Lexer.ts",
          "path": "lib/lexer",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L8"
        },
        "parentId": 153,
        "parameters": [
          {
            "id": 156,
            "name": "options",
            "type": {
              "kind": "reference",
              "id": 166,
              "name": "Options",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 157,
          "name": "quotes",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "Lexer.ts",
            "path": "lib/lexer",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L5"
          },
          "parentId": 153,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "namedTupleMember",
                    "name": "open",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    "optional": false
                  },
                  {
                    "kind": "namedTupleMember",
                    "name": "close",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    },
                    "optional": false
                  }
                ]
              }
            }
          }
        },
        {
          "id": 158,
          "name": "separator",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "Lexer.ts",
            "path": "lib/lexer",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L6"
          },
          "parentId": 153,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": [
        {
          "id": 162,
          "name": "raw",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 17,
            "file": "Lexer.ts",
            "path": "lib/lexer",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L17"
          },
          "parentId": 153,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 163,
              "name": "raw",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 164,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 211,
                "name": "TokenStream",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 159,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "Lexer.ts",
            "path": "lib/lexer",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L13"
          },
          "parentId": 153,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 160,
              "name": "run",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 161,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 202,
                "name": "ParameterStream",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        }
      ]
    },
    {
      "id": 202,
      "name": "ParameterStream",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "ParameterStream.ts",
        "path": "lib/lexer/streams",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L5"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 203,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 9,
          "file": "ParameterStream.ts",
          "path": "lib/lexer/streams",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L9"
        },
        "parentId": 202,
        "parameters": [
          {
            "id": 205,
            "name": "stream",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Iterable",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 234,
                  "name": "Token",
                  "packageName": null,
                  "typeArguments": []
                }
              ]
            }
          }
        ]
      },
      "properties": [
        {
          "id": 207,
          "name": "separators",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ParameterStream.ts",
            "path": "lib/lexer/streams",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L7"
          },
          "parentId": 202,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        },
        {
          "id": 206,
          "name": "stream",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ParameterStream.ts",
            "path": "lib/lexer/streams",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L6"
          },
          "parentId": 202,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Iterable",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "reference",
                "id": 234,
                "name": "Token",
                "packageName": null,
                "typeArguments": []
              }
            ]
          }
        }
      ],
      "methods": [
        {
          "id": 208,
          "name": "[iterator]",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "ParameterStream.ts",
            "path": "lib/lexer/streams",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L13"
          },
          "parentId": 202,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 209,
              "name": "[iterator]",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Iterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "array",
                    "type": {
                      "kind": "intrinsic",
                      "type": "string"
                    }
                  },
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 246,
      "name": "Parser",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 6,
        "file": "Parser.ts",
        "path": "lib/parser",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/Parser.ts#L6"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 247,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 9,
          "file": "Parser.ts",
          "path": "lib/parser",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/Parser.ts#L9"
        },
        "parentId": 246,
        "parameters": [
          {
            "id": 249,
            "name": "strategy",
            "type": {
              "kind": "reference",
              "id": 284,
              "name": "IUnorderedStrategy",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 250,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "Parser.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/Parser.ts#L7"
          },
          "parentId": 246,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 284,
            "name": "IUnorderedStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 254,
          "name": "run",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 18,
            "file": "Parser.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/Parser.ts#L18"
          },
          "parentId": 246,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 255,
              "name": "run",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 256,
                  "name": "input",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Iterable",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 210,
                        "name": "Parameter",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 257,
                "name": "ParserResult",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 251,
          "name": "setUnorderedStrategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "Parser.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/Parser.ts#L13"
          },
          "parentId": 246,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 252,
              "name": "setUnorderedStrategy",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 253,
                  "name": "strategy",
                  "type": {
                    "kind": "reference",
                    "id": 284,
                    "name": "IUnorderedStrategy",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 246,
                "name": "Parser",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        }
      ]
    },
    {
      "id": 257,
      "name": "ParserResult",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "ParserResult.ts",
        "path": "lib/parser",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L5"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [],
      "construct": {
        "id": 258,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 11,
          "file": "ParserResult.ts",
          "path": "lib/parser",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L11"
        },
        "parentId": 257,
        "parameters": [
          {
            "id": 260,
            "name": "parser",
            "type": {
              "kind": "reference",
              "id": 246,
              "name": "Parser",
              "packageName": null,
              "typeArguments": []
            }
          }
        ]
      },
      "properties": [
        {
          "id": 262,
          "name": "flags",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L7"
          },
          "parentId": 257,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Set",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              }
            ]
          }
        },
        {
          "id": 263,
          "name": "options",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L8"
          },
          "parentId": 257,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": null,
            "name": "Map",
            "packageName": "typescript",
            "typeArguments": [
              {
                "kind": "intrinsic",
                "type": "string"
              },
              {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "id": 261,
          "name": "ordered",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L6"
          },
          "parentId": 257,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "array",
            "type": {
              "kind": "reference",
              "id": 210,
              "name": "Parameter",
              "packageName": null,
              "typeArguments": []
            }
          }
        },
        {
          "id": 264,
          "name": "strategy",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 9,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L9"
          },
          "parentId": 257,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "reference",
            "id": 284,
            "name": "IUnorderedStrategy",
            "packageName": null,
            "typeArguments": []
          }
        }
      ],
      "methods": [
        {
          "id": 265,
          "name": "parse",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L15"
          },
          "parentId": 257,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 266,
              "name": "parse",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 267,
                  "name": "parameters",
                  "type": {
                    "kind": "reference",
                    "id": null,
                    "name": "Iterable",
                    "packageName": "typescript",
                    "typeArguments": [
                      {
                        "kind": "reference",
                        "id": 210,
                        "name": "Parameter",
                        "packageName": null,
                        "typeArguments": []
                      }
                    ]
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": 257,
                "name": "ParserResult",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 274,
          "name": "parseOrdered",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 41,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L41"
          },
          "parentId": 257,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 275,
              "name": "parseOrdered",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 276,
                  "name": "parameter",
                  "type": {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 268,
          "name": "parsePossibleFlag",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 23,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L23"
          },
          "parentId": 257,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 269,
              "name": "parsePossibleFlag",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 270,
                  "name": "parameter",
                  "type": {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        },
        {
          "id": 271,
          "name": "parsePossibleOptions",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 30,
            "file": "ParserResult.ts",
            "path": "lib/parser",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/ParserResult.ts#L30"
          },
          "parentId": 257,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 272,
              "name": "parsePossibleOptions",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 273,
                  "name": "parameter",
                  "type": {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              ],
              "returnType": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ]
        }
      ]
    },
    {
      "id": 291,
      "name": "PrefixedStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "PrefixedStrategy.ts",
        "path": "lib/parser/strategies",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L4"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [
        {
          "kind": "reference",
          "id": 284,
          "name": "IUnorderedStrategy",
          "packageName": null,
          "typeArguments": []
        }
      ],
      "construct": {
        "id": 292,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 8,
          "file": "PrefixedStrategy.ts",
          "path": "lib/parser/strategies",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L8"
        },
        "parentId": 291,
        "parameters": [
          {
            "id": 294,
            "name": "prefixes",
            "type": {
              "kind": "typeOperator",
              "operator": "readonly",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          },
          {
            "id": 295,
            "name": "separators",
            "type": {
              "kind": "typeOperator",
              "operator": "readonly",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "properties": [
        {
          "id": 296,
          "name": "prefixes",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "PrefixedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L5"
          },
          "parentId": 291,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 297,
          "name": "separators",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "PrefixedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L6"
          },
          "parentId": 291,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        }
      ],
      "methods": [
        {
          "id": 298,
          "name": "matchFlag",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 13,
            "file": "PrefixedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L13"
          },
          "parentId": 291,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 299,
              "name": "matchFlag",
              "comment": {
                "description": "Matches a flag.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 300,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 301,
          "name": "matchOption",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 25,
            "file": "PrefixedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/PrefixedStrategy.ts#L25"
          },
          "parentId": 291,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 302,
              "name": "matchOption",
              "comment": {
                "description": "Matches an option.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 303,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "tuple",
                      "types": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 178,
      "name": "QuotedParameter",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "QuotedParameter.ts",
        "path": "lib/lexer/streams/parameters",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L4"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 169,
        "name": "BaseParameter",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 179,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 9,
          "file": "QuotedParameter.ts",
          "path": "lib/lexer/streams/parameters",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L9"
        },
        "parentId": 178,
        "parameters": [
          {
            "id": 181,
            "name": "separators",
            "type": {
              "kind": "typeOperator",
              "operator": "readonly",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          },
          {
            "id": 182,
            "name": "part",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Omit",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 238,
                  "name": "QuotedToken",
                  "packageName": null,
                  "typeArguments": []
                },
                {
                  "kind": "literal",
                  "value": "type"
                }
              ]
            }
          }
        ]
      },
      "properties": [
        {
          "id": 185,
          "name": "close",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "QuotedParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L7"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 184,
          "name": "open",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "QuotedParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L6"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 188,
          "name": "separators",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L2"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 183,
          "name": "value",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "QuotedParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L5"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 190,
          "name": "leading",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L8"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 187,
          "name": "raw",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 16,
            "file": "QuotedParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/QuotedParameter.ts#L16"
          },
          "parentId": 178,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 211,
      "name": "TokenStream",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L3"
      },
      "external": false,
      "abstract": false,
      "extendsType": null,
      "implementsType": [
        {
          "kind": "reference",
          "id": null,
          "name": "Iterable",
          "packageName": "typescript",
          "typeArguments": [
            {
              "kind": "reference",
              "id": 234,
              "name": "Token",
              "packageName": null,
              "typeArguments": []
            }
          ]
        }
      ],
      "construct": {
        "id": 212,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 9,
          "file": "TokenStream.ts",
          "path": "lib/lexer/streams/raw",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L9"
        },
        "parentId": 211,
        "parameters": [
          {
            "id": 214,
            "name": "lexer",
            "type": {
              "kind": "reference",
              "id": 153,
              "name": "Lexer",
              "packageName": null,
              "typeArguments": []
            }
          },
          {
            "id": 215,
            "name": "input",
            "type": {
              "kind": "intrinsic",
              "type": "string"
            }
          }
        ]
      },
      "properties": [
        {
          "id": 216,
          "name": "input",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 4,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L4"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 219,
          "name": "position",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 7,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L7"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "number"
          }
        },
        {
          "id": 217,
          "name": "quotes",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L5"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "tuple",
                "types": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        {
          "id": 218,
          "name": "separator",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 6,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L6"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 221,
          "name": "finished",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 15,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L15"
          },
          "parentId": 211,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ],
      "methods": [
        {
          "id": 228,
          "name": "[iterator]",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 19,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L19"
          },
          "parentId": 211,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 229,
              "name": "[iterator]",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Iterator",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "reference",
                    "id": 234,
                    "name": "Token",
                    "packageName": null,
                    "typeArguments": []
                  },
                  {
                    "kind": "intrinsic",
                    "type": "any"
                  },
                  {
                    "kind": "intrinsic",
                    "type": "undefined"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 226,
          "name": "getParameter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 50,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L50"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 227,
              "name": "getParameter",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "reference",
                "id": 235,
                "name": "WordToken",
                "packageName": null,
                "typeArguments": []
              }
            }
          ]
        },
        {
          "id": 224,
          "name": "getPossibleQuotedArgument",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 34,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L34"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 225,
              "name": "getPossibleQuotedArgument",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": 238,
                    "name": "QuotedToken",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 222,
          "name": "getPossibleSeparator",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 25,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L25"
          },
          "parentId": 211,
          "accessibility": "private",
          "abstract": false,
          "static": false,
          "signatures": [
            {
              "id": 223,
              "name": "getPossibleSeparator",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [],
              "returnType": {
                "kind": "union",
                "types": [
                  {
                    "kind": "literal",
                    "value": "null"
                  },
                  {
                    "kind": "reference",
                    "id": 243,
                    "name": "SeparatorToken",
                    "packageName": null,
                    "typeArguments": []
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 191,
      "name": "WordParameter",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "WordParameter.ts",
        "path": "lib/lexer/streams/parameters",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/WordParameter.ts#L4"
      },
      "external": false,
      "abstract": false,
      "extendsType": {
        "kind": "reference",
        "id": 169,
        "name": "BaseParameter",
        "packageName": null,
        "typeArguments": []
      },
      "implementsType": [],
      "construct": {
        "id": 192,
        "name": "constructor",
        "comment": {
          "description": null,
          "blockTags": [],
          "modifierTags": []
        },
        "source": {
          "line": 7,
          "file": "WordParameter.ts",
          "path": "lib/lexer/streams/parameters",
          "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/WordParameter.ts#L7"
        },
        "parentId": 191,
        "parameters": [
          {
            "id": 194,
            "name": "separators",
            "type": {
              "kind": "typeOperator",
              "operator": "readonly",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          },
          {
            "id": 195,
            "name": "part",
            "type": {
              "kind": "reference",
              "id": null,
              "name": "Omit",
              "packageName": "typescript",
              "typeArguments": [
                {
                  "kind": "reference",
                  "id": 235,
                  "name": "WordToken",
                  "packageName": null,
                  "typeArguments": []
                },
                {
                  "kind": "literal",
                  "value": "type"
                }
              ]
            }
          }
        ]
      },
      "properties": [
        {
          "id": 199,
          "name": "separators",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 2,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L2"
          },
          "parentId": 191,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "typeOperator",
            "operator": "readonly",
            "type": {
              "kind": "array",
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          }
        },
        {
          "id": 196,
          "name": "value",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 5,
            "file": "WordParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/WordParameter.ts#L5"
          },
          "parentId": 191,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": true,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 201,
          "name": "leading",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "BaseParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/BaseParameter.ts#L8"
          },
          "parentId": 191,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 198,
          "name": "raw",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 12,
            "file": "WordParameter.ts",
            "path": "lib/lexer/streams/parameters",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/parameters/WordParameter.ts#L12"
          },
          "parentId": 191,
          "accessibility": "public",
          "abstract": false,
          "static": false,
          "readonly": false,
          "optional": false,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    }
  ],
  "constants": [],
  "enums": [
    {
      "id": 230,
      "name": "TokenType",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 58,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L58"
      },
      "external": false,
      "properties": [
        {
          "id": 231,
          "name": "Parameter",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 59,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L59"
          },
          "parentId": 230,
          "value": "0"
        },
        {
          "id": 232,
          "name": "Quoted",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 60,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L60"
          },
          "parentId": 230,
          "value": "1"
        },
        {
          "id": 233,
          "name": "Separator",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 61,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L61"
          },
          "parentId": 230,
          "value": "2"
        }
      ]
    }
  ],
  "functions": [
    {
      "id": 304,
      "name": "join",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 9,
        "file": "util.ts",
        "path": "lib/util",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/util/util.ts#L9"
      },
      "external": false,
      "signatures": [
        {
          "id": 305,
          "name": "join",
          "comment": {
            "description": "Joins the parameters by their `leading` value, using the `value` property.",
            "blockTags": [
              {
                "name": "seealso",
                "text": "{@link joinRaw} for the version using `raw` instead of `value`."
              },
              {
                "name": "returns",
                "text": "The result of joining the parameters."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 306,
              "name": "parameters",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    },
    {
      "id": 307,
      "name": "joinRaw",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 28,
        "file": "util.ts",
        "path": "lib/util",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/util/util.ts#L28"
      },
      "external": false,
      "signatures": [
        {
          "id": 308,
          "name": "joinRaw",
          "comment": {
            "description": "Joins the parameters by their `leading` value, using the `raw` property.",
            "blockTags": [
              {
                "name": "seealso",
                "text": "{@link join} for the version using `value` instead of `raw`."
              },
              {
                "name": "returns",
                "text": "The result of joining the parameters."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 309,
              "name": "parameters",
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "reference",
                    "id": 210,
                    "name": "Parameter",
                    "packageName": null,
                    "typeArguments": []
                  }
                }
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ]
    }
  ],
  "interfaces": [
    {
      "id": 284,
      "name": "IUnorderedStrategy",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "IUnorderedStrategy.ts",
        "path": "lib/parser/strategies",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/IUnorderedStrategy.ts#L3"
      },
      "external": false,
      "properties": [],
      "methods": [
        {
          "id": 285,
          "name": "matchFlag",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 8,
            "file": "IUnorderedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/IUnorderedStrategy.ts#L8"
          },
          "parentId": 284,
          "signatures": [
            {
              "id": 286,
              "name": "matchFlag",
              "comment": {
                "description": "Matches a flag.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 287,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 288,
          "name": "matchOption",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 14,
            "file": "IUnorderedStrategy.ts",
            "path": "lib/parser/strategies",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/parser/strategies/IUnorderedStrategy.ts#L14"
          },
          "parentId": 284,
          "signatures": [
            {
              "id": 289,
              "name": "matchOption",
              "comment": {
                "description": "Matches an option.",
                "blockTags": [],
                "modifierTags": []
              },
              "typeParameters": [],
              "parameters": [
                {
                  "id": 290,
                  "name": "input",
                  "type": {
                    "kind": "intrinsic",
                    "type": "string"
                  }
                }
              ],
              "returnType": {
                "kind": "reference",
                "id": null,
                "name": "Option",
                "packageName": null,
                "typeArguments": [
                  {
                    "kind": "typeOperator",
                    "operator": "readonly",
                    "type": {
                      "kind": "tuple",
                      "types": [
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        {
                          "kind": "intrinsic",
                          "type": "string"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "id": 238,
      "name": "QuotedToken",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 71,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L71"
      },
      "external": false,
      "properties": [
        {
          "id": 242,
          "name": "close",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 75,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L75"
          },
          "parentId": 238,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 241,
          "name": "open",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 74,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L74"
          },
          "parentId": 238,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        },
        {
          "id": 239,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 72,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L72"
          },
          "parentId": 238,
          "readonly": true,
          "type": {
            "kind": "reference",
            "id": 232,
            "name": "Quoted",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 240,
          "name": "value",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 73,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L73"
          },
          "parentId": 238,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 243,
      "name": "SeparatorToken",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 78,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L78"
      },
      "external": false,
      "properties": [
        {
          "id": 244,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 79,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L79"
          },
          "parentId": 243,
          "readonly": true,
          "type": {
            "kind": "reference",
            "id": 233,
            "name": "Separator",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 245,
          "name": "value",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 80,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L80"
          },
          "parentId": 243,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    },
    {
      "id": 235,
      "name": "WordToken",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 66,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L66"
      },
      "external": false,
      "properties": [
        {
          "id": 236,
          "name": "type",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 67,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L67"
          },
          "parentId": 235,
          "readonly": true,
          "type": {
            "kind": "reference",
            "id": 231,
            "name": "Parameter",
            "packageName": null,
            "typeArguments": []
          }
        },
        {
          "id": 237,
          "name": "value",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 68,
            "file": "TokenStream.ts",
            "path": "lib/lexer/streams/raw",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L68"
          },
          "parentId": 235,
          "readonly": true,
          "type": {
            "kind": "intrinsic",
            "type": "string"
          }
        }
      ],
      "methods": []
    }
  ],
  "namespaces": [
    {
      "id": 149,
      "name": "ArgumentStream",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 5,
        "file": "ArgumentStream.ts",
        "path": "lib",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L5"
      },
      "external": false,
      "classes": [],
      "constants": [],
      "enums": [],
      "functions": [],
      "interfaces": [
        {
          "id": 150,
          "name": "State",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 660,
            "file": "ArgumentStream.ts",
            "path": "lib",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L660"
          },
          "external": false,
          "properties": [
            {
              "id": 152,
              "name": "position",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "source": {
                "line": 662,
                "file": "ArgumentStream.ts",
                "path": "lib",
                "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L662"
              },
              "parentId": 150,
              "readonly": false,
              "type": {
                "kind": "intrinsic",
                "type": "number"
              }
            },
            {
              "id": 151,
              "name": "used",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "source": {
                "line": 661,
                "file": "ArgumentStream.ts",
                "path": "lib",
                "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/ArgumentStream.ts#L661"
              },
              "parentId": 150,
              "readonly": false,
              "type": {
                "kind": "reference",
                "id": null,
                "name": "Set",
                "packageName": "typescript",
                "typeArguments": [
                  {
                    "kind": "intrinsic",
                    "type": "number"
                  }
                ]
              }
            }
          ],
          "methods": []
        }
      ],
      "namespaces": [],
      "typeAliases": []
    },
    {
      "id": 165,
      "name": "Lexer",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 4,
        "file": "Lexer.ts",
        "path": "lib/lexer",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L4"
      },
      "external": false,
      "classes": [],
      "constants": [],
      "enums": [],
      "functions": [],
      "interfaces": [
        {
          "id": 166,
          "name": "Options",
          "comment": {
            "description": null,
            "blockTags": [],
            "modifierTags": []
          },
          "source": {
            "line": 23,
            "file": "Lexer.ts",
            "path": "lib/lexer",
            "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L23"
          },
          "external": false,
          "properties": [
            {
              "id": 168,
              "name": "quotes",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "source": {
                "line": 25,
                "file": "Lexer.ts",
                "path": "lib/lexer",
                "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L25"
              },
              "parentId": 166,
              "readonly": false,
              "type": {
                "kind": "typeOperator",
                "operator": "readonly",
                "type": {
                  "kind": "array",
                  "type": {
                    "kind": "tuple",
                    "types": [
                      {
                        "kind": "namedTupleMember",
                        "name": "open",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        "optional": false
                      },
                      {
                        "kind": "namedTupleMember",
                        "name": "close",
                        "type": {
                          "kind": "intrinsic",
                          "type": "string"
                        },
                        "optional": false
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 167,
              "name": "separator",
              "comment": {
                "description": null,
                "blockTags": [],
                "modifierTags": []
              },
              "source": {
                "line": 24,
                "file": "Lexer.ts",
                "path": "lib/lexer",
                "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/Lexer.ts#L24"
              },
              "parentId": 166,
              "readonly": false,
              "type": {
                "kind": "intrinsic",
                "type": "string"
              }
            }
          ],
          "methods": []
        }
      ],
      "namespaces": [],
      "typeAliases": []
    }
  ],
  "typeAliases": [
    {
      "id": 210,
      "name": "Parameter",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 28,
        "file": "ParameterStream.ts",
        "path": "lib/lexer/streams",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/ParameterStream.ts#L28"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 178,
            "name": "QuotedParameter",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 191,
            "name": "WordParameter",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    },
    {
      "id": 234,
      "name": "Token",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 64,
        "file": "TokenStream.ts",
        "path": "lib/lexer/streams/raw",
        "url": "https://github.com/sapphiredev/utilities/blob/6b03a62/packages/lexure/src/lib/lexer/streams/raw/TokenStream.ts#L64"
      },
      "external": false,
      "typeParameters": [],
      "type": {
        "kind": "union",
        "types": [
          {
            "kind": "reference",
            "id": 235,
            "name": "WordToken",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 238,
            "name": "QuotedToken",
            "packageName": null,
            "typeArguments": []
          },
          {
            "kind": "reference",
            "id": 243,
            "name": "SeparatorToken",
            "packageName": null,
            "typeArguments": []
          }
        ]
      }
    }
  ]
}